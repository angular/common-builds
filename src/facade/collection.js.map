{"version":3,"sources":["../../../../../modules/@angular/common/src/facade/collection.ts"],"names":[],"mappings":"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","file":"collection.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getSymbolIterator, isJsObject, isPresent} from './lang';\n/**\n * Wraps Javascript Objects\n */\nexport class StringMapWrapper {\n/**\n * @param {?} m1\n * @param {?} m2\n * @return {?}\n */\nstatic merge<V>(m1: {[key: string]: V}, m2: {[key: string]: V}): {[key: string]: V} {\n    const /** @type {?} */ m: {[key: string]: V} = {};\n\n    for (const /** @type {?} */ k of Object.keys(m1)) {\n      m[k] = m1[k];\n    }\n\n    for (const /** @type {?} */ k of Object.keys(m2)) {\n      m[k] = m2[k];\n    }\n\n    return m;\n  }\n/**\n * @param {?} m1\n * @param {?} m2\n * @return {?}\n */\nstatic equals<V>(m1: {[key: string]: V}, m2: {[key: string]: V}): boolean {\n    const /** @type {?} */ k1 = Object.keys(m1);\n    const /** @type {?} */ k2 = Object.keys(m2);\n\n    if (k1.length != k2.length) {\n      return false;\n    }\n\n    for (let /** @type {?} */ i = 0; i < k1.length; i++) {\n      const /** @type {?} */ key = k1[i];\n      if (m1[key] !== m2[key]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n */\nexport interface Predicate<T> { (value: T, index?: number, array?: T[]): boolean; }\nexport class ListWrapper {\n/**\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nstatic findLast<T>(arr: T[], condition: (value: T) => boolean): T {\n    for (let /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n      if (condition(arr[i])) {\n        return arr[i];\n      }\n    }\n    return null;\n  }\n/**\n * @param {?} list\n * @param {?} items\n * @return {?}\n */\nstatic removeAll<T>(list: T[], items: T[]) {\n    for (let /** @type {?} */ i = 0; i < items.length; ++i) {\n      const /** @type {?} */ index = list.indexOf(items[i]);\n      if (index > -1) {\n        list.splice(index, 1);\n      }\n    }\n  }\n/**\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nstatic remove<T>(list: T[], el: T): boolean {\n    const /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n      list.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nstatic equals(a: any[], b: any[]): boolean {\n    if (a.length != b.length) return false;\n    for (let /** @type {?} */ i = 0; i < a.length; ++i) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n/**\n * @param {?} list\n * @return {?}\n */\nstatic flatten<T>(list: Array<T|T[]>): T[] {\n    return list.reduce((flat: any[], item: T | T[]): T[] => {\n      const /** @type {?} */ flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n      return ( /** @type {?} */((<T[]>flat))).concat(flatItem);\n    }, []);\n  }\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isListLikeIterable(obj: any): boolean {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) ||\n      (!(obj instanceof Map) &&      // JS Map are iterables but return entries as [k, v]\n       getSymbolIterator() in obj);  // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nexport function areIterablesEqual(\n    a: any, b: any, comparator: (a: any, b: any) => boolean): boolean {\n  const /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n  const /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n\n  while (true) {\n    const /** @type {?} */ item1 = iterator1.next();\n    const /** @type {?} */ item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nexport function iterateListLike(obj: any, fn: (p: any) => any) {\n  if (Array.isArray(obj)) {\n    for (let /** @type {?} */ i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const /** @type {?} */ iterator = obj[getSymbolIterator()]();\n    let /** @type {?} */ item: any;\n    while (!((item = iterator.next()).done)) {\n      fn(item.value);\n    }\n  }\n}\n"]}