{"version":3,"sources":["../../../../../modules/@angular/common/src/facade/lang.ts"],"names":[],"mappings":"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","file":"lang.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport interface BrowserNodeGlobal {\n  Object: typeof Object;\n  Array: typeof Array;\n  Map: typeof Map;\n  Set: typeof Set;\n  Date: DateConstructor;\n  RegExp: RegExpConstructor;\n  JSON: typeof JSON;\n  Math: any;  // typeof Math;\n  assert(condition: any): void;\n  Reflect: any;\n  getAngularTestability: Function;\n  getAllAngularTestabilities: Function;\n  getAllAngularRootElements: Function;\n  frameworkStabilizers: Array<Function>;\n  setTimeout: Function;\n  clearTimeout: Function;\n  setInterval: Function;\n  clearInterval: Function;\n  encodeURI: Function;\n}\n\n// TODO(jteplitz602): Load WorkerGlobalScope from lib.webworker.d.ts file #3492\ndeclare var WorkerGlobalScope: any /** TODO #9100 */;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any /** TODO #9100 */;\n\nlet /** @type {?} */ globalScope: BrowserNodeGlobal;\nif (typeof window === 'undefined') {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n    // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n    globalScope = /** @type {?} */(( <any>self));\n  } else {\n    globalScope = /** @type {?} */(( <any>global));\n  }\n} else {\n  globalScope = /** @type {?} */(( <any>window));\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nexport function scheduleMicroTask(fn: Function) {\n  Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n\n// Need to declare a new variable for global here since TypeScript\n// exports the original value of the symbol.\nconst /** @type {?} */ _global: BrowserNodeGlobal = globalScope;\n\nexport {_global as global};\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n\n// TODO: remove calls to assert in production environment\n// Note: Can't just export this and import in in other files\n// as `assert` is a reserved keyword in Dart\n_global.assert = function assert(condition) {\n  // TODO: to be fixed properly via #2830, noop for now\n};\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isPresent(obj: any): boolean {\n  return obj != null;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isBlank(obj: any): boolean {\n  return obj == null;\n}\n\nconst /** @type {?} */ STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isStrictStringMap(obj: any): boolean {\n  return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  const /** @type {?} */ res = token.toString();\n  const /** @type {?} */ newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\nexport class NumberWrapper {\n/**\n * @param {?} text\n * @return {?}\n */\nstatic parseIntAutoRadix(text: string): number {\n    const /** @type {?} */ result: number = parseInt(text);\n    if (isNaN(result)) {\n      throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nstatic isNumeric(value: any): boolean { return !isNaN(value - parseFloat(value)); }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function looseIdentical(a: any, b: any): boolean {\n  return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} o\n * @return {?}\n */\nexport function isJsObject(o: any): boolean {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function print(obj: Error | Object) {\n  // tslint:disable-next-line:no-console\n  console.log(obj);\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function warn(obj: Error | Object) {\n  console.warn(obj);\n}\n/**\n * @param {?} global\n * @param {?} path\n * @param {?} value\n * @return {?}\n */\nexport function setValueOnPath(global: any, path: string, value: any) {\n  const /** @type {?} */ parts = path.split('.');\n  let /** @type {?} */ obj: any = global;\n  while (parts.length > 1) {\n    const /** @type {?} */ name = parts.shift();\n    if (obj.hasOwnProperty(name) && obj[name] != null) {\n      obj = obj[name];\n    } else {\n      obj = obj[name] = {};\n    }\n  }\n  if (obj === undefined || obj === null) {\n    obj = {};\n  }\n  obj[parts.shift()] = value;\n}\n\n// When Symbol.iterator doesn't exist, retrieves the key used in es6-shim\ndeclare const Symbol: any;\nlet /** @type {?} */ _symbolIterator: any = null;\n/**\n * @return {?}\n */\nexport function getSymbolIterator(): string|symbol {\n  if (!_symbolIterator) {\n    if (( /** @type {?} */((<any>globalScope))).Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n        const /** @type {?} */ key = keys[i];\n        if (key !== 'entries' && key !== 'size' &&\n            ( /** @type {?} */((Map as any))).prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isPrimitive(obj: any): boolean {\n  return !isJsObject(obj);\n}\n/**\n * @param {?} s\n * @return {?}\n */\nexport function escapeRegExp(s: string): string {\n  return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\n"]}