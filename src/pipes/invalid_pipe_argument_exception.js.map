{"version":3,"file":"invalid_pipe_argument_exception.js","sourceRoot":"","sources":["../../../../../modules/@angular/common/src/pipes/invalid_pipe_argument_exception.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;;AAEH,2BAA4B,sBAAsB,CAAC,CAAA;AACnD,qBAA8B,gBAAgB,CAAC,CAAA;AAE/C;IAAkD,gDAAa;IAC7D,sCAAY,IAAU,EAAE,KAAa;QACnC,kBAAM,uBAAqB,KAAK,oBAAe,gBAAS,CAAC,IAAI,CAAC,MAAG,CAAC,CAAC;IACrE,CAAC;IACH,mCAAC;AAAD,CAAC,AAJD,CAAkD,0BAAa,GAI9D;AAJY,oCAA4B,+BAIxC,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BaseException} from '../facade/exceptions';\nimport {Type, stringify} from '../facade/lang';\n\nexport class InvalidPipeArgumentException extends BaseException {\n  constructor(type: Type, value: Object) {\n    super(`Invalid argument '${value}' for pipe '${stringify(type)}'`);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}