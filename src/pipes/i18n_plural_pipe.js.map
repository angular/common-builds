{"version":3,"file":"i18n_plural_pipe.js","sourceRoot":"","sources":["../../../../../modules/@angular/common/src/pipes/i18n_plural_pipe.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,qBAAkC,eAAe,CAAC,CAAA;AAClD,qBAAkD,gBAAgB,CAAC,CAAA;AACnE,6BAAgD,iBAAiB,CAAC,CAAA;AAClE,gDAA2C,mCAAmC,CAAC,CAAA;AAE/E,IAAM,qBAAqB,GAAW,IAAI,CAAC;AAC3C;IACE,wBAAoB,aAA6B;QAA7B,kBAAa,GAAb,aAAa,CAAgB;IAAG,CAAC;IAErD,kCAAS,GAAT,UAAU,KAAa,EAAE,SAAoC;QAC3D,EAAE,CAAC,CAAC,cAAO,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,EAAE,CAAC;QAE9B,EAAE,CAAC,CAAC,CAAC,kBAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,IAAI,8DAA4B,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QACpE,CAAC;QAED,IAAM,GAAG,GAAG,gCAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAEhG,MAAM,CAAC,oBAAa,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,qBAAqB,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC3F,CAAC;IACH,kBAAkB;IACX,yBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,WAAI,EAAE,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,EAAC,EAAG,EAAE;KACzD,CAAC;IACF,kBAAkB;IACX,6BAAc,GAA2D;QAChF,EAAC,IAAI,EAAE,6BAAc,GAAG;KACvB,CAAC;IACF,qBAAC;AAAD,CAAC,AAtBD,IAsBC;AAtBY,sBAAc,iBAsB1B,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {StringWrapper, isBlank, isStringMap} from '../facade/lang';\nimport {NgLocalization, getPluralCategory} from '../localization';\nimport {InvalidPipeArgumentException} from './invalid_pipe_argument_exception';\n\nconst _INTERPOLATION_REGEXP: RegExp = /#/g;\nexport class I18nPluralPipe implements PipeTransform {\n  constructor(private _localization: NgLocalization) {}\n\n  transform(value: number, pluralMap: {[count: string]: string}): string {\n    if (isBlank(value)) return '';\n\n    if (!isStringMap(pluralMap)) {\n      throw new InvalidPipeArgumentException(I18nPluralPipe, pluralMap);\n    }\n\n    const key = getPluralCategory(value, Object.getOwnPropertyNames(pluralMap), this._localization);\n\n    return StringWrapper.replaceAll(pluralMap[key], _INTERPOLATION_REGEXP, value.toString());\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'i18nPlural', pure: true}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: NgLocalization, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}