{"version":3,"sources":["../../../../../modules/@angular/common/src/pipes/intl.ts"],"names":[],"mappings":"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","file":"intl.js","sourceRoot":"","sourcesContent":["\nexport type NumberFormatStyle = number;\nexport let NumberFormatStyle: any = {};\nNumberFormatStyle.Decimal = 0;\nNumberFormatStyle.Percent = 1;\nNumberFormatStyle.Currency = 2;\nNumberFormatStyle[NumberFormatStyle.Decimal] = \"Decimal\";\nNumberFormatStyle[NumberFormatStyle.Percent] = \"Percent\";\nNumberFormatStyle[NumberFormatStyle.Currency] = \"Currency\";\n\nexport class NumberFormatter {\n/**\n * @param {?} num\n * @param {?} locale\n * @param {?} style\n * @param {?=} __3\n * @return {?}\n */\nstatic format(\n      num: number, locale: string, style: NumberFormatStyle,\n      {minimumIntegerDigits, minimumFractionDigits, maximumFractionDigits, currency,\n       currencyAsSymbol = false}: {\n        minimumIntegerDigits?: number,\n        minimumFractionDigits?: number,\n        maximumFractionDigits?: number,\n        currency?: string,\n        currencyAsSymbol?: boolean\n      } = {}): string {\n    const /** @type {?} */ options: Intl.NumberFormatOptions = {\n      minimumIntegerDigits,\n      minimumFractionDigits,\n      maximumFractionDigits,\n      style: NumberFormatStyle[style].toLowerCase()\n    };\n\n    if (style == NumberFormatStyle.Currency) {\n      options.currency = currency;\n      options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n    }\n    return new Intl.NumberFormat(locale, options).format(num);\n  }\n}\n\ntype DateFormatterFn = (date: Date, locale: string) => string;\n\nconst /** @type {?} */ DATE_FORMATS_SPLIT =\n    /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n\nconst /** @type {?} */ PATTERN_ALIASES: {[format: string]: DateFormatterFn} = {\n  // Keys are quoted so they do not get renamed during closure compilation.\n  'yMMMdjms': datePartGetterFactory(combine([\n    digitCondition('year', 1),\n    nameCondition('month', 3),\n    digitCondition('day', 1),\n    digitCondition('hour', 1),\n    digitCondition('minute', 1),\n    digitCondition('second', 1),\n  ])),\n  'yMdjm': datePartGetterFactory(combine([\n    digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n    digitCondition('hour', 1), digitCondition('minute', 1)\n  ])),\n  'yMMMMEEEEd': datePartGetterFactory(combine([\n    digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n    digitCondition('day', 1)\n  ])),\n  'yMMMMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n  'yMMMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n  'yMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n  'jms': datePartGetterFactory(combine(\n      [digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n  'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n};\n\nconst /** @type {?} */ DATE_FORMATS: {[format: string]: DateFormatterFn} = {\n  // Keys are quoted so they do not get renamed.\n  'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n  'yy': datePartGetterFactory(digitCondition('year', 2)),\n  'y': datePartGetterFactory(digitCondition('year', 1)),\n  'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n  'MMM': datePartGetterFactory(nameCondition('month', 3)),\n  'MM': datePartGetterFactory(digitCondition('month', 2)),\n  'M': datePartGetterFactory(digitCondition('month', 1)),\n  'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n  'L': datePartGetterFactory(nameCondition('month', 1)),\n  'dd': datePartGetterFactory(digitCondition('day', 2)),\n  'd': datePartGetterFactory(digitCondition('day', 1)),\n  'HH': digitModifier(\n      hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n  'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n  'hh': digitModifier(\n      hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n  'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n  'jj': datePartGetterFactory(digitCondition('hour', 2)),\n  'j': datePartGetterFactory(digitCondition('hour', 1)),\n  'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n  'm': datePartGetterFactory(digitCondition('minute', 1)),\n  'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n  's': datePartGetterFactory(digitCondition('second', 1)),\n  // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n  // we can be just safely rely on using `sss` since we currently don't support single or two digit\n  // fractions\n  'sss': datePartGetterFactory(digitCondition('second', 3)),\n  'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n  'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n  'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n  'E': datePartGetterFactory(nameCondition('weekday', 1)),\n  'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n  'Z': timeZoneGetter('short'),\n  'z': timeZoneGetter('long'),\n  'ww': datePartGetterFactory({}),  // Week of year, padded (00-53). Week 01 is the week with the\n                                    // first Thursday of the year. not support ?\n  'w':\n      datePartGetterFactory({}),  // Week of year (0-53). Week 1 is the week with the first Thursday\n                                  // of the year not support ?\n  'G': datePartGetterFactory(nameCondition('era', 1)),\n  'GG': datePartGetterFactory(nameCondition('era', 2)),\n  'GGG': datePartGetterFactory(nameCondition('era', 3)),\n  'GGGG': datePartGetterFactory(nameCondition('era', 4))\n};\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction digitModifier(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string {\n    const /** @type {?} */ result = inner(date, locale);\n    return result.length == 1 ? '0' + result : result;\n  };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourClockExtractor(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string { return inner(date, locale).split(' ')[1]; };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourExtractor(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string { return inner(date, locale).split(' ')[0]; };\n}\n/**\n * @param {?} date\n * @param {?} locale\n * @param {?} options\n * @return {?}\n */\nfunction intlDateFormat(date: Date, locale: string, options: Intl.DateTimeFormatOptions): string {\n  return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n}\n/**\n * @param {?} timezone\n * @return {?}\n */\nfunction timeZoneGetter(timezone: string): DateFormatterFn {\n  // To workaround `Intl` API restriction for single timezone let format with 24 hours\n  const /** @type {?} */ options = {hour: '2-digit', hour12: false, timeZoneName: timezone};\n  return function(date: Date, locale: string): string {\n    const /** @type {?} */ result = intlDateFormat(date, locale, options);\n    // Then extract first 3 letters that related to hours\n    return result ? result.substring(3) : '';\n  };\n}\n/**\n * @param {?} options\n * @param {?} value\n * @return {?}\n */\nfunction hour12Modify(\n    options: Intl.DateTimeFormatOptions, value: boolean): Intl.DateTimeFormatOptions {\n  options.hour12 = value;\n  return options;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction digitCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\n  const /** @type {?} */ result: {[k: string]: string} = {};\n  result[prop] = len === 2 ? '2-digit' : 'numeric';\n  return result;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction nameCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\n  const /** @type {?} */ result: {[k: string]: string} = {};\n  if (len < 4) {\n    result[prop] = len > 1 ? 'short' : 'narrow';\n  } else {\n    result[prop] = 'long';\n  }\n\n  return result;\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction combine(options: Intl.DateTimeFormatOptions[]): Intl.DateTimeFormatOptions {\n  return ( /** @type {?} */((<any>Object))).assign({}, ...options);\n}\n/**\n * @param {?} ret\n * @return {?}\n */\nfunction datePartGetterFactory(ret: Intl.DateTimeFormatOptions): DateFormatterFn {\n  return (date: Date, locale: string): string => intlDateFormat(date, locale, ret);\n}\n\nconst /** @type {?} */ DATE_FORMATTER_CACHE = new Map<string, string[]>();\n/**\n * @param {?} format\n * @param {?} date\n * @param {?} locale\n * @return {?}\n */\nfunction dateFormatter(format: string, date: Date, locale: string): string {\n  const /** @type {?} */ fn = PATTERN_ALIASES[format];\n\n  if (fn) return fn(date, locale);\n\n  const /** @type {?} */ cacheKey = format;\n  let /** @type {?} */ parts = DATE_FORMATTER_CACHE.get(cacheKey);\n\n  if (!parts) {\n    parts = [];\n    let /** @type {?} */ match: RegExpExecArray;\n    DATE_FORMATS_SPLIT.exec(format);\n\n    while (format) {\n      match = DATE_FORMATS_SPLIT.exec(format);\n      if (match) {\n        parts = parts.concat(match.slice(1));\n        format = parts.pop();\n      } else {\n        parts.push(format);\n        format = null;\n      }\n    }\n\n    DATE_FORMATTER_CACHE.set(cacheKey, parts);\n  }\n\n  return parts.reduce((text, part) => {\n    const /** @type {?} */ fn = DATE_FORMATS[part];\n    return text + (fn ? fn(date, locale) : partToTime(part));\n  }, '');\n}\n/**\n * @param {?} part\n * @return {?}\n */\nfunction partToTime(part: string): string {\n  return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n}\nexport class DateFormatter {\n/**\n * @param {?} date\n * @param {?} locale\n * @param {?} pattern\n * @return {?}\n */\nstatic format(date: Date, locale: string, pattern: string): string {\n    return dateFormatter(pattern, date, locale);\n  }\n}\n"]}