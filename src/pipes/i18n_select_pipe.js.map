{"version":3,"sources":["../../../../../modules/@angular/common/src/pipes/i18n_select_pipe.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAA,IAAE,EAAmB,MAAA,qBAAA;OACrB,EAAA,wBAAE,EAAwB,MAAA,+BAAA;AACjC;;;;;;;;;;;;;;;;GAgBG;AACH;IACA;;;;OAIG;IACH,SAHG,CAAA,KAAA,EAAA,OAAA;QAIC,EAAE,CAAC,CAAC,KAHC,IAAQ,IAAA,CAAK;YAAC,MAAA,CAAO,EAAA,CAAG;QAK7B,EAAE,CAAC,CAAC,OAHO,OAAA,KAAY,QAAA,IAAY,OAAO,KAAA,KAAU,QAAA,CAAS,CAAC,CAAA;YAI5D,MAHM,wBAAA,CAAyB,cAAC,EAAe,OAAA,CAAQ,CAAC;QAI1D,CAAC;QAED,EAAE,CAAC,CAAC,OAHC,CAAO,cAAC,CAAc,KAAC,CAAK,CAAC,CAAC,CAAA;YAIjC,MAAM,CAHC,OAAA,CAAQ,KAAC,CAAK,CAAC;QAIxB,CAAC;QAED,EAAE,CAAC,CAAC,OAHC,CAAO,cAAC,CAAc,OAAC,CAAO,CAAC,CAAC,CAAA;YAInC,MAAM,CAHC,OAAA,CAAQ,OAAC,CAAO,CAAC;QAI1B,CAAC;QAED,MAAM,CAHC,EAAA,CAAG;IAIZ,CAAC;AAOH,CAAC;AATM,yBAAA,GAAoC;IAI3C,EAHE,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,CAAA,EAAE,IAAC,EAAK,YAAA,EAAc,IAAA,EAAM,IAAA,EAAK,EAAC,EAAG;CAIxD,CAHC;AAIF,kBANE;AAIK,6BAAA,GAAiF,MAAM,EAI7F,CACA;AAED;IACA,gBAAgB;IAChB,cAAc,CAAC,UAAU,CAAC;IAC1B;;;OAGG;IACH,cAAc,CAAC,cAAc,CAAC;AAC9B,CAAC","file":"i18n_select_pipe.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core/index';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Generic selector that displays the string that matches the current value.\n * \\@howToUse `expression | i18nSelect:mapping`\n * \\@description \n * \n *  Where `mapping` is an object that indicates the text that should be displayed\n *  for different values of the provided `expression`.\n *  If none of the keys of the mapping match the value of the `expression`, then the content\n *  of the `other` key is returned when present, otherwise an empty string is returned.\n * \n *  ## Example\n * \n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n * \n *  \\@experimental\n */\nexport class I18nSelectPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} mapping\n * @return {?}\n */\ntransform(value: string, mapping: {[key: string]: string}): string {\n    if (value == null) return '';\n\n    if (typeof mapping !== 'object' || typeof value !== 'string') {\n      throw invalidPipeArgumentError(I18nSelectPipe, mapping);\n    }\n\n    if (mapping.hasOwnProperty(value)) {\n      return mapping[value];\n    }\n\n    if (mapping.hasOwnProperty('other')) {\n      return mapping['other'];\n    }\n\n    return '';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'i18nSelect', pure: true}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction I18nSelectPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nI18nSelectPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nI18nSelectPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}