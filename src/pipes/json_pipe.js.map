{"version":3,"sources":["../../../../../modules/@angular/common/src/pipes/json_pipe.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAA,IAAE,EAAmB,MAAA,qBAAA;AAC5B;;;;;;;;;;;;GAYG;AACH;IACA;;;OAGG;IACH,SAFG,CAAA,KAAA,IAA+B,MAAA,CAAO,IAAA,CAAK,SAAC,CAAS,KAAC,EAAM,IAAA,EAAM,CAAA,CAAE,CAAC,CAAC,CAAA;AASzE,CAAC;AARM,mBAAA,GAAoC;IAG3C,EAFE,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,CAAA,EAAE,IAAC,EAAK,MAAA,EAAQ,IAAA,EAAM,KAAA,EAAM,EAAC,EAAG;CAGnD,CAFC;AAGF,kBAAkB;AADX,uBAAA,GAAiF,MAAM,EAG7F,CACA;AAED;IACA,gBAAgB;IAChB,QAAQ,CAAC,UAAU,CAAC;IACpB;;;OAGG;IACH,QAAQ,CAAC,cAAc,CAAC;AACxB,CAAC","file":"json_pipe.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core/index';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Converts value into JSON string.\n * \\@howToUse `expression | json`\n * \\@description \n * \n * Converts value into string using `JSON.stringify`. Useful for debugging.\n * \n * ### Example\n * {\\@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n * \n * \\@stable\n */\nexport class JsonPipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: any): string { return JSON.stringify(value, null, 2); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'json', pure: false}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction JsonPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nJsonPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJsonPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}