{"version":3,"file":"ng_template_outlet.js","sourceRoot":"","sources":["../../../../../modules/@angular/common/src/directives/ng_template_outlet.ts"],"names":[],"mappings":";AAAA,qBAAuE,eAAe,CAAC,CAAA;AAEvF,qBAAwB,gBAAgB,CAAC,CAAA;AACzC;IAGE,0BAAoB,iBAAmC;QAAnC,sBAAiB,GAAjB,iBAAiB,CAAkB;IAAG,CAAC;IAC3D,sBAAI,8CAAgB;aAApB,UAAqB,WAAgC;YACnD,EAAE,CAAC,CAAC,gBAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACvF,CAAC;YAED,EAAE,CAAC,CAAC,gBAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;YACjF,CAAC;QACH,CAAC;;;OAAA;IACH,kBAAkB;IACX,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,oBAAoB,EAAC,EAAG,EAAE;KAC9D,CAAC;IACF,kBAAkB;IACX,+BAAc,GAA2D;QAChF,EAAC,IAAI,EAAE,uBAAgB,GAAG;KACzB,CAAC;IACF,kBAAkB;IACX,+BAAc,GAA2C;QAChE,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;KACrC,CAAC;IACF,uBAAC;AAAD,CAAC,AAzBD,IAyBC;AAzBY,wBAAgB,mBAyB5B,CAAA","sourcesContent":["import {Directive, Input, TemplateRef, ViewContainerRef, ViewRef} from '@angular/core';\n\nimport {isPresent} from '../facade/lang';\nexport class NgTemplateOutlet {\n  private _insertedViewRef: ViewRef;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {}\n  set ngTemplateOutlet(templateRef: TemplateRef<Object>) {\n    if (isPresent(this._insertedViewRef)) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._insertedViewRef));\n    }\n\n    if (isPresent(templateRef)) {\n      this._insertedViewRef = this._viewContainerRef.createEmbeddedView(templateRef);\n    }\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngTemplateOutlet]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ViewContainerRef, },\n];\n/** @nocollapse */\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngTemplateOutlet': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}