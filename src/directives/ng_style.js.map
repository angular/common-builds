{"version":3,"sources":["../../../../../modules/@angular/common/src/directives/ng_style.ts"],"names":[],"mappings":"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","file":"ng_style.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, DoCheck, ElementRef, Input, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Renderer} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Update an HTML element styles.\n * \n * \\@howToUse \n * ```\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n * \n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n * \n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n * \n * \\@description \n * \n * The styles are updated according to the value of the expression evaluation:\n * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n * - values are the values assigned to those properties (expressed in the given unit).\n * \n * \\@stable\n */\nexport class NgStyle implements DoCheck {\nprivate _ngStyle: {[key: string]: string};\nprivate _differ: KeyValueDiffer<string, string|number>;\n/**\n * @param {?} _differs\n * @param {?} _ngEl\n * @param {?} _renderer\n */\nconstructor(\nprivate _differs: KeyValueDiffers,\nprivate _ngEl: ElementRef,\nprivate _renderer: Renderer) {}\n/**\n * @param {?} v\n * @return {?}\n */\nset ngStyle(v: {[key: string]: string}) {\n    this._ngStyle = v;\n    if (!this._differ && v) {\n      this._differ = this._differs.find(v).create();\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\n    if (this._differ) {\n      const /** @type {?} */ changes = this._differ.diff(this._ngStyle);\n      if (changes) {\n        this._applyChanges(changes);\n      }\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _applyChanges(changes: KeyValueChanges<string, string|number>): void {\n    changes.forEachRemovedItem((record) => this._setStyle(record.key, null));\n    changes.forEachAddedItem((record) => this._setStyle(record.key, record.currentValue));\n    changes.forEachChangedItem((record) => this._setStyle(record.key, record.currentValue));\n  }\n/**\n * @param {?} nameAndUnit\n * @param {?} value\n * @return {?}\n */\nprivate _setStyle(nameAndUnit: string, value: string|number): void {\n    const [name, unit] = nameAndUnit.split('.');\n    value = value != null && unit ? `${value}${unit}` : value;\n\n    this._renderer.setElementStyle(this._ngEl.nativeElement, name, /** @type {?} */(( value as string)));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngStyle]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngStyle': [{ type: Input },],\n};\n}\n\nfunction NgStyle_tsickle_Closure_declarations() {\n/** @type {?} */\nNgStyle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgStyle.ctorParameters;\n/** @type {?} */\nNgStyle.propDecorators;\n/** @type {?} */\nNgStyle.prototype._ngStyle;\n/** @type {?} */\nNgStyle.prototype._differ;\n/** @type {?} */\nNgStyle.prototype._differs;\n/** @type {?} */\nNgStyle.prototype._ngEl;\n/** @type {?} */\nNgStyle.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}