{"version":3,"file":"ng_plural.js","sourceRoot":"","sources":["../../../../../modules/@angular/common/src/directives/ng_plural.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,qBAAuF,eAAe,CAAC,CAAA;AAEvG,qBAAwB,gBAAgB,CAAC,CAAA;AACzC,6BAAgD,iBAAiB,CAAC,CAAA;AAElE,0BAAyB,aAAa,CAAC,CAAA;AACvC;IAKE,kBAAoB,aAA6B;QAA7B,kBAAa,GAAb,aAAa,CAAgB;QAFzC,eAAU,GAA8B,EAAE,CAAC;IAEC,CAAC;IACrD,sBAAI,8BAAQ;aAAZ,UAAa,KAAa;YACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;;;OAAA;IAED,0BAAO,GAAP,UAAQ,KAAa,EAAE,UAAsB,IAAU,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;IAE7F,gBAAgB;IAChB,8BAAW,GAAX;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,GAAG,GACH,gCAAiB,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC3F,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,gBAAgB;IAChB,8BAAW,GAAX;QACE,EAAE,CAAC,CAAC,gBAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC9D,CAAC;IAED,gBAAgB;IAChB,gCAAa,GAAb,UAAc,IAAgB;QAC5B,EAAE,CAAC,CAAC,CAAC,gBAAS,CAAC,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IACH,kBAAkB;IACX,mBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,YAAY,EAAC,EAAG,EAAE;KACtD,CAAC;IACF,kBAAkB;IACX,uBAAc,GAA2D;QAChF,EAAC,IAAI,EAAE,6BAAc,GAAG;KACvB,CAAC;IACF,kBAAkB;IACX,uBAAc,GAA2C;QAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;KAC7B,CAAC;IACF,eAAC;AAAD,CAAC,AA7CD,IA6CC;AA7CY,gBAAQ,WA6CpB,CAAA;AACD;IACE,sBAAoB,KAAa,EAAE,QAA6B,EAC5D,aAA+B,EAAE,QAAkB;QADnC,UAAK,GAAL,KAAK,CAAQ;QAE/B,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,sBAAU,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC;IACnE,CAAC;IACH,kBAAkB;IACX,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,gBAAgB,EAAC,EAAG,EAAE;KAC1D,CAAC;IACF,kBAAkB;IACX,2BAAc,GAA2D;QAChF,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC,cAAc,EAAG,EAAE,EAAG,EAAC;QAChF,EAAC,IAAI,EAAE,kBAAW,GAAG;QACrB,EAAC,IAAI,EAAE,uBAAgB,GAAG;QAC1B,EAAC,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,WAAI,EAAE,EAAG,EAAC;KAC/C,CAAC;IACF,mBAAC;AAAD,CAAC,AAhBD,IAgBC;AAhBY,oBAAY,eAgBxB,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, Directive, Host, Input, OnInit, TemplateRef, ViewContainerRef} from '@angular/core';\n\nimport {isPresent} from '../facade/lang';\nimport {NgLocalization, getPluralCategory} from '../localization';\n\nimport {SwitchView} from './ng_switch';\nexport class NgPlural {\n  private _switchValue: number;\n  private _activeView: SwitchView;\n  private _caseViews: {[k: string]: SwitchView} = {};\n\n  constructor(private _localization: NgLocalization) {}\n  set ngPlural(value: number) {\n    this._switchValue = value;\n    this._updateView();\n  }\n\n  addCase(value: string, switchView: SwitchView): void { this._caseViews[value] = switchView; }\n\n  /** @internal */\n  _updateView(): void {\n    this._clearViews();\n\n    var key =\n        getPluralCategory(this._switchValue, Object.keys(this._caseViews), this._localization);\n    this._activateView(this._caseViews[key]);\n  }\n\n  /** @internal */\n  _clearViews() {\n    if (isPresent(this._activeView)) this._activeView.destroy();\n  }\n\n  /** @internal */\n  _activateView(view: SwitchView) {\n    if (!isPresent(view)) return;\n    this._activeView = view;\n    this._activeView.create();\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPlural]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: NgLocalization, },\n];\n/** @nocollapse */\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngPlural': [{ type: Input },],\n};\n}\nexport class NgPluralCase {\n  constructor( public value: string, template: TemplateRef<Object>,\n      viewContainer: ViewContainerRef, ngPlural: NgPlural) {\n    ngPlural.addCase(value, new SwitchView(viewContainer, template));\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPluralCase]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: undefined, decorators: [{ type: Attribute, args: ['ngPluralCase', ] }, ]},\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: NgPlural, decorators: [{ type: Host }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}