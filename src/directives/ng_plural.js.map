{"version":3,"sources":["../../../../../modules/@angular/common/src/directives/ng_plural.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAA,SAAE,EAAU,SAAA,EAAW,IAAA,EAAM,KAAA,EAAO,WAAA,EAAa,gBAAA,EAAiB,MAAA,eAAA,CAAA;AAEzE,OAAO,EAAA,cAAE,EAAe,iBAAA,EAAkB,MAAA,iBAAA,CAAA;AAE1C,OAAO,EAAA,UAAE,EAAU,MAAA,aAAA,CAAA;AACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG;AACH;IAIA;;OAEG;IACH,kBACsB,aAAe;QAAf,kBAAA,GAAA,aAAA,CAAe;QAF3B,eAAA,GAAwC,EAAA,CAAG;IAED,CAAA;IAIpD,sBADG,8BAAA;QAHH;;;WAGG;aACH,UADG,KAAA;YAEC,IAAI,CADC,YAAC,GAAc,KAAA,CAAM;YAE1B,IAAI,CADC,WAAC,EAAW,CAAE;QAErB,CAAC;;;OAAA;IACH;;;;OAIG;IACH,0BALG,GAKH,UALG,KAAA,EAAA,UAAA,IAAsD,IAAA,CAAK,UAAC,CAAU,KAAC,CAAK,GAAG,UAAA,CAAW,CAAC,CAAA;IAM9F;;OAEG;IANA,8BAAA,GAOH;QACI,IAAI,CAPC,WAAC,EAAW,CAAE;QASnB,IAAM,gBAAgB,CAPhB,KAAA,GAAQ,MAAA,CAAO,IAAC,CAAI,IAAC,CAAI,UAAC,CAAU,CAAC;QAQ3C,IAAM,gBAAgB,CAPhB,GAAA,GAAM,iBAAA,CAAkB,IAAC,CAAI,YAAC,EAAa,KAAA,EAAO,IAAA,CAAK,aAAC,CAAa,CAAC;QAQ5E,IAAI,CAPC,aAAC,CAAa,IAAC,CAAI,UAAC,CAAU,GAAC,CAAG,CAAC,CAAC;IAQ3C,CAAC;IACH;;OAEG;IARA,8BAAA,GASH;QACI,EAAE,CAAC,CAAC,IATC,CAAI,WAAC,CAAW;YAAC,IAAA,CAAK,WAAC,CAAW,OAAC,EAAO,CAAE;IAUnD,CAAC;IACH;;;OAGG;IAXA,gCAAA,GAYH,UAZG,IAAA;QAaC,EAAE,CAAC,CAAC,IAZC,CAAI,CAAC,CAAA;YAaR,IAAI,CAZC,WAAC,GAAa,IAAA,CAAK;YAaxB,IAAI,CAZC,WAAC,CAAW,MAAC,EAAM,CAAE;QAa5B,CAAC;IACH,CAAC;IAWH,eAAC;AAAD,CA1DA,AA0DC;;AAtBM,mBAAA,GAAoC;IAa3C,EAZE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,EAAE,QAAC,EAAS,YAAA,EAAa,EAAC,EAAG;CAarD,CAZC;AAaF,kBAAkB;AAXX,uBAAA,GAAiF,cAAM,OAAA;IAa9F,EAAC,IAZC,EAAK,cAAA,GAAe;CAarB,EAd6F,CAc7F,CAZC;AACK,uBAAA,GAAyD;IAahE,UAAU,EAZE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAa5B,CAZC;AAeF;IACA,gBAAgB;IAChB,QAAQ,CAAC,UAAU,CAAC;IACpB;;;OAGG;IACH,QAAQ,CAAC,cAAc,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,cAAc,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC;IAChC,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC;IAC/B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC;IAC9B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC;AACjC,CAAC;AAED;;;;;;;;;;;;;;;;;GAiBG;AACH;IACA;;;;;OAKG;IACH,sBApCc,KAAO,EAAQ,QAA6B,EAsCpD,aArCe,EAAkB,QAAW;QADpC,UAAA,GAAA,KAAA,CAAO;QAuCjB,IAAM,SAAS,GAAY,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACjD,QAAQ,CAAC,OAAO,CAAC,SAAS,GAAG,MAAI,KAAO,GAAG,KAAK,EAAE,IAAI,UAAU,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC7F,CAAC;IAWH,mBAAC;AAAD,CAvBA,AAuBC;;AA/CM,uBAAA,GAAoC;IAsC3C,EArCE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,EAAE,QAAC,EAAS,gBAAA,EAAiB,EAAC,EAAG;CAsCzD,CArCC;AAsCF,kBAAkB;AApCX,2BAAA,GAAiF,cAAM,OAAA;IAsC9F,EAAC,IArCC,EAAK,SAAA,EAAW,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,cAAE,EAAc,EAAG,EAAE,EAAG;IAsChF,EAAC,IArCC,EAAK,WAAA,GAAY;IAsCnB,EAAC,IArCC,EAAK,gBAAA,GAAiB;IAsCxB,EAAC,IArCC,EAAK,QAAA,EAAU,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,IAAA,EAAK,EAAE,EAAG;CAsC/C,EA1C6F,CA0C7F,CArCC;AAwCF;IACA,gBAAgB;IAChB,YAAY,CAAC,UAAU,CAAC;IACxB;;;OAGG;IACH,YAAY,CAAC,cAAc,CAAC;IAC5B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC;AAC7B,CAAC","file":"ng_plural.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, Directive, Host, Input, TemplateRef, ViewContainerRef} from '@angular/core';\n\nimport {NgLocalization, getPluralCategory} from '../localization';\n\nimport {SwitchView} from './ng_switch';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n * \n * \\@howToUse \n * ```\n * <some-element [ngPlural]=\"value\">\n *   <template ngPluralCase=\"=0\">there is nothing</template>\n *   <template ngPluralCase=\"=1\">there is one</template>\n *   <template ngPluralCase=\"few\">there are a few</template>\n * </some-element>\n * ```\n * \n * \\@description \n * \n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n * \n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n * \n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n * \n * \\@experimental\n */\nexport class NgPlural {\nprivate _switchValue: number;\nprivate _activeView: SwitchView;\nprivate _caseViews: {[k: string]: SwitchView} = {};\n/**\n * @param {?} _localization\n */\nconstructor(private _localization: NgLocalization) {}\n/**\n * @param {?} value\n * @return {?}\n */\nset ngPlural(value: number) {\n    this._switchValue = value;\n    this._updateView();\n  }\n/**\n * @param {?} value\n * @param {?} switchView\n * @return {?}\n */\naddCase(value: string, switchView: SwitchView): void { this._caseViews[value] = switchView; }\n/**\n * @return {?}\n */\nprivate _updateView(): void {\n    this._clearViews();\n\n    const /** @type {?} */ cases = Object.keys(this._caseViews);\n    const /** @type {?} */ key = getPluralCategory(this._switchValue, cases, this._localization);\n    this._activateView(this._caseViews[key]);\n  }\n/**\n * @return {?}\n */\nprivate _clearViews() {\n    if (this._activeView) this._activeView.destroy();\n  }\n/**\n * @param {?} view\n * @return {?}\n */\nprivate _activateView(view: SwitchView) {\n    if (view) {\n      this._activeView = view;\n      this._activeView.create();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPlural]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgLocalization, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngPlural': [{ type: Input },],\n};\n}\n\nfunction NgPlural_tsickle_Closure_declarations() {\n/** @type {?} */\nNgPlural.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgPlural.ctorParameters;\n/** @type {?} */\nNgPlural.propDecorators;\n/** @type {?} */\nNgPlural.prototype._switchValue;\n/** @type {?} */\nNgPlural.prototype._activeView;\n/** @type {?} */\nNgPlural.prototype._caseViews;\n/** @type {?} */\nNgPlural.prototype._localization;\n}\n\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgPlural} when the\n *             given expression matches the plural expression according to CLDR rules.\n * \n * \\@howToUse \n * ```\n * <some-element [ngPlural]=\"value\">\n *   <template ngPluralCase=\"=0\">...</template>\n *   <template ngPluralCase=\"other\">...</template>\n * </some-element>\n * ```\n * \n * See {\\@link NgPlural} for more details and example.\n * \n * \\@experimental\n */\nexport class NgPluralCase {\n/**\n * @param {?} value\n * @param {?} template\n * @param {?} viewContainer\n * @param {?} ngPlural\n */\nconstructor(\npublic value: string, template: TemplateRef<Object>,\n      viewContainer: ViewContainerRef,  ngPlural: NgPlural) {\n    const isANumber: boolean = !isNaN(Number(value));\n    ngPlural.addCase(isANumber ? `=${value}` : value, new SwitchView(viewContainer, template));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPluralCase]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Attribute, args: ['ngPluralCase', ] }, ]},\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: NgPlural, decorators: [{ type: Host }, ]},\n];\n}\n\nfunction NgPluralCase_tsickle_Closure_declarations() {\n/** @type {?} */\nNgPluralCase.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgPluralCase.ctorParameters;\n/** @type {?} */\nNgPluralCase.prototype.value;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}