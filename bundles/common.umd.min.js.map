{"version":3,"sources":["packages/common/common.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","common","core","this","PlatformLocation","LOCATION_INITIALIZED","InjectionToken","LocationStrategy","APP_BASE_HREF","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","Location","platformStrategy","_this","_subject","EventEmitter","_platformStrategy","browserBaseHref","getBaseHref","_baseHref","stripTrailingSlash","_stripIndexHtml","onPopState","ev","emit","url","path","pop","state","type","includeHash","normalize","isCurrentPathEqualTo","query","normalizeQueryParams","_stripBaseHref","baseHref","startsWith","substring","prepareExternalUrl","go","pushState","replaceState","forward","back","subscribe","onNext","onThrow","onReturn","complete","params","joinWithSlash","start","end","slashes","endsWith","match","pathEndIdx","index","slice","decorators","Injectable","ctorParameters","replace","HashLocationStrategy","_super","_platformLocation","fn","onHashChange","hash","internal","title","queryParams","pathname","undefined","Optional","Inject","args","PathLocationStrategy","href","getBaseHrefFromDOM","Error","search","externalUrl","u","localeEn","plural","Math","floor","abs","v","toString","LOCALE_DATA","registerLocaleData","data","localeId","extraData","toLowerCase","NumberFormatStyle","Plural","FormStyle","TranslationWidth","FormatWidth","NumberSymbol","WeekDay","CURRENCIES_EN","ADP","AFN","ALL","AMD","AOA","ARS","AUD","BAM","BBD","BDT","BHD","BIF","BMD","BND","BOB","BRL","BSD","BWP","BYN","BYR","BZD","CAD","CHF","CLF","CLP","CNY","COP","CRC","CUC","CUP","CZK","DJF","DKK","DOP","EGP","ESP","EUR","FJD","FKP","GBP","GEL","GIP","GNF","GTQ","GYD","HKD","HNL","HRK","HUF","IDR","ILS","INR","IQD","IRR","ISK","ITL","JMD","JOD","JPY","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LTL","LUF","LVL","LYD","MGA","MGF","MMK","MNT","MRO","MUR","MXN","MYR","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PHP","PKR","PLN","PYG","RON","RSD","RUB","RUR","RWF","SBD","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","STN","SYP","THB","TMM","TND","TOP","TRL","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYI","UYU","UZS","VEF","VND","VUV","XAF","XCD","XOF","XPF","YER","ZAR","ZMK","ZMW","ZWD","getLocaleId","locale","findLocaleData","getLocaleDayPeriods","formStyle","width","getLastDefinedValue","getLocaleDayNames","getLocaleMonthNames","getLocaleEraNames","getLocaleDateFormat","getLocaleTimeFormat","getLocaleDateTimeFormat","getLocaleNumberSymbol","symbol","res","CurrencyDecimal","Decimal","CurrencyGroup","Group","getLocaleNumberFormat","getLocalePluralCase","checkFullData","getLocaleExtraDayPeriodRules","map","rule","extractTime","getLocaleExtraDayPeriods","time","_a","split","hours","minutes","normalizedLocale","parentLocale","getCurrencySymbol","code","format","currency","getLocaleCurrencies","symbolNarrow","DEFAULT_NB_OF_CURRENCY_DIGITS","getNumberOfCurrencyDigits","digits","ZoneWidth","DateType","TranslationType","ISO8601_DATE_REGEX","NAMED_FORMATS","DATE_FORMATS_SPLIT","formatDate","timezone","date","toDate","isDate","isNaN","Date","trim","parsedNb","parseFloat","test","val","isoStringToDate","getNamedFormat","formatValue","Short","Medium","Long","Full","shortTime","shortDate","formatDateTime","mediumTime","mediumDate","longTime","longDate","fullTime","fullDate","parts","exec","part","concat","dateTimezoneOffset","getTimezoneOffset","timezoneToOffset","convertTimezoneToLocal","reverse","reverseValue","addDateMinutes","getTime","setMinutes","getMinutes","text","forEach","dateFormatter","getDateFormatter","DATE_FORMATS","formatter","dateStrGetter","Eras","Abbreviated","Wide","Narrow","dateGetter","FullYear","Month","Months","Standalone","weekGetter","Days","DayPeriods","Format","Hours","Minutes","Seconds","Milliseconds","timeZoneGetter","Extended","ShortGMT","str","opt_values","key","padNumber","num","minusSign","negWrap","neg","strNum","String","substr","name","size","offset","getDatePart","getFullYear","getMonth","getDate","getHours","getSeconds","div","round","getMilliseconds","Day","getDay","MinusSign","form","extended","getDateTranslation","currentHours_1","currentMinutes_1","result_1","rules","dayPeriods_1","isArray","_b","hoursTo","zone","ceil","JANUARY","THURSDAY","monthBased","result","nbDaysBefore1stDayOfMonth","today","firstThurs","getFirstThursdayOfYear","year","firstDayOfYear","diff","getThursdayThisWeek","datetime","fallback","requestedTimezoneOffset","parse","tzHour","tzMin","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","Number","h","ms","valueOf","NUMBER_FORMAT_REGEXP","MAX_DIGITS","DECIMAL_SEP","ZERO_CHAR","PATTERN_SEP","GROUP_SEP","DIGIT_CHAR","CURRENCY_CHAR","PERCENT_CHAR","formatNumberToLocaleString","pattern","groupSymbol","decimalSymbol","digitsInfo","isPercent","formattedText","isZero","isFinite","parsedNumber","parseNumber","integerLen","j","zeros","numStr","exponent","indexOf","charAt","splice","toPercent","fractionLen","minInt","minFraction","minFrac","maxFraction","maxFrac","minIntPart","minFractionPart","maxFractionPart","parseIntAutoRadix","roundNumber","fractionSize","min","max","roundAt","digit","k","unshift","dropTrailingZeros","minLen","carry","reduceRight","decimals","every","groups","lgSize","join","gSize","Exponential","Infinity","negPre","negSuf","posPre","posSuf","formatCurrency","currencyCode","parseNumberFormat","Currency","formatPercent","Percent","RegExp","PercentSign","formatNumber","patternParts","positive","negative","positiveParts","lastIndexOf","integer","fraction","ch","trunkLen","pos","parseInt","NgLocalization","DEPRECATED_PLURAL_FN","getPluralCategory","cases","ngLocalization","NgLocaleLocalization","deprecatedPluralFn","Zero","One","Two","Few","Many","LOCALE_ID","getPluralCase","nLike","nDecimal","f","Other","NgClass","_iterableDiffers","_keyValueDiffers","_ngEl","_renderer","_initialClasses","defineProperty","set","_removeClasses","_applyClasses","_rawClass","enumerable","configurable","_iterableDiffer","_keyValueDiffer","ɵisListLikeIterable","find","ngDoCheck","iterableChanges","_applyIterableChanges","keyValueChanges","_applyKeyValueChanges","changes","forEachAddedItem","record","_toggleClass","currentValue","forEachChangedItem","forEachRemovedItem","previousValue","item","ɵstringify","rawClassVal","Set","klass","keys","enabled","addClass","nativeElement","removeClass","Directive","selector","IterableDiffers","KeyValueDiffers","ElementRef","Renderer2","propDecorators","Input","ngClass","NgComponentOutlet","_viewContainerRef","_componentRef","_moduleRef","ngOnChanges","clear","ngComponentOutlet","elInjector","ngComponentOutletInjector","parentInjector","destroy","ngComponentOutletNgModuleFactory","parentModule","get","NgModuleRef","injector","componentFactory","componentFactoryResolver","ComponentFactoryResolver","resolveComponentFactory","createComponent","ngComponentOutletContent","ngOnDestroy","ViewContainerRef","NgForOfContext","$implicit","ngForOf","count","even","NgForOf","_viewContainer","_template","_differs","_differ","_trackByFn","isDevMode","console","warn","JSON","stringify","ngForTrackBy","getTypeNameForDebugging","_applyChanges","insertTuples","forEachOperation","adjustedPreviousIndex","currentIndex","previousIndex","view","createEmbeddedView","tuple","RecordViewTuple","remove","move","_perViewChange","ilen","viewRef","context","forEachIdentityChange","TemplateRef","ngForTemplate","NgIf","templateRef","_context","NgIfContext","_thenTemplateRef","_elseTemplateRef","_thenViewRef","_elseViewRef","condition","ngIf","_updateView","assertTemplate","ngIfThen","ngIfElse","property","SwitchView","_templateRef","_created","enforceState","created","NgSwitch","_defaultUsed","_caseCount","_lastCaseCheckIndex","_lastCasesMatched","newValue","_ngSwitch","_updateDefaultCases","_addCase","_addDefault","_defaultViews","_matchCase","matched","useDefault","ngSwitch","NgSwitchCase","viewContainer","_view","ngSwitchCase","Host","NgSwitchDefault","NgPlural","_localization","_caseViews","_switchValue","addCase","switchView","_clearViews","_activateView","_activeView","ngPlural","NgPluralCase","template","isANumber","Attribute","NgStyle","_ngStyle","_setStyle","nameAndUnit","unit","setStyle","removeStyle","ngStyle","NgTemplateOutlet","_shouldRecreateView","_viewRef","ngTemplateOutlet","ngTemplateOutletContext","_updateExistingContext","ctxChange","_hasContextShapeChanged","e_1","prevCtxKeys","currCtxKeys","currCtxKeys_1","currCtxKeys_1_1","e_1_1","return","ctx","propName","e_2_1","e_2","_c","COMMON_DIRECTIVES","invalidPipeArgumentError","NumberFormatter","style","opts","currencyAsSymbol","options","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","currencyDisplay","Intl","NumberFormat","DATE_FORMATS_SPLIT$1","PATTERN_ALIASES","yMMMdjms","datePartGetterFactory","combine","digitCondition","nameCondition","yMdjm","yMMMMEEEEd","yMMMMd","yMMMd","yMd","jms","jm","DATE_FORMATS$1","yyyy","yy","y","MMMM","MMM","MM","M","LLLL","L","dd","HH","digitModifier","hourExtractor","hour12Modify","H","hh","jj","mm","ss","sss","EEEE","EEE","EE","E","a","hourClockExtractor","inner","Z","timeZoneGetter$1","z","ww","w","G","GG","GGG","GGGG","intlDateFormat","DateTimeFormat","hour","hour12","timeZoneName","prop","len","reduce","merged","opt","ret","DATE_FORMATTER_CACHE","Map","DateFormatter","cacheKey","_format","partToTime","DeprecatedDatePipe","_locale","transform","isDate$1","_ALIASES","medium","short","Pipe","pure","formatNumber$1","pipe","DeprecatedDecimalPipe","DeprecatedPercentPipe","DeprecatedCurrencyPipe","symbolDisplay","COMMON_DEPRECATED_I18N_PIPES","ObservableStrategy","createSubscription","async","updateLatestValue","dispose","subscription","unsubscribe","onDestroy","_promiseStrategy","PromiseStrategy","then","_observableStrategy","AsyncPipe","_ref","_latestValue","_latestReturnedValue","_subscription","_obj","_strategy","_dispose","obj","WrappedValue","wrap","_subscribe","_selectStrategy","_updateLatestValue","ɵisPromise","ɵisObservable","markForCheck","ChangeDetectorRef","LowerCasePipe","unicodeWordMatch","TitleCasePipe","txt","toUpperCase","UpperCasePipe","DatePipe","message","_INTERPOLATION_REGEXP","I18nPluralPipe","pluralMap","I18nSelectPipe","mapping","JsonPipe","DecimalPipe","isEmpty","strToNumber","PercentPipe","CurrencyPipe","display","SlicePipe","supports","COMMON_PIPES","CommonModule","NgModule","declarations","providers","provide","useClass","ɵ0","DeprecatedI18NPipesModule","useValue","DOCUMENT","VERSION","Version","ɵangular_packages_common_common_e","ɵangular_packages_common_common_d","ɵangular_packages_common_common_a","ɵangular_packages_common_common_b","ɵangular_packages_common_common_g","ɵangular_packages_common_common_f","ɵregisterLocaleData","getLocaleWeekEndRange","getLocaleFirstDayOfWeek","getLocaleCurrencyName","getLocaleCurrencySymbol","ɵparseCookieValue","parseCookieValue","cookieStr","encodeURIComponent","cookie","eqIndex","cookieValue","decodeURIComponent","_d","ɵPLATFORM_BROWSER_ID","ɵPLATFORM_SERVER_ID","ɵPLATFORM_WORKER_APP_ID","ɵPLATFORM_WORKER_UI_ID","isPlatformBrowser","platformId","isPlatformServer","isPlatformWorkerApp","isPlatformWorkerUi"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.0.2\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/common', ['exports', '@angular/core'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.common = {}),global.ng.core));\n}(this, (function (exports,core) { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n *\n * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n * agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms that angular supports. For example, `@angular/platform-browser` provides an\n * implementation specific to the browser environment, while `@angular/platform-webworker` provides\n * one suitable for use with web workers.\n *\n * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\n * when they need to interact with the DOM apis like pushState, popState, etc...\n *\n * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\n * by the {@link Router} in order to navigate between routes. Since all interactions between {@link\n * Router} /\n * {@link Location} / {@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n * class they are all platform independent.\n *\n *\n */\nvar PlatformLocation = /** @class */ (function () {\n    function PlatformLocation() {\n    }\n    return PlatformLocation;\n}());\n/**\n * @description Indicates when a location is initialized.\n * @experimental\n */\nvar LOCATION_INITIALIZED = new core.InjectionToken('Location Initialized');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `LocationStrategy` is responsible for representing and reading route state\n * from the browser's URL. Angular provides two strategies:\n * {@link HashLocationStrategy} and {@link PathLocationStrategy}.\n *\n * This is used under the hood of the {@link Location} service.\n *\n * Applications should use the {@link Router} or {@link Location} services to\n * interact with application route state.\n *\n * For instance, {@link HashLocationStrategy} produces URLs like\n * `http://example.com#/foo`, and {@link PathLocationStrategy} produces\n * `http://example.com/foo` as an equivalent URL.\n *\n * See these two classes for more.\n *\n *\n */\nvar LocationStrategy = /** @class */ (function () {\n    function LocationStrategy() {\n    }\n    return LocationStrategy;\n}());\n/**\n * The `APP_BASE_HREF` token represents the base href to be used with the\n * {@link PathLocationStrategy}.\n *\n * If you're using {@link PathLocationStrategy}, you must provide a provider to a string\n * representing the URL prefix that should be preserved when generating and recognizing\n * URLs.\n *\n * ### Example\n *\n * ```typescript\n * import {Component, NgModule} from '@angular/core';\n * import {APP_BASE_HREF} from '@angular/common';\n *\n * @NgModule({\n *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n * })\n * class AppModule {}\n * ```\n *\n *\n */\nvar APP_BASE_HREF = new core.InjectionToken('appBaseHref');\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * A service that applications can use to interact with a browser's URL.\n *\n * Depending on which {@link LocationStrategy} is used, `Location` will either persist\n * to the URL's path or the URL's hash segment.\n *\n * Note: it's better to use {@link Router#navigate} service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n *\n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n *\n * ### Example\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n */\nvar Location = /** @class */ (function () {\n    function Location(platformStrategy) {\n        var _this = this;\n        /** @internal */\n        this._subject = new core.EventEmitter();\n        this._platformStrategy = platformStrategy;\n        var browserBaseHref = this._platformStrategy.getBaseHref();\n        this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n        this._platformStrategy.onPopState(function (ev) {\n            _this._subject.emit({\n                'url': _this.path(true),\n                'pop': true,\n                'state': ev.state,\n                'type': ev.type,\n            });\n        });\n    }\n    /**\n     * Returns the normalized URL path.\n     */\n    // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n    // removed.\n    /**\n       * Returns the normalized URL path.\n       */\n    // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n    // removed.\n    Location.prototype.path = /**\n       * Returns the normalized URL path.\n       */\n    // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n    // removed.\n    function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        return this.normalize(this._platformStrategy.path(includeHash));\n    };\n    /**\n     * Normalizes the given path and compares to the current normalized path.\n     */\n    /**\n       * Normalizes the given path and compares to the current normalized path.\n       */\n    Location.prototype.isCurrentPathEqualTo = /**\n       * Normalizes the given path and compares to the current normalized path.\n       */\n    function (path, query) {\n        if (query === void 0) { query = ''; }\n        return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n    };\n    /**\n     * Given a string representing a URL, returns the normalized URL path without leading or\n     * trailing slashes.\n     */\n    /**\n       * Given a string representing a URL, returns the normalized URL path without leading or\n       * trailing slashes.\n       */\n    Location.prototype.normalize = /**\n       * Given a string representing a URL, returns the normalized URL path without leading or\n       * trailing slashes.\n       */\n    function (url) {\n        return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n    };\n    /**\n     * Given a string representing a URL, returns the platform-specific external URL path.\n     * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n     * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n     * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n     */\n    /**\n       * Given a string representing a URL, returns the platform-specific external URL path.\n       * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n       * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n       * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n       */\n    Location.prototype.prepareExternalUrl = /**\n       * Given a string representing a URL, returns the platform-specific external URL path.\n       * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n       * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n       * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n       */\n    function (url) {\n        if (url && url[0] !== '/') {\n            url = '/' + url;\n        }\n        return this._platformStrategy.prepareExternalUrl(url);\n    };\n    // TODO: rename this method to pushState\n    /**\n     * Changes the browsers URL to the normalized version of the given URL, and pushes a\n     * new item onto the platform's history.\n     */\n    // TODO: rename this method to pushState\n    /**\n       * Changes the browsers URL to the normalized version of the given URL, and pushes a\n       * new item onto the platform's history.\n       */\n    Location.prototype.go = \n    // TODO: rename this method to pushState\n    /**\n       * Changes the browsers URL to the normalized version of the given URL, and pushes a\n       * new item onto the platform's history.\n       */\n    function (path, query, state) {\n        if (query === void 0) { query = ''; }\n        if (state === void 0) { state = null; }\n        this._platformStrategy.pushState(state, '', path, query);\n    };\n    /**\n     * Changes the browsers URL to the normalized version of the given URL, and replaces\n     * the top item on the platform's history stack.\n     */\n    /**\n       * Changes the browsers URL to the normalized version of the given URL, and replaces\n       * the top item on the platform's history stack.\n       */\n    Location.prototype.replaceState = /**\n       * Changes the browsers URL to the normalized version of the given URL, and replaces\n       * the top item on the platform's history stack.\n       */\n    function (path, query, state) {\n        if (query === void 0) { query = ''; }\n        if (state === void 0) { state = null; }\n        this._platformStrategy.replaceState(state, '', path, query);\n    };\n    /**\n     * Navigates forward in the platform's history.\n     */\n    /**\n       * Navigates forward in the platform's history.\n       */\n    Location.prototype.forward = /**\n       * Navigates forward in the platform's history.\n       */\n    function () { this._platformStrategy.forward(); };\n    /**\n     * Navigates back in the platform's history.\n     */\n    /**\n       * Navigates back in the platform's history.\n       */\n    Location.prototype.back = /**\n       * Navigates back in the platform's history.\n       */\n    function () { this._platformStrategy.back(); };\n    /**\n     * Subscribe to the platform's `popState` events.\n     */\n    /**\n       * Subscribe to the platform's `popState` events.\n       */\n    Location.prototype.subscribe = /**\n       * Subscribe to the platform's `popState` events.\n       */\n    function (onNext, onThrow, onReturn) {\n        return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n    };\n    /**\n     * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n     * is.\n     */\n    /**\n       * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n       * is.\n       */\n    Location.normalizeQueryParams = /**\n       * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n       * is.\n       */\n    function (params) {\n        return params && params[0] !== '?' ? '?' + params : params;\n    };\n    /**\n     * Given 2 parts of a url, join them with a slash if needed.\n     */\n    /**\n       * Given 2 parts of a url, join them with a slash if needed.\n       */\n    Location.joinWithSlash = /**\n       * Given 2 parts of a url, join them with a slash if needed.\n       */\n    function (start, end) {\n        if (start.length == 0) {\n            return end;\n        }\n        if (end.length == 0) {\n            return start;\n        }\n        var slashes = 0;\n        if (start.endsWith('/')) {\n            slashes++;\n        }\n        if (end.startsWith('/')) {\n            slashes++;\n        }\n        if (slashes == 2) {\n            return start + end.substring(1);\n        }\n        if (slashes == 1) {\n            return start + end;\n        }\n        return start + '/' + end;\n    };\n    /**\n     * If url has a trailing slash, remove it, otherwise return url as is. This\n     * method looks for the first occurrence of either #, ?, or the end of the\n     * line as `/` characters after any of these should not be replaced.\n     */\n    /**\n       * If url has a trailing slash, remove it, otherwise return url as is. This\n       * method looks for the first occurrence of either #, ?, or the end of the\n       * line as `/` characters after any of these should not be replaced.\n       */\n    Location.stripTrailingSlash = /**\n       * If url has a trailing slash, remove it, otherwise return url as is. This\n       * method looks for the first occurrence of either #, ?, or the end of the\n       * line as `/` characters after any of these should not be replaced.\n       */\n    function (url) {\n        var match = url.match(/#|\\?|$/);\n        var pathEndIdx = match && match.index || url.length;\n        var droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\n        return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\n    };\n    Location.decorators = [\n        { type: core.Injectable }\n    ];\n    /** @nocollapse */\n    Location.ctorParameters = function () { return [\n        { type: LocationStrategy, },\n    ]; };\n    return Location;\n}());\nfunction _stripBaseHref(baseHref, url) {\n    return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n}\nfunction _stripIndexHtml(url) {\n    return url.replace(/\\/index.html$/, '');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n * of the browser's URL.\n *\n * For instance, if you call `location.go('/foo')`, the browser's URL will become\n * `example.com#/foo`.\n *\n * ### Example\n *\n * {@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n *\n *\n */\nvar HashLocationStrategy = /** @class */ (function (_super) {\n    __extends(HashLocationStrategy, _super);\n    function HashLocationStrategy(_platformLocation, _baseHref) {\n        var _this = _super.call(this) || this;\n        _this._platformLocation = _platformLocation;\n        _this._baseHref = '';\n        if (_baseHref != null) {\n            _this._baseHref = _baseHref;\n        }\n        return _this;\n    }\n    HashLocationStrategy.prototype.onPopState = function (fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    };\n    HashLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n    HashLocationStrategy.prototype.path = function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        // the hash value is always prefixed with a `#`\n        // and if it is empty then it will stay empty\n        var path = this._platformLocation.hash;\n        if (path == null)\n            path = '#';\n        return path.length > 0 ? path.substring(1) : path;\n    };\n    HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n        var url = Location.joinWithSlash(this._baseHref, internal);\n        return url.length > 0 ? ('#' + url) : url;\n    };\n    HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {\n        var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.pushState(state, title, url);\n    };\n    HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {\n        var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.replaceState(state, title, url);\n    };\n    HashLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n    HashLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n    HashLocationStrategy.decorators = [\n        { type: core.Injectable }\n    ];\n    /** @nocollapse */\n    HashLocationStrategy.ctorParameters = function () { return [\n        { type: PlatformLocation, },\n        { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [APP_BASE_HREF,] },] },\n    ]; };\n    return HashLocationStrategy;\n}(LocationStrategy));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n *\n * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}\n * or add a base element to the document. This URL prefix that will be preserved\n * when generating and recognizing URLs.\n *\n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * Similarly, if you add `<base href='/my/app'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * ### Example\n *\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n *\n */\nvar PathLocationStrategy = /** @class */ (function (_super) {\n    __extends(PathLocationStrategy, _super);\n    function PathLocationStrategy(_platformLocation, href) {\n        var _this = _super.call(this) || this;\n        _this._platformLocation = _platformLocation;\n        if (href == null) {\n            href = _this._platformLocation.getBaseHrefFromDOM();\n        }\n        if (href == null) {\n            throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n        }\n        _this._baseHref = href;\n        return _this;\n    }\n    PathLocationStrategy.prototype.onPopState = function (fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    };\n    PathLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n    PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n        return Location.joinWithSlash(this._baseHref, internal);\n    };\n    PathLocationStrategy.prototype.path = function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        var pathname = this._platformLocation.pathname +\n            Location.normalizeQueryParams(this._platformLocation.search);\n        var hash = this._platformLocation.hash;\n        return hash && includeHash ? \"\" + pathname + hash : pathname;\n    };\n    PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n        var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n        this._platformLocation.pushState(state, title, externalUrl);\n    };\n    PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n        var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n        this._platformLocation.replaceState(state, title, externalUrl);\n    };\n    PathLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n    PathLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n    PathLocationStrategy.decorators = [\n        { type: core.Injectable }\n    ];\n    /** @nocollapse */\n    PathLocationStrategy.ctorParameters = function () { return [\n        { type: PlatformLocation, },\n        { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [APP_BASE_HREF,] },] },\n    ]; };\n    return PathLocationStrategy;\n}(LocationStrategy));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// THIS CODE IS GENERATED - DO NOT MODIFY\n// See angular/tools/gulp-tasks/cldr/extract.js\nvar u = undefined;\nfunction plural(n) {\n    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n    if (i === 1 && v === 0)\n        return 1;\n    return 5;\n}\nvar localeEn = [\n    'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n    [\n        ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n    ],\n    u,\n    [\n        ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n        ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n            'October', 'November', 'December'\n        ]\n    ],\n    u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n    ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n    ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n    ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n    ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @experimental i18n support is experimental.\n */\nvar LOCALE_DATA = {};\n/**\n * Register global data to be used internally by Angular. See the\n * {@linkDocs guide/i18n#i18n-pipes \"I18n guide\"} to know how to import additional locale data.\n *\n * @experimental i18n support is experimental.\n */\n// The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1\nfunction registerLocaleData(data, localeId, extraData) {\n    if (typeof localeId !== 'string') {\n        extraData = localeId;\n        localeId = data[0 /* LocaleId */];\n    }\n    localeId = localeId.toLowerCase().replace(/_/g, '-');\n    LOCALE_DATA[localeId] = data;\n    if (extraData) {\n        LOCALE_DATA[localeId][19 /* ExtraData */] = extraData;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @internal */\nvar CURRENCIES_EN = {\n    'ADP': [undefined, undefined, 0],\n    'AFN': [undefined, undefined, 0],\n    'ALL': [undefined, undefined, 0],\n    'AMD': [undefined, undefined, 0],\n    'AOA': [undefined, 'Kz'],\n    'ARS': [undefined, '$'],\n    'AUD': ['A$', '$'],\n    'BAM': [undefined, 'KM'],\n    'BBD': [undefined, '$'],\n    'BDT': [undefined, '৳'],\n    'BHD': [undefined, undefined, 3],\n    'BIF': [undefined, undefined, 0],\n    'BMD': [undefined, '$'],\n    'BND': [undefined, '$'],\n    'BOB': [undefined, 'Bs'],\n    'BRL': ['R$'],\n    'BSD': [undefined, '$'],\n    'BWP': [undefined, 'P'],\n    'BYN': [undefined, 'р.', 2],\n    'BYR': [undefined, undefined, 0],\n    'BZD': [undefined, '$'],\n    'CAD': ['CA$', '$', 2],\n    'CHF': [undefined, undefined, 2],\n    'CLF': [undefined, undefined, 4],\n    'CLP': [undefined, '$', 0],\n    'CNY': ['CN¥', '¥'],\n    'COP': [undefined, '$', 0],\n    'CRC': [undefined, '₡', 2],\n    'CUC': [undefined, '$'],\n    'CUP': [undefined, '$'],\n    'CZK': [undefined, 'Kč', 2],\n    'DJF': [undefined, undefined, 0],\n    'DKK': [undefined, 'kr', 2],\n    'DOP': [undefined, '$'],\n    'EGP': [undefined, 'E£'],\n    'ESP': [undefined, '₧', 0],\n    'EUR': ['€'],\n    'FJD': [undefined, '$'],\n    'FKP': [undefined, '£'],\n    'GBP': ['£'],\n    'GEL': [undefined, '₾'],\n    'GIP': [undefined, '£'],\n    'GNF': [undefined, 'FG', 0],\n    'GTQ': [undefined, 'Q'],\n    'GYD': [undefined, '$', 0],\n    'HKD': ['HK$', '$'],\n    'HNL': [undefined, 'L'],\n    'HRK': [undefined, 'kn'],\n    'HUF': [undefined, 'Ft', 2],\n    'IDR': [undefined, 'Rp', 0],\n    'ILS': ['₪'],\n    'INR': ['₹'],\n    'IQD': [undefined, undefined, 0],\n    'IRR': [undefined, undefined, 0],\n    'ISK': [undefined, 'kr', 0],\n    'ITL': [undefined, undefined, 0],\n    'JMD': [undefined, '$'],\n    'JOD': [undefined, undefined, 3],\n    'JPY': ['¥', undefined, 0],\n    'KHR': [undefined, '៛'],\n    'KMF': [undefined, 'CF', 0],\n    'KPW': [undefined, '₩', 0],\n    'KRW': ['₩', undefined, 0],\n    'KWD': [undefined, undefined, 3],\n    'KYD': [undefined, '$'],\n    'KZT': [undefined, '₸'],\n    'LAK': [undefined, '₭', 0],\n    'LBP': [undefined, 'L£', 0],\n    'LKR': [undefined, 'Rs'],\n    'LRD': [undefined, '$'],\n    'LTL': [undefined, 'Lt'],\n    'LUF': [undefined, undefined, 0],\n    'LVL': [undefined, 'Ls'],\n    'LYD': [undefined, undefined, 3],\n    'MGA': [undefined, 'Ar', 0],\n    'MGF': [undefined, undefined, 0],\n    'MMK': [undefined, 'K', 0],\n    'MNT': [undefined, '₮', 0],\n    'MRO': [undefined, undefined, 0],\n    'MUR': [undefined, 'Rs', 0],\n    'MXN': ['MX$', '$'],\n    'MYR': [undefined, 'RM'],\n    'NAD': [undefined, '$'],\n    'NGN': [undefined, '₦'],\n    'NIO': [undefined, 'C$'],\n    'NOK': [undefined, 'kr', 2],\n    'NPR': [undefined, 'Rs'],\n    'NZD': ['NZ$', '$'],\n    'OMR': [undefined, undefined, 3],\n    'PHP': [undefined, '₱'],\n    'PKR': [undefined, 'Rs', 0],\n    'PLN': [undefined, 'zł'],\n    'PYG': [undefined, '₲', 0],\n    'RON': [undefined, 'lei'],\n    'RSD': [undefined, undefined, 0],\n    'RUB': [undefined, '₽'],\n    'RUR': [undefined, 'р.'],\n    'RWF': [undefined, 'RF', 0],\n    'SBD': [undefined, '$'],\n    'SEK': [undefined, 'kr', 2],\n    'SGD': [undefined, '$'],\n    'SHP': [undefined, '£'],\n    'SLL': [undefined, undefined, 0],\n    'SOS': [undefined, undefined, 0],\n    'SRD': [undefined, '$'],\n    'SSP': [undefined, '£'],\n    'STD': [undefined, undefined, 0],\n    'STN': [undefined, 'Db'],\n    'SYP': [undefined, '£', 0],\n    'THB': [undefined, '฿'],\n    'TMM': [undefined, undefined, 0],\n    'TND': [undefined, undefined, 3],\n    'TOP': [undefined, 'T$'],\n    'TRL': [undefined, undefined, 0],\n    'TRY': [undefined, '₺'],\n    'TTD': [undefined, '$'],\n    'TWD': ['NT$', '$', 2],\n    'TZS': [undefined, undefined, 0],\n    'UAH': [undefined, '₴'],\n    'UGX': [undefined, undefined, 0],\n    'USD': ['$'],\n    'UYI': [undefined, undefined, 0],\n    'UYU': [undefined, '$'],\n    'UZS': [undefined, undefined, 0],\n    'VEF': [undefined, 'Bs'],\n    'VND': ['₫', undefined, 0],\n    'VUV': [undefined, undefined, 0],\n    'XAF': ['FCFA', undefined, 0],\n    'XCD': ['EC$', '$'],\n    'XOF': ['CFA', undefined, 0],\n    'XPF': ['CFPF', undefined, 0],\n    'YER': [undefined, undefined, 0],\n    'ZAR': [undefined, 'R'],\n    'ZMK': [undefined, undefined, 0],\n    'ZMW': [undefined, 'ZK'],\n    'ZWD': [undefined, undefined, 0]\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The different format styles that can be used to represent numbers.\n * Used by the function {@link getLocaleNumberFormat}.\n *\n * @experimental i18n support is experimental.\n */\n/**\n * The different format styles that can be used to represent numbers.\n * Used by the function {@link getLocaleNumberFormat}.\n *\n * @experimental i18n support is experimental.\n */\n\n/**\n * The different format styles that can be used to represent numbers.\n * Used by the function {@link getLocaleNumberFormat}.\n *\n * @experimental i18n support is experimental.\n */\n(function (NumberFormatStyle) {\n    NumberFormatStyle[NumberFormatStyle[\"Decimal\"] = 0] = \"Decimal\";\n    NumberFormatStyle[NumberFormatStyle[\"Percent\"] = 1] = \"Percent\";\n    NumberFormatStyle[NumberFormatStyle[\"Currency\"] = 2] = \"Currency\";\n    NumberFormatStyle[NumberFormatStyle[\"Scientific\"] = 3] = \"Scientific\";\n})(exports.NumberFormatStyle || (exports.NumberFormatStyle = {}));\n/** @experimental */\n/** @experimental */\n\n/** @experimental */\n(function (Plural) {\n    Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n    Plural[Plural[\"One\"] = 1] = \"One\";\n    Plural[Plural[\"Two\"] = 2] = \"Two\";\n    Plural[Plural[\"Few\"] = 3] = \"Few\";\n    Plural[Plural[\"Many\"] = 4] = \"Many\";\n    Plural[Plural[\"Other\"] = 5] = \"Other\";\n})(exports.Plural || (exports.Plural = {}));\n/**\n * Some languages use two different forms of strings (standalone and format) depending on the\n * context.\n * Typically the standalone version is the nominative form of the word, and the format version is in\n * the genitive.\n * See [the CLDR website](http://cldr.unicode.org/translation/date-time) for more information.\n *\n * @experimental i18n support is experimental.\n */\n/**\n * Some languages use two different forms of strings (standalone and format) depending on the\n * context.\n * Typically the standalone version is the nominative form of the word, and the format version is in\n * the genitive.\n * See [the CLDR website](http://cldr.unicode.org/translation/date-time) for more information.\n *\n * @experimental i18n support is experimental.\n */\n\n/**\n * Some languages use two different forms of strings (standalone and format) depending on the\n * context.\n * Typically the standalone version is the nominative form of the word, and the format version is in\n * the genitive.\n * See [the CLDR website](http://cldr.unicode.org/translation/date-time) for more information.\n *\n * @experimental i18n support is experimental.\n */\n(function (FormStyle) {\n    FormStyle[FormStyle[\"Format\"] = 0] = \"Format\";\n    FormStyle[FormStyle[\"Standalone\"] = 1] = \"Standalone\";\n})(exports.FormStyle || (exports.FormStyle = {}));\n/**\n * Multiple widths are available for translations: narrow (1 character), abbreviated (3 characters),\n * wide (full length), and short (2 characters, only for days).\n *\n * For example the day `Sunday` will be:\n * - Narrow: `S`\n * - Short: `Su`\n * - Abbreviated: `Sun`\n * - Wide: `Sunday`\n *\n * @experimental i18n support is experimental.\n */\n/**\n * Multiple widths are available for translations: narrow (1 character), abbreviated (3 characters),\n * wide (full length), and short (2 characters, only for days).\n *\n * For example the day `Sunday` will be:\n * - Narrow: `S`\n * - Short: `Su`\n * - Abbreviated: `Sun`\n * - Wide: `Sunday`\n *\n * @experimental i18n support is experimental.\n */\n\n/**\n * Multiple widths are available for translations: narrow (1 character), abbreviated (3 characters),\n * wide (full length), and short (2 characters, only for days).\n *\n * For example the day `Sunday` will be:\n * - Narrow: `S`\n * - Short: `Su`\n * - Abbreviated: `Sun`\n * - Wide: `Sunday`\n *\n * @experimental i18n support is experimental.\n */\n(function (TranslationWidth) {\n    TranslationWidth[TranslationWidth[\"Narrow\"] = 0] = \"Narrow\";\n    TranslationWidth[TranslationWidth[\"Abbreviated\"] = 1] = \"Abbreviated\";\n    TranslationWidth[TranslationWidth[\"Wide\"] = 2] = \"Wide\";\n    TranslationWidth[TranslationWidth[\"Short\"] = 3] = \"Short\";\n})(exports.TranslationWidth || (exports.TranslationWidth = {}));\n/**\n * Multiple widths are available for formats: short (minimal amount of data), medium (small amount\n * of data), long (complete amount of data), full (complete amount of data and extra information).\n *\n * For example the date-time formats for the english locale will be:\n *  - `'short'`: `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`)\n *  - `'medium'`: `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`)\n *  - `'long'`: `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM GMT+1`)\n *  - `'full'`: `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at\n * 9:03:01 AM GMT+01:00`)\n *\n * @experimental i18n support is experimental.\n */\n/**\n * Multiple widths are available for formats: short (minimal amount of data), medium (small amount\n * of data), long (complete amount of data), full (complete amount of data and extra information).\n *\n * For example the date-time formats for the english locale will be:\n *  - `'short'`: `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`)\n *  - `'medium'`: `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`)\n *  - `'long'`: `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM GMT+1`)\n *  - `'full'`: `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at\n * 9:03:01 AM GMT+01:00`)\n *\n * @experimental i18n support is experimental.\n */\n\n/**\n * Multiple widths are available for formats: short (minimal amount of data), medium (small amount\n * of data), long (complete amount of data), full (complete amount of data and extra information).\n *\n * For example the date-time formats for the english locale will be:\n *  - `'short'`: `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`)\n *  - `'medium'`: `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`)\n *  - `'long'`: `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM GMT+1`)\n *  - `'full'`: `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at\n * 9:03:01 AM GMT+01:00`)\n *\n * @experimental i18n support is experimental.\n */\n(function (FormatWidth) {\n    FormatWidth[FormatWidth[\"Short\"] = 0] = \"Short\";\n    FormatWidth[FormatWidth[\"Medium\"] = 1] = \"Medium\";\n    FormatWidth[FormatWidth[\"Long\"] = 2] = \"Long\";\n    FormatWidth[FormatWidth[\"Full\"] = 3] = \"Full\";\n})(exports.FormatWidth || (exports.FormatWidth = {}));\n/**\n * Number symbol that can be used to replace placeholders in number patterns.\n * The placeholders are based on english values:\n *\n * | Name                   | Example for en-US | Meaning                                     |\n * |------------------------|-------------------|---------------------------------------------|\n * | decimal                | 2,345`.`67        | decimal separator                           |\n * | group                  | 2`,`345.67        | grouping separator, typically for thousands |\n * | plusSign               | `+`23             | the plus sign used with numbers             |\n * | minusSign              | `-`23             | the minus sign used with numbers            |\n * | percentSign            | 23.4`%`           | the percent sign (out of 100)               |\n * | perMille               | 234`‰`            | the permille sign (out of 1000)             |\n * | exponential            | 1.2`E`3           | used in computers for 1.2×10³.              |\n * | superscriptingExponent | 1.2`×`103         | human-readable format of exponential        |\n * | infinity               | `∞`               | used in +∞ and -∞.                          |\n * | nan                    | `NaN`             | \"not a number\".                             |\n * | timeSeparator          | 10`:`52           | symbol used between time units              |\n * | currencyDecimal        | $2,345`.`67       | decimal separator, fallback to \"decimal\"    |\n * | currencyGroup          | $2`,`345.67       | grouping separator, fallback to \"group\"     |\n *\n * @experimental i18n support is experimental.\n */\n/**\n * Number symbol that can be used to replace placeholders in number patterns.\n * The placeholders are based on english values:\n *\n * | Name                   | Example for en-US | Meaning                                     |\n * |------------------------|-------------------|---------------------------------------------|\n * | decimal                | 2,345`.`67        | decimal separator                           |\n * | group                  | 2`,`345.67        | grouping separator, typically for thousands |\n * | plusSign               | `+`23             | the plus sign used with numbers             |\n * | minusSign              | `-`23             | the minus sign used with numbers            |\n * | percentSign            | 23.4`%`           | the percent sign (out of 100)               |\n * | perMille               | 234`‰`            | the permille sign (out of 1000)             |\n * | exponential            | 1.2`E`3           | used in computers for 1.2×10³.              |\n * | superscriptingExponent | 1.2`×`103         | human-readable format of exponential        |\n * | infinity               | `∞`               | used in +∞ and -∞.                          |\n * | nan                    | `NaN`             | \"not a number\".                             |\n * | timeSeparator          | 10`:`52           | symbol used between time units              |\n * | currencyDecimal        | $2,345`.`67       | decimal separator, fallback to \"decimal\"    |\n * | currencyGroup          | $2`,`345.67       | grouping separator, fallback to \"group\"     |\n *\n * @experimental i18n support is experimental.\n */\n\n/**\n * Number symbol that can be used to replace placeholders in number patterns.\n * The placeholders are based on english values:\n *\n * | Name                   | Example for en-US | Meaning                                     |\n * |------------------------|-------------------|---------------------------------------------|\n * | decimal                | 2,345`.`67        | decimal separator                           |\n * | group                  | 2`,`345.67        | grouping separator, typically for thousands |\n * | plusSign               | `+`23             | the plus sign used with numbers             |\n * | minusSign              | `-`23             | the minus sign used with numbers            |\n * | percentSign            | 23.4`%`           | the percent sign (out of 100)               |\n * | perMille               | 234`‰`            | the permille sign (out of 1000)             |\n * | exponential            | 1.2`E`3           | used in computers for 1.2×10³.              |\n * | superscriptingExponent | 1.2`×`103         | human-readable format of exponential        |\n * | infinity               | `∞`               | used in +∞ and -∞.                          |\n * | nan                    | `NaN`             | \"not a number\".                             |\n * | timeSeparator          | 10`:`52           | symbol used between time units              |\n * | currencyDecimal        | $2,345`.`67       | decimal separator, fallback to \"decimal\"    |\n * | currencyGroup          | $2`,`345.67       | grouping separator, fallback to \"group\"     |\n *\n * @experimental i18n support is experimental.\n */\n(function (NumberSymbol) {\n    NumberSymbol[NumberSymbol[\"Decimal\"] = 0] = \"Decimal\";\n    NumberSymbol[NumberSymbol[\"Group\"] = 1] = \"Group\";\n    NumberSymbol[NumberSymbol[\"List\"] = 2] = \"List\";\n    NumberSymbol[NumberSymbol[\"PercentSign\"] = 3] = \"PercentSign\";\n    NumberSymbol[NumberSymbol[\"PlusSign\"] = 4] = \"PlusSign\";\n    NumberSymbol[NumberSymbol[\"MinusSign\"] = 5] = \"MinusSign\";\n    NumberSymbol[NumberSymbol[\"Exponential\"] = 6] = \"Exponential\";\n    NumberSymbol[NumberSymbol[\"SuperscriptingExponent\"] = 7] = \"SuperscriptingExponent\";\n    NumberSymbol[NumberSymbol[\"PerMille\"] = 8] = \"PerMille\";\n    NumberSymbol[NumberSymbol[\"Infinity\"] = 9] = \"Infinity\";\n    NumberSymbol[NumberSymbol[\"NaN\"] = 10] = \"NaN\";\n    NumberSymbol[NumberSymbol[\"TimeSeparator\"] = 11] = \"TimeSeparator\";\n    NumberSymbol[NumberSymbol[\"CurrencyDecimal\"] = 12] = \"CurrencyDecimal\";\n    NumberSymbol[NumberSymbol[\"CurrencyGroup\"] = 13] = \"CurrencyGroup\";\n})(exports.NumberSymbol || (exports.NumberSymbol = {}));\n/**\n * The value for each day of the week, based on the en-US locale\n *\n * @experimental\n */\n/**\n * The value for each day of the week, based on the en-US locale\n *\n * @experimental\n */\n\n/**\n * The value for each day of the week, based on the en-US locale\n *\n * @experimental\n */\n(function (WeekDay) {\n    WeekDay[WeekDay[\"Sunday\"] = 0] = \"Sunday\";\n    WeekDay[WeekDay[\"Monday\"] = 1] = \"Monday\";\n    WeekDay[WeekDay[\"Tuesday\"] = 2] = \"Tuesday\";\n    WeekDay[WeekDay[\"Wednesday\"] = 3] = \"Wednesday\";\n    WeekDay[WeekDay[\"Thursday\"] = 4] = \"Thursday\";\n    WeekDay[WeekDay[\"Friday\"] = 5] = \"Friday\";\n    WeekDay[WeekDay[\"Saturday\"] = 6] = \"Saturday\";\n})(exports.WeekDay || (exports.WeekDay = {}));\n/**\n * The locale id for the chosen locale (e.g `en-GB`).\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleId(locale) {\n    return findLocaleData(locale)[0 /* LocaleId */];\n}\n/**\n * Periods of the day (e.g. `[AM, PM]` for en-US).\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleDayPeriods(locale, formStyle, width) {\n    var data = findLocaleData(locale);\n    var amPmData = [data[1 /* DayPeriodsFormat */], data[2 /* DayPeriodsStandalone */]];\n    var amPm = getLastDefinedValue(amPmData, formStyle);\n    return getLastDefinedValue(amPm, width);\n}\n/**\n * Days of the week for the Gregorian calendar (e.g. `[Sunday, Monday, ... Saturday]` for en-US).\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleDayNames(locale, formStyle, width) {\n    var data = findLocaleData(locale);\n    var daysData = [data[3 /* DaysFormat */], data[4 /* DaysStandalone */]];\n    var days = getLastDefinedValue(daysData, formStyle);\n    return getLastDefinedValue(days, width);\n}\n/**\n * Months of the year for the Gregorian calendar (e.g. `[January, February, ...]` for en-US).\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleMonthNames(locale, formStyle, width) {\n    var data = findLocaleData(locale);\n    var monthsData = [data[5 /* MonthsFormat */], data[6 /* MonthsStandalone */]];\n    var months = getLastDefinedValue(monthsData, formStyle);\n    return getLastDefinedValue(months, width);\n}\n/**\n * Eras for the Gregorian calendar (e.g. AD/BC).\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleEraNames(locale, width) {\n    var data = findLocaleData(locale);\n    var erasData = data[7 /* Eras */];\n    return getLastDefinedValue(erasData, width);\n}\n/**\n * First day of the week for this locale, based on english days (Sunday = 0, Monday = 1, ...).\n * For example in french the value would be 1 because the first day of the week is Monday.\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleFirstDayOfWeek(locale) {\n    var data = findLocaleData(locale);\n    return data[8 /* FirstDayOfWeek */];\n}\n/**\n * Range of days in the week that represent the week-end for this locale, based on english days\n * (Sunday = 0, Monday = 1, ...).\n * For example in english the value would be [6,0] for Saturday to Sunday.\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleWeekEndRange(locale) {\n    var data = findLocaleData(locale);\n    return data[9 /* WeekendRange */];\n}\n/**\n * Date format that depends on the locale.\n *\n * There are four basic date formats:\n * - `full` should contain long-weekday (EEEE), year (y), long-month (MMMM), day (d).\n *\n *  For example, English uses `EEEE, MMMM d, y`, corresponding to a date like\n *  \"Tuesday, September 14, 1999\".\n *\n * - `long` should contain year, long-month, day.\n *\n *  For example, `MMMM d, y`, corresponding to a date like \"September 14, 1999\".\n *\n * - `medium` should contain year, abbreviated-month (MMM), day.\n *\n *  For example, `MMM d, y`, corresponding to a date like \"Sep 14, 1999\".\n *  For languages that do not use abbreviated months, use the numeric month (MM/M). For example,\n *  `y/MM/dd`, corresponding to a date like \"1999/09/14\".\n *\n * - `short` should contain year, numeric-month (MM/M), and day.\n *\n *  For example, `M/d/yy`, corresponding to a date like \"9/14/99\".\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleDateFormat(locale, width) {\n    var data = findLocaleData(locale);\n    return getLastDefinedValue(data[10 /* DateFormat */], width);\n}\n/**\n * Time format that depends on the locale.\n *\n * The standard formats include four basic time formats:\n * - `full` should contain hour (h/H), minute (mm), second (ss), and zone (zzzz).\n * - `long` should contain hour, minute, second, and zone (z)\n * - `medium` should contain hour, minute, second.\n * - `short` should contain hour, minute.\n *\n * Note: The patterns depend on whether the main country using your language uses 12-hour time or\n * not:\n * - For 12-hour time, use a pattern like `hh:mm a` using h to mean a 12-hour clock cycle running\n * 1 through 12 (midnight plus 1 minute is 12:01), or using K to mean a 12-hour clock cycle\n * running 0 through 11 (midnight plus 1 minute is 0:01).\n * - For 24-hour time, use a pattern like `HH:mm` using H to mean a 24-hour clock cycle running 0\n * through 23 (midnight plus 1 minute is 0:01), or using k to mean a 24-hour clock cycle running\n * 1 through 24 (midnight plus 1 minute is 24:01).\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleTimeFormat(locale, width) {\n    var data = findLocaleData(locale);\n    return getLastDefinedValue(data[11 /* TimeFormat */], width);\n}\n/**\n * Date-time format that depends on the locale.\n *\n * The date-time pattern shows how to combine separate patterns for date (represented by {1})\n * and time (represented by {0}) into a single pattern. It usually doesn't need to be changed.\n * What you want to pay attention to are:\n * - possibly removing a space for languages that don't use it, such as many East Asian languages\n * - possibly adding a comma, other punctuation, or a combining word\n *\n * For example:\n * - English uses `{1} 'at' {0}` or `{1}, {0}` (depending on date style), while Japanese uses\n *  `{1}{0}`.\n * - An English formatted date-time using the combining pattern `{1}, {0}` could be\n *  `Dec 10, 2010, 3:59:49 PM`. Notice the comma and space between the date portion and the time\n *  portion.\n *\n * There are four formats (`full`, `long`, `medium`, `short`); the determination of which to use\n * is normally based on the date style. For example, if the date has a full month and weekday\n * name, the full combining pattern will be used to combine that with a time. If the date has\n * numeric month, the short version of the combining pattern will be used to combine that with a\n * time. English uses `{1} 'at' {0}` for full and long styles, and `{1}, {0}` for medium and short\n * styles.\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleDateTimeFormat(locale, width) {\n    var data = findLocaleData(locale);\n    var dateTimeFormatData = data[12 /* DateTimeFormat */];\n    return getLastDefinedValue(dateTimeFormatData, width);\n}\n/**\n * Number symbol that can be used to replace placeholders in number formats.\n * See {@link NumberSymbol} for more information.\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleNumberSymbol(locale, symbol) {\n    var data = findLocaleData(locale);\n    var res = data[13 /* NumberSymbols */][symbol];\n    if (typeof res === 'undefined') {\n        if (symbol === exports.NumberSymbol.CurrencyDecimal) {\n            return data[13 /* NumberSymbols */][exports.NumberSymbol.Decimal];\n        }\n        else if (symbol === exports.NumberSymbol.CurrencyGroup) {\n            return data[13 /* NumberSymbols */][exports.NumberSymbol.Group];\n        }\n    }\n    return res;\n}\n/**\n * Number format that depends on the locale.\n *\n * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`\n * when used to format the number 12345.678 could result in \"12'345,67\". That would happen if the\n * grouping separator for your language is an apostrophe, and the decimal separator is a comma.\n *\n * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders;\n * they stand for the decimal separator, and so on, and are NOT real characters.\n * You must NOT \"translate\" the placeholders; for example, don't change `.` to `,` even though in\n * your language the decimal point is written with a comma. The symbols should be replaced by the\n * local equivalents, using the Number Symbols for your language.\n *\n * Here are the special characters used in number patterns:\n *\n * | Symbol | Meaning |\n * |--------|---------|\n * | . | Replaced automatically by the character used for the decimal point. |\n * | , | Replaced by the \"grouping\" (thousands) separator. |\n * | 0 | Replaced by a digit (or zero if there aren't enough digits). |\n * | # | Replaced by a digit (or nothing if there aren't enough). |\n * | ¤ | This will be replaced by a currency symbol, such as $ or USD. |\n * | % | This marks a percent format. The % symbol may change position, but must be retained. |\n * | E | This marks a scientific format. The E symbol may change position, but must be retained. |\n * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |\n *\n * You can find more information\n * [on the CLDR website](http://cldr.unicode.org/translation/number-patterns)\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleNumberFormat(locale, type) {\n    var data = findLocaleData(locale);\n    return data[14 /* NumberFormats */][type];\n}\n/**\n * The symbol used to represent the currency for the main country using this locale (e.g. $ for\n * the locale en-US).\n * The symbol will be `null` if the main country cannot be determined.\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleCurrencySymbol(locale) {\n    var data = findLocaleData(locale);\n    return data[15 /* CurrencySymbol */] || null;\n}\n/**\n * The name of the currency for the main country using this locale (e.g. USD for the locale\n * en-US).\n * The name will be `null` if the main country cannot be determined.\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleCurrencyName(locale) {\n    var data = findLocaleData(locale);\n    return data[16 /* CurrencyName */] || null;\n}\n/**\n * Returns the currency values for the locale\n */\nfunction getLocaleCurrencies(locale) {\n    var data = findLocaleData(locale);\n    return data[17 /* Currencies */];\n}\n/**\n * The locale plural function used by ICU expressions to determine the plural case to use.\n * See {@link NgPlural} for more information.\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocalePluralCase(locale) {\n    var data = findLocaleData(locale);\n    return data[18 /* PluralCase */];\n}\nfunction checkFullData(data) {\n    if (!data[19 /* ExtraData */]) {\n        throw new Error(\"Missing extra locale data for the locale \\\"\" + data[0 /* LocaleId */] + \"\\\". Use \\\"registerLocaleData\\\" to load new data. See the \\\"I18n guide\\\" on angular.io to know more.\");\n    }\n}\n/**\n * Rules used to determine which day period to use (See `dayPeriods` below).\n * The rules can either be an array or a single value. If it's an array, consider it as \"from\"\n * and \"to\". If it's a single value then it means that the period is only valid at this exact\n * value.\n * There is always the same number of rules as the number of day periods, which means that the\n * first rule is applied to the first day period and so on.\n * You should fallback to AM/PM when there are no rules available.\n *\n * Note: this is only available if you load the full locale data.\n * See the {@linkDocs guide/i18n#i18n-pipes \"I18n guide\"} to know how to import additional locale\n * data.\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleExtraDayPeriodRules(locale) {\n    var data = findLocaleData(locale);\n    checkFullData(data);\n    var rules = data[19 /* ExtraData */][2 /* ExtraDayPeriodsRules */] || [];\n    return rules.map(function (rule) {\n        if (typeof rule === 'string') {\n            return extractTime(rule);\n        }\n        return [extractTime(rule[0]), extractTime(rule[1])];\n    });\n}\n/**\n * Day Periods indicate roughly how the day is broken up in different languages (e.g. morning,\n * noon, afternoon, midnight, ...).\n * You should use the function {@link getLocaleExtraDayPeriodRules} to determine which period to\n * use.\n * You should fallback to AM/PM when there are no day periods available.\n *\n * Note: this is only available if you load the full locale data.\n * See the {@linkDocs guide/i18n#i18n-pipes \"I18n guide\"} to know how to import additional locale\n * data.\n *\n * @experimental i18n support is experimental.\n */\nfunction getLocaleExtraDayPeriods(locale, formStyle, width) {\n    var data = findLocaleData(locale);\n    checkFullData(data);\n    var dayPeriodsData = [\n        data[19 /* ExtraData */][0 /* ExtraDayPeriodFormats */],\n        data[19 /* ExtraData */][1 /* ExtraDayPeriodStandalone */]\n    ];\n    var dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];\n    return getLastDefinedValue(dayPeriods, width) || [];\n}\n/**\n * Returns the first value that is defined in an array, going backwards.\n *\n * To avoid repeating the same data (e.g. when \"format\" and \"standalone\" are the same) we only\n * add the first one to the locale data arrays, the other ones are only defined when different.\n * We use this function to retrieve the first defined value.\n *\n * @experimental i18n support is experimental.\n */\nfunction getLastDefinedValue(data, index) {\n    for (var i = index; i > -1; i--) {\n        if (typeof data[i] !== 'undefined') {\n            return data[i];\n        }\n    }\n    throw new Error('Locale data API: locale data undefined');\n}\n/**\n * Extract the hours and minutes from a string like \"15:45\"\n */\nfunction extractTime(time) {\n    var _a = __read(time.split(':'), 2), h = _a[0], m = _a[1];\n    return { hours: +h, minutes: +m };\n}\n/**\n * Finds the locale data for a locale id\n *\n * @experimental i18n support is experimental.\n */\nfunction findLocaleData(locale) {\n    var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n    var match = LOCALE_DATA[normalizedLocale];\n    if (match) {\n        return match;\n    }\n    // let's try to find a parent locale\n    var parentLocale = normalizedLocale.split('-')[0];\n    match = LOCALE_DATA[parentLocale];\n    if (match) {\n        return match;\n    }\n    if (parentLocale === 'en') {\n        return localeEn;\n    }\n    throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n}\n/**\n * Returns the currency symbol for a given currency code, or the code if no symbol available\n * (e.g.: format narrow = $, format wide = US$, code = USD)\n * If no locale is provided, it uses the locale \"en\" by default\n *\n * @experimental i18n support is experimental.\n */\nfunction getCurrencySymbol(code, format, locale) {\n    if (locale === void 0) { locale = 'en'; }\n    var currency = getLocaleCurrencies(locale)[code] || CURRENCIES_EN[code] || [];\n    var symbolNarrow = currency[1 /* SymbolNarrow */];\n    if (format === 'narrow' && typeof symbolNarrow === 'string') {\n        return symbolNarrow;\n    }\n    return currency[0 /* Symbol */] || code;\n}\n// Most currencies have cents, that's why the default is 2\nvar DEFAULT_NB_OF_CURRENCY_DIGITS = 2;\n/**\n * Returns the number of decimal digits for the given currency.\n * Its value depends upon the presence of cents in that particular currency.\n *\n * @experimental i18n support is experimental.\n */\nfunction getNumberOfCurrencyDigits(code) {\n    var digits;\n    var currency = CURRENCIES_EN[code];\n    if (currency) {\n        digits = currency[2 /* NbOfDigits */];\n    }\n    return typeof digits === 'number' ? digits : DEFAULT_NB_OF_CURRENCY_DIGITS;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n//    1        2       3         4          5          6          7          8  9     10      11\nvar NAMED_FORMATS = {};\nvar DATE_FORMATS_SPLIT = /((?:[^GyMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\\s\\S]*)/;\nvar ZoneWidth;\n(function (ZoneWidth) {\n    ZoneWidth[ZoneWidth[\"Short\"] = 0] = \"Short\";\n    ZoneWidth[ZoneWidth[\"ShortGMT\"] = 1] = \"ShortGMT\";\n    ZoneWidth[ZoneWidth[\"Long\"] = 2] = \"Long\";\n    ZoneWidth[ZoneWidth[\"Extended\"] = 3] = \"Extended\";\n})(ZoneWidth || (ZoneWidth = {}));\nvar DateType;\n(function (DateType) {\n    DateType[DateType[\"FullYear\"] = 0] = \"FullYear\";\n    DateType[DateType[\"Month\"] = 1] = \"Month\";\n    DateType[DateType[\"Date\"] = 2] = \"Date\";\n    DateType[DateType[\"Hours\"] = 3] = \"Hours\";\n    DateType[DateType[\"Minutes\"] = 4] = \"Minutes\";\n    DateType[DateType[\"Seconds\"] = 5] = \"Seconds\";\n    DateType[DateType[\"Milliseconds\"] = 6] = \"Milliseconds\";\n    DateType[DateType[\"Day\"] = 7] = \"Day\";\n})(DateType || (DateType = {}));\nvar TranslationType;\n(function (TranslationType) {\n    TranslationType[TranslationType[\"DayPeriods\"] = 0] = \"DayPeriods\";\n    TranslationType[TranslationType[\"Days\"] = 1] = \"Days\";\n    TranslationType[TranslationType[\"Months\"] = 2] = \"Months\";\n    TranslationType[TranslationType[\"Eras\"] = 3] = \"Eras\";\n})(TranslationType || (TranslationType = {}));\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date according to locale rules.\n *\n * Where:\n * - `value` is a Date, a number (milliseconds since UTC epoch) or an ISO string\n *   (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. See {@link DatePipe} for more\n *   details.\n * - `locale` is a `string` defining the locale to use.\n * - `timezone` to be used for formatting. It understands UTC/GMT and the continental US time zone\n *   abbreviations, but for general use, use a time zone offset (e.g. `'+0430'`).\n *   If not specified, host system settings are used.\n *\n * See {@link DatePipe} for more details.\n *\n *\n */\nfunction formatDate(value, format, locale, timezone) {\n    var date = toDate(value);\n    var namedFormat = getNamedFormat(locale, format);\n    format = namedFormat || format;\n    var parts = [];\n    var match;\n    while (format) {\n        match = DATE_FORMATS_SPLIT.exec(format);\n        if (match) {\n            parts = parts.concat(match.slice(1));\n            var part = parts.pop();\n            if (!part) {\n                break;\n            }\n            format = part;\n        }\n        else {\n            parts.push(format);\n            break;\n        }\n    }\n    var dateTimezoneOffset = date.getTimezoneOffset();\n    if (timezone) {\n        dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n        date = convertTimezoneToLocal(date, timezone, true);\n    }\n    var text = '';\n    parts.forEach(function (value) {\n        var dateFormatter = getDateFormatter(value);\n        text += dateFormatter ?\n            dateFormatter(date, locale, dateTimezoneOffset) :\n            value === '\\'\\'' ? '\\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n    });\n    return text;\n}\nfunction getNamedFormat(locale, format) {\n    var localeId = getLocaleId(locale);\n    NAMED_FORMATS[localeId] = NAMED_FORMATS[localeId] || {};\n    if (NAMED_FORMATS[localeId][format]) {\n        return NAMED_FORMATS[localeId][format];\n    }\n    var formatValue = '';\n    switch (format) {\n        case 'shortDate':\n            formatValue = getLocaleDateFormat(locale, exports.FormatWidth.Short);\n            break;\n        case 'mediumDate':\n            formatValue = getLocaleDateFormat(locale, exports.FormatWidth.Medium);\n            break;\n        case 'longDate':\n            formatValue = getLocaleDateFormat(locale, exports.FormatWidth.Long);\n            break;\n        case 'fullDate':\n            formatValue = getLocaleDateFormat(locale, exports.FormatWidth.Full);\n            break;\n        case 'shortTime':\n            formatValue = getLocaleTimeFormat(locale, exports.FormatWidth.Short);\n            break;\n        case 'mediumTime':\n            formatValue = getLocaleTimeFormat(locale, exports.FormatWidth.Medium);\n            break;\n        case 'longTime':\n            formatValue = getLocaleTimeFormat(locale, exports.FormatWidth.Long);\n            break;\n        case 'fullTime':\n            formatValue = getLocaleTimeFormat(locale, exports.FormatWidth.Full);\n            break;\n        case 'short':\n            var shortTime = getNamedFormat(locale, 'shortTime');\n            var shortDate = getNamedFormat(locale, 'shortDate');\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, exports.FormatWidth.Short), [shortTime, shortDate]);\n            break;\n        case 'medium':\n            var mediumTime = getNamedFormat(locale, 'mediumTime');\n            var mediumDate = getNamedFormat(locale, 'mediumDate');\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, exports.FormatWidth.Medium), [mediumTime, mediumDate]);\n            break;\n        case 'long':\n            var longTime = getNamedFormat(locale, 'longTime');\n            var longDate = getNamedFormat(locale, 'longDate');\n            formatValue =\n                formatDateTime(getLocaleDateTimeFormat(locale, exports.FormatWidth.Long), [longTime, longDate]);\n            break;\n        case 'full':\n            var fullTime = getNamedFormat(locale, 'fullTime');\n            var fullDate = getNamedFormat(locale, 'fullDate');\n            formatValue =\n                formatDateTime(getLocaleDateTimeFormat(locale, exports.FormatWidth.Full), [fullTime, fullDate]);\n            break;\n    }\n    if (formatValue) {\n        NAMED_FORMATS[localeId][format] = formatValue;\n    }\n    return formatValue;\n}\nfunction formatDateTime(str, opt_values) {\n    if (opt_values) {\n        str = str.replace(/\\{([^}]+)}/g, function (match, key) {\n            return (opt_values != null && key in opt_values) ? opt_values[key] : match;\n        });\n    }\n    return str;\n}\nfunction padNumber(num, digits, minusSign, trim, negWrap) {\n    if (minusSign === void 0) { minusSign = '-'; }\n    var neg = '';\n    if (num < 0 || (negWrap && num <= 0)) {\n        if (negWrap) {\n            num = -num + 1;\n        }\n        else {\n            num = -num;\n            neg = minusSign;\n        }\n    }\n    var strNum = String(num);\n    while (strNum.length < digits) {\n        strNum = '0' + strNum;\n    }\n    if (trim) {\n        strNum = strNum.substr(strNum.length - digits);\n    }\n    return neg + strNum;\n}\n/**\n * Returns a date formatter that transforms a date into its locale digit representation\n */\nfunction dateGetter(name, size, offset, trim, negWrap) {\n    if (offset === void 0) { offset = 0; }\n    if (trim === void 0) { trim = false; }\n    if (negWrap === void 0) { negWrap = false; }\n    return function (date, locale) {\n        var part = getDatePart(name, date, size);\n        if (offset > 0 || part > -offset) {\n            part += offset;\n        }\n        if (name === DateType.Hours && part === 0 && offset === -12) {\n            part = 12;\n        }\n        return padNumber(part, size, getLocaleNumberSymbol(locale, exports.NumberSymbol.MinusSign), trim, negWrap);\n    };\n}\nfunction getDatePart(name, date, size) {\n    switch (name) {\n        case DateType.FullYear:\n            return date.getFullYear();\n        case DateType.Month:\n            return date.getMonth();\n        case DateType.Date:\n            return date.getDate();\n        case DateType.Hours:\n            return date.getHours();\n        case DateType.Minutes:\n            return date.getMinutes();\n        case DateType.Seconds:\n            return date.getSeconds();\n        case DateType.Milliseconds:\n            var div = size === 1 ? 100 : (size === 2 ? 10 : 1);\n            return Math.round(date.getMilliseconds() / div);\n        case DateType.Day:\n            return date.getDay();\n        default:\n            throw new Error(\"Unknown DateType value \\\"\" + name + \"\\\".\");\n    }\n}\n/**\n * Returns a date formatter that transforms a date into its locale string representation\n */\nfunction dateStrGetter(name, width, form, extended) {\n    if (form === void 0) { form = exports.FormStyle.Format; }\n    if (extended === void 0) { extended = false; }\n    return function (date, locale) {\n        return getDateTranslation(date, locale, name, width, form, extended);\n    };\n}\n/**\n * Returns the locale translation of a date for a given form, type and width\n */\nfunction getDateTranslation(date, locale, name, width, form, extended) {\n    switch (name) {\n        case TranslationType.Months:\n            return getLocaleMonthNames(locale, form, width)[date.getMonth()];\n        case TranslationType.Days:\n            return getLocaleDayNames(locale, form, width)[date.getDay()];\n        case TranslationType.DayPeriods:\n            var currentHours_1 = date.getHours();\n            var currentMinutes_1 = date.getMinutes();\n            if (extended) {\n                var rules = getLocaleExtraDayPeriodRules(locale);\n                var dayPeriods_1 = getLocaleExtraDayPeriods(locale, form, width);\n                var result_1;\n                rules.forEach(function (rule, index) {\n                    if (Array.isArray(rule)) {\n                        // morning, afternoon, evening, night\n                        var _a = rule[0], hoursFrom = _a.hours, minutesFrom = _a.minutes;\n                        var _b = rule[1], hoursTo = _b.hours, minutesTo = _b.minutes;\n                        if (currentHours_1 >= hoursFrom && currentMinutes_1 >= minutesFrom &&\n                            (currentHours_1 < hoursTo ||\n                                (currentHours_1 === hoursTo && currentMinutes_1 < minutesTo))) {\n                            result_1 = dayPeriods_1[index];\n                        }\n                    }\n                    else {\n                        // noon or midnight\n                        var hours = rule.hours, minutes = rule.minutes;\n                        if (hours === currentHours_1 && minutes === currentMinutes_1) {\n                            result_1 = dayPeriods_1[index];\n                        }\n                    }\n                });\n                if (result_1) {\n                    return result_1;\n                }\n            }\n            // if no rules for the day periods, we use am/pm by default\n            return getLocaleDayPeriods(locale, form, width)[currentHours_1 < 12 ? 0 : 1];\n        case TranslationType.Eras:\n            return getLocaleEraNames(locale, width)[date.getFullYear() <= 0 ? 0 : 1];\n        default:\n            // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n            // However Closure Compiler does not understand that and reports an error in typed mode.\n            // The `throw new Error` below works around the problem, and the unexpected: never variable\n            // makes sure tsc still checks this code is unreachable.\n            var unexpected = name;\n            throw new Error(\"unexpected translation type \" + unexpected);\n    }\n}\n/**\n * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or\n * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,\n * extended = +04:30)\n */\nfunction timeZoneGetter(width) {\n    return function (date, locale, offset) {\n        var zone = -1 * offset;\n        var minusSign = getLocaleNumberSymbol(locale, exports.NumberSymbol.MinusSign);\n        var hours = zone > 0 ? Math.floor(zone / 60) : Math.ceil(zone / 60);\n        switch (width) {\n            case ZoneWidth.Short:\n                return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) +\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\n            case ZoneWidth.ShortGMT:\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 1, minusSign);\n            case ZoneWidth.Long:\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\n            case ZoneWidth.Extended:\n                if (offset === 0) {\n                    return 'Z';\n                }\n                else {\n                    return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n                        padNumber(Math.abs(zone % 60), 2, minusSign);\n                }\n            default:\n                throw new Error(\"Unknown zone width \\\"\" + width + \"\\\"\");\n        }\n    };\n}\nvar JANUARY = 0;\nvar THURSDAY = 4;\nfunction getFirstThursdayOfYear(year) {\n    var firstDayOfYear = (new Date(year, JANUARY, 1)).getDay();\n    return new Date(year, 0, 1 + ((firstDayOfYear <= THURSDAY) ? THURSDAY : THURSDAY + 7) - firstDayOfYear);\n}\nfunction getThursdayThisWeek(datetime) {\n    return new Date(datetime.getFullYear(), datetime.getMonth(), datetime.getDate() + (THURSDAY - datetime.getDay()));\n}\nfunction weekGetter(size, monthBased) {\n    if (monthBased === void 0) { monthBased = false; }\n    return function (date, locale) {\n        var result;\n        if (monthBased) {\n            var nbDaysBefore1stDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;\n            var today = date.getDate();\n            result = 1 + Math.floor((today + nbDaysBefore1stDayOfMonth) / 7);\n        }\n        else {\n            var firstThurs = getFirstThursdayOfYear(date.getFullYear());\n            var thisThurs = getThursdayThisWeek(date);\n            var diff = thisThurs.getTime() - firstThurs.getTime();\n            result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week\n        }\n        return padNumber(result, size, getLocaleNumberSymbol(locale, exports.NumberSymbol.MinusSign));\n    };\n}\nvar DATE_FORMATS = {};\n// Based on CLDR formats:\n// See complete list: http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n// See also explanations: http://cldr.unicode.org/translation/date-time\n// TODO(ocombe): support all missing cldr formats: Y, U, Q, D, F, e, c, j, J, C, A, v, V, X, x\nfunction getDateFormatter(format) {\n    if (DATE_FORMATS[format]) {\n        return DATE_FORMATS[format];\n    }\n    var formatter;\n    switch (format) {\n        // Era name (AD/BC)\n        case 'G':\n        case 'GG':\n        case 'GGG':\n            formatter = dateStrGetter(TranslationType.Eras, exports.TranslationWidth.Abbreviated);\n            break;\n        case 'GGGG':\n            formatter = dateStrGetter(TranslationType.Eras, exports.TranslationWidth.Wide);\n            break;\n        case 'GGGGG':\n            formatter = dateStrGetter(TranslationType.Eras, exports.TranslationWidth.Narrow);\n            break;\n        // 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)\n        case 'y':\n            formatter = dateGetter(DateType.FullYear, 1, 0, false, true);\n            break;\n        // 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n        case 'yy':\n            formatter = dateGetter(DateType.FullYear, 2, 0, true, true);\n            break;\n        // 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)\n        case 'yyy':\n            formatter = dateGetter(DateType.FullYear, 3, 0, false, true);\n            break;\n        // 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)\n        case 'yyyy':\n            formatter = dateGetter(DateType.FullYear, 4, 0, false, true);\n            break;\n        // Month of the year (1-12), numeric\n        case 'M':\n        case 'L':\n            formatter = dateGetter(DateType.Month, 1, 1);\n            break;\n        case 'MM':\n        case 'LL':\n            formatter = dateGetter(DateType.Month, 2, 1);\n            break;\n        // Month of the year (January, ...), string, format\n        case 'MMM':\n            formatter = dateStrGetter(TranslationType.Months, exports.TranslationWidth.Abbreviated);\n            break;\n        case 'MMMM':\n            formatter = dateStrGetter(TranslationType.Months, exports.TranslationWidth.Wide);\n            break;\n        case 'MMMMM':\n            formatter = dateStrGetter(TranslationType.Months, exports.TranslationWidth.Narrow);\n            break;\n        // Month of the year (January, ...), string, standalone\n        case 'LLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, exports.TranslationWidth.Abbreviated, exports.FormStyle.Standalone);\n            break;\n        case 'LLLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, exports.TranslationWidth.Wide, exports.FormStyle.Standalone);\n            break;\n        case 'LLLLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, exports.TranslationWidth.Narrow, exports.FormStyle.Standalone);\n            break;\n        // Week of the year (1, ... 52)\n        case 'w':\n            formatter = weekGetter(1);\n            break;\n        case 'ww':\n            formatter = weekGetter(2);\n            break;\n        // Week of the month (1, ...)\n        case 'W':\n            formatter = weekGetter(1, true);\n            break;\n        // Day of the month (1-31)\n        case 'd':\n            formatter = dateGetter(DateType.Date, 1);\n            break;\n        case 'dd':\n            formatter = dateGetter(DateType.Date, 2);\n            break;\n        // Day of the Week\n        case 'E':\n        case 'EE':\n        case 'EEE':\n            formatter = dateStrGetter(TranslationType.Days, exports.TranslationWidth.Abbreviated);\n            break;\n        case 'EEEE':\n            formatter = dateStrGetter(TranslationType.Days, exports.TranslationWidth.Wide);\n            break;\n        case 'EEEEE':\n            formatter = dateStrGetter(TranslationType.Days, exports.TranslationWidth.Narrow);\n            break;\n        case 'EEEEEE':\n            formatter = dateStrGetter(TranslationType.Days, exports.TranslationWidth.Short);\n            break;\n        // Generic period of the day (am-pm)\n        case 'a':\n        case 'aa':\n        case 'aaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, exports.TranslationWidth.Abbreviated);\n            break;\n        case 'aaaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, exports.TranslationWidth.Wide);\n            break;\n        case 'aaaaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, exports.TranslationWidth.Narrow);\n            break;\n        // Extended period of the day (midnight, at night, ...), standalone\n        case 'b':\n        case 'bb':\n        case 'bbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, exports.TranslationWidth.Abbreviated, exports.FormStyle.Standalone, true);\n            break;\n        case 'bbbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, exports.TranslationWidth.Wide, exports.FormStyle.Standalone, true);\n            break;\n        case 'bbbbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, exports.TranslationWidth.Narrow, exports.FormStyle.Standalone, true);\n            break;\n        // Extended period of the day (midnight, night, ...), standalone\n        case 'B':\n        case 'BB':\n        case 'BBB':\n            formatter = dateStrGetter(TranslationType.DayPeriods, exports.TranslationWidth.Abbreviated, exports.FormStyle.Format, true);\n            break;\n        case 'BBBB':\n            formatter =\n                dateStrGetter(TranslationType.DayPeriods, exports.TranslationWidth.Wide, exports.FormStyle.Format, true);\n            break;\n        case 'BBBBB':\n            formatter = dateStrGetter(TranslationType.DayPeriods, exports.TranslationWidth.Narrow, exports.FormStyle.Format, true);\n            break;\n        // Hour in AM/PM, (1-12)\n        case 'h':\n            formatter = dateGetter(DateType.Hours, 1, -12);\n            break;\n        case 'hh':\n            formatter = dateGetter(DateType.Hours, 2, -12);\n            break;\n        // Hour of the day (0-23)\n        case 'H':\n            formatter = dateGetter(DateType.Hours, 1);\n            break;\n        // Hour in day, padded (00-23)\n        case 'HH':\n            formatter = dateGetter(DateType.Hours, 2);\n            break;\n        // Minute of the hour (0-59)\n        case 'm':\n            formatter = dateGetter(DateType.Minutes, 1);\n            break;\n        case 'mm':\n            formatter = dateGetter(DateType.Minutes, 2);\n            break;\n        // Second of the minute (0-59)\n        case 's':\n            formatter = dateGetter(DateType.Seconds, 1);\n            break;\n        case 'ss':\n            formatter = dateGetter(DateType.Seconds, 2);\n            break;\n        // Fractional second padded (0-9)\n        case 'S':\n            formatter = dateGetter(DateType.Milliseconds, 1);\n            break;\n        case 'SS':\n            formatter = dateGetter(DateType.Milliseconds, 2);\n            break;\n        // = millisecond\n        case 'SSS':\n            formatter = dateGetter(DateType.Milliseconds, 3);\n            break;\n        // Timezone ISO8601 short format (-0430)\n        case 'Z':\n        case 'ZZ':\n        case 'ZZZ':\n            formatter = timeZoneGetter(ZoneWidth.Short);\n            break;\n        // Timezone ISO8601 extended format (-04:30)\n        case 'ZZZZZ':\n            formatter = timeZoneGetter(ZoneWidth.Extended);\n            break;\n        // Timezone GMT short format (GMT+4)\n        case 'O':\n        case 'OO':\n        case 'OOO':\n        // Should be location, but fallback to format O instead because we don't have the data yet\n        case 'z':\n        case 'zz':\n        case 'zzz':\n            formatter = timeZoneGetter(ZoneWidth.ShortGMT);\n            break;\n        // Timezone GMT long format (GMT+0430)\n        case 'OOOO':\n        case 'ZZZZ':\n        // Should be location, but fallback to format O instead because we don't have the data yet\n        case 'zzzz':\n            formatter = timeZoneGetter(ZoneWidth.Long);\n            break;\n        default:\n            return null;\n    }\n    DATE_FORMATS[format] = formatter;\n    return formatter;\n}\nfunction timezoneToOffset(timezone, fallback) {\n    // Support: IE 9-11 only, Edge 13-15+\n    // IE/Edge do not \"understand\" colon (`:`) in timezone\n    timezone = timezone.replace(/:/g, '');\n    var requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;\n    return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;\n}\nfunction addDateMinutes(date, minutes) {\n    date = new Date(date.getTime());\n    date.setMinutes(date.getMinutes() + minutes);\n    return date;\n}\nfunction convertTimezoneToLocal(date, timezone, reverse) {\n    var reverseValue = reverse ? -1 : 1;\n    var dateTimezoneOffset = date.getTimezoneOffset();\n    var timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n    return addDateMinutes(date, reverseValue * (timezoneOffset - dateTimezoneOffset));\n}\n/**\n * Converts a value to date.\n *\n * Supported input formats:\n * - `Date`\n * - number: timestamp\n * - string: numeric (e.g. \"1234\"), ISO and date strings in a format supported by\n *   [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\n *   Note: ISO strings without time return a date without timeoffset.\n *\n * Throws if unable to convert to a date.\n */\nfunction toDate(value) {\n    if (isDate(value)) {\n        return value;\n    }\n    if (typeof value === 'number' && !isNaN(value)) {\n        return new Date(value);\n    }\n    if (typeof value === 'string') {\n        value = value.trim();\n        var parsedNb = parseFloat(value);\n        // any string that only contains numbers, like \"1234\" but not like \"1234hello\"\n        if (!isNaN(value - parsedNb)) {\n            return new Date(parsedNb);\n        }\n        if (/^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n            /* For ISO Strings without time the day, month and year must be extracted from the ISO String\n                  before Date creation to avoid time offset and errors in the new Date.\n                  If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n                  date, some browsers (e.g. IE 9) will throw an invalid Date error.\n                  If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n                  is applied.\n                  Note: ISO months are 0 for January, 1 for February, ... */\n            var _a = __read(value.split('-').map(function (val) { return +val; }), 3), y = _a[0], m = _a[1], d = _a[2];\n            return new Date(y, m - 1, d);\n        }\n        var match = void 0;\n        if (match = value.match(ISO8601_DATE_REGEX)) {\n            return isoStringToDate(match);\n        }\n    }\n    var date = new Date(value);\n    if (!isDate(date)) {\n        throw new Error(\"Unable to convert \\\"\" + value + \"\\\" into a date\");\n    }\n    return date;\n}\n/**\n * Converts a date in ISO8601 to a Date.\n * Used instead of `Date.parse` because of browser discrepancies.\n */\nfunction isoStringToDate(match) {\n    var date = new Date(0);\n    var tzHour = 0;\n    var tzMin = 0;\n    // match[8] means that the string contains \"Z\" (UTC) or a timezone like \"+01:00\" or \"+0100\"\n    var dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n    var timeSetter = match[8] ? date.setUTCHours : date.setHours;\n    // if there is a timezone defined like \"+01:00\" or \"+0100\"\n    if (match[9]) {\n        tzHour = Number(match[9] + match[10]);\n        tzMin = Number(match[9] + match[11]);\n    }\n    dateSetter.call(date, Number(match[1]), Number(match[2]) - 1, Number(match[3]));\n    var h = Number(match[4] || 0) - tzHour;\n    var m = Number(match[5] || 0) - tzMin;\n    var s = Number(match[6] || 0);\n    var ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n    timeSetter.call(date, h, m, s, ms);\n    return date;\n}\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\nvar MAX_DIGITS = 22;\nvar DECIMAL_SEP = '.';\nvar ZERO_CHAR = '0';\nvar PATTERN_SEP = ';';\nvar GROUP_SEP = ',';\nvar DIGIT_CHAR = '#';\nvar CURRENCY_CHAR = '¤';\nvar PERCENT_CHAR = '%';\n/**\n * Transforms a number to a locale string based on a style and a format\n */\nfunction formatNumberToLocaleString(value, pattern, locale, groupSymbol, decimalSymbol, digitsInfo, isPercent) {\n    if (isPercent === void 0) { isPercent = false; }\n    var formattedText = '';\n    var isZero = false;\n    if (!isFinite(value)) {\n        formattedText = getLocaleNumberSymbol(locale, exports.NumberSymbol.Infinity);\n    }\n    else {\n        var parsedNumber = parseNumber(value);\n        if (isPercent) {\n            parsedNumber = toPercent(parsedNumber);\n        }\n        var minInt = pattern.minInt;\n        var minFraction = pattern.minFrac;\n        var maxFraction = pattern.maxFrac;\n        if (digitsInfo) {\n            var parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);\n            if (parts === null) {\n                throw new Error(digitsInfo + \" is not a valid digit info\");\n            }\n            var minIntPart = parts[1];\n            var minFractionPart = parts[3];\n            var maxFractionPart = parts[5];\n            if (minIntPart != null) {\n                minInt = parseIntAutoRadix(minIntPart);\n            }\n            if (minFractionPart != null) {\n                minFraction = parseIntAutoRadix(minFractionPart);\n            }\n            if (maxFractionPart != null) {\n                maxFraction = parseIntAutoRadix(maxFractionPart);\n            }\n            else if (minFractionPart != null && minFraction > maxFraction) {\n                maxFraction = minFraction;\n            }\n        }\n        roundNumber(parsedNumber, minFraction, maxFraction);\n        var digits = parsedNumber.digits;\n        var integerLen = parsedNumber.integerLen;\n        var exponent = parsedNumber.exponent;\n        var decimals = [];\n        isZero = digits.every(function (d) { return !d; });\n        // pad zeros for small numbers\n        for (; integerLen < minInt; integerLen++) {\n            digits.unshift(0);\n        }\n        // pad zeros for small numbers\n        for (; integerLen < 0; integerLen++) {\n            digits.unshift(0);\n        }\n        // extract decimals digits\n        if (integerLen > 0) {\n            decimals = digits.splice(integerLen, digits.length);\n        }\n        else {\n            decimals = digits;\n            digits = [0];\n        }\n        // format the integer digits with grouping separators\n        var groups = [];\n        if (digits.length >= pattern.lgSize) {\n            groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));\n        }\n        while (digits.length > pattern.gSize) {\n            groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));\n        }\n        if (digits.length) {\n            groups.unshift(digits.join(''));\n        }\n        formattedText = groups.join(getLocaleNumberSymbol(locale, groupSymbol));\n        // append the decimal digits\n        if (decimals.length) {\n            formattedText += getLocaleNumberSymbol(locale, decimalSymbol) + decimals.join('');\n        }\n        if (exponent) {\n            formattedText += getLocaleNumberSymbol(locale, exports.NumberSymbol.Exponential) + '+' + exponent;\n        }\n    }\n    if (value < 0 && !isZero) {\n        formattedText = pattern.negPre + formattedText + pattern.negSuf;\n    }\n    else {\n        formattedText = pattern.posPre + formattedText + pattern.posSuf;\n    }\n    return formattedText;\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as currency using locale rules.\n *\n * Use `currency` to format a number as currency.\n *\n * Where:\n * - `value` is a number.\n * - `locale` is a `string` defining the locale to use.\n * - `currency` is the string that represents the currency, it can be its symbol or its name.\n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `digitInfo` See {@link DecimalPipe} for more details.\n *\n *\n */\nfunction formatCurrency(value, locale, currency, currencyCode, digitsInfo) {\n    var format = getLocaleNumberFormat(locale, exports.NumberFormatStyle.Currency);\n    var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, exports.NumberSymbol.MinusSign));\n    pattern.minFrac = getNumberOfCurrencyDigits((currencyCode));\n    pattern.maxFrac = pattern.minFrac;\n    var res = formatNumberToLocaleString(value, pattern, locale, exports.NumberSymbol.CurrencyGroup, exports.NumberSymbol.CurrencyDecimal, digitsInfo);\n    return res\n        .replace(CURRENCY_CHAR, currency)\n        .replace(CURRENCY_CHAR, '');\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as a percentage according to locale rules.\n *\n * Where:\n * - `value` is a number.\n * - `locale` is a `string` defining the locale to use.\n * - `digitInfo` See {@link DecimalPipe} for more details.\n *\n *\n */\nfunction formatPercent(value, locale, digitsInfo) {\n    var format = getLocaleNumberFormat(locale, exports.NumberFormatStyle.Percent);\n    var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, exports.NumberSymbol.MinusSign));\n    var res = formatNumberToLocaleString(value, pattern, locale, exports.NumberSymbol.Group, exports.NumberSymbol.Decimal, digitsInfo, true);\n    return res.replace(new RegExp(PERCENT_CHAR, 'g'), getLocaleNumberSymbol(locale, exports.NumberSymbol.PercentSign));\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the locale.\n *\n * Where:\n * - `value` is a number.\n * - `locale` is a `string` defining the locale to use.\n * - `digitInfo` See {@link DecimalPipe} for more details.\n *\n *\n */\nfunction formatNumber(value, locale, digitsInfo) {\n    var format = getLocaleNumberFormat(locale, exports.NumberFormatStyle.Decimal);\n    var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, exports.NumberSymbol.MinusSign));\n    return formatNumberToLocaleString(value, pattern, locale, exports.NumberSymbol.Group, exports.NumberSymbol.Decimal, digitsInfo);\n}\nfunction parseNumberFormat(format, minusSign) {\n    if (minusSign === void 0) { minusSign = '-'; }\n    var p = {\n        minInt: 1,\n        minFrac: 0,\n        maxFrac: 0,\n        posPre: '',\n        posSuf: '',\n        negPre: '',\n        negSuf: '',\n        gSize: 0,\n        lgSize: 0\n    };\n    var patternParts = format.split(PATTERN_SEP);\n    var positive = patternParts[0];\n    var negative = patternParts[1];\n    var positiveParts = positive.indexOf(DECIMAL_SEP) !== -1 ?\n        positive.split(DECIMAL_SEP) :\n        [\n            positive.substring(0, positive.lastIndexOf(ZERO_CHAR) + 1),\n            positive.substring(positive.lastIndexOf(ZERO_CHAR) + 1)\n        ], integer = positiveParts[0], fraction = positiveParts[1] || '';\n    p.posPre = integer.substr(0, integer.indexOf(DIGIT_CHAR));\n    for (var i = 0; i < fraction.length; i++) {\n        var ch = fraction.charAt(i);\n        if (ch === ZERO_CHAR) {\n            p.minFrac = p.maxFrac = i + 1;\n        }\n        else if (ch === DIGIT_CHAR) {\n            p.maxFrac = i + 1;\n        }\n        else {\n            p.posSuf += ch;\n        }\n    }\n    var groups = integer.split(GROUP_SEP);\n    p.gSize = groups[1] ? groups[1].length : 0;\n    p.lgSize = (groups[2] || groups[1]) ? (groups[2] || groups[1]).length : 0;\n    if (negative) {\n        var trunkLen = positive.length - p.posPre.length - p.posSuf.length, pos = negative.indexOf(DIGIT_CHAR);\n        p.negPre = negative.substr(0, pos).replace(/'/g, '');\n        p.negSuf = negative.substr(pos + trunkLen).replace(/'/g, '');\n    }\n    else {\n        p.negPre = minusSign + p.posPre;\n        p.negSuf = p.posSuf;\n    }\n    return p;\n}\n// Transforms a parsed number into a percentage by multiplying it by 100\nfunction toPercent(parsedNumber) {\n    // if the number is 0, don't do anything\n    if (parsedNumber.digits[0] === 0) {\n        return parsedNumber;\n    }\n    // Getting the current number of decimals\n    var fractionLen = parsedNumber.digits.length - parsedNumber.integerLen;\n    if (parsedNumber.exponent) {\n        parsedNumber.exponent += 2;\n    }\n    else {\n        if (fractionLen === 0) {\n            parsedNumber.digits.push(0, 0);\n        }\n        else if (fractionLen === 1) {\n            parsedNumber.digits.push(0);\n        }\n        parsedNumber.integerLen += 2;\n    }\n    return parsedNumber;\n}\n/**\n * Parses a number.\n * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/\n */\nfunction parseNumber(num) {\n    var numStr = Math.abs(num) + '';\n    var exponent = 0, digits, integerLen;\n    var i, j, zeros;\n    // Decimal point?\n    if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {\n        numStr = numStr.replace(DECIMAL_SEP, '');\n    }\n    // Exponential form?\n    if ((i = numStr.search(/e/i)) > 0) {\n        // Work out the exponent.\n        if (integerLen < 0)\n            integerLen = i;\n        integerLen += +numStr.slice(i + 1);\n        numStr = numStr.substring(0, i);\n    }\n    else if (integerLen < 0) {\n        // There was no decimal point or exponent so it is an integer.\n        integerLen = numStr.length;\n    }\n    // Count the number of leading zeros.\n    for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) {\n        /* empty */\n    }\n    if (i === (zeros = numStr.length)) {\n        // The digits are all zero.\n        digits = [0];\n        integerLen = 1;\n    }\n    else {\n        // Count the number of trailing zeros\n        zeros--;\n        while (numStr.charAt(zeros) === ZERO_CHAR)\n            zeros--;\n        // Trailing zeros are insignificant so ignore them\n        integerLen -= i;\n        digits = [];\n        // Convert string to array of digits without leading/trailing zeros.\n        for (j = 0; i <= zeros; i++, j++) {\n            digits[j] = Number(numStr.charAt(i));\n        }\n    }\n    // If the number overflows the maximum allowed digits then use an exponent.\n    if (integerLen > MAX_DIGITS) {\n        digits = digits.splice(0, MAX_DIGITS - 1);\n        exponent = integerLen - 1;\n        integerLen = 1;\n    }\n    return { digits: digits, exponent: exponent, integerLen: integerLen };\n}\n/**\n * Round the parsed number to the specified number of decimal places\n * This function changes the parsedNumber in-place\n */\nfunction roundNumber(parsedNumber, minFrac, maxFrac) {\n    if (minFrac > maxFrac) {\n        throw new Error(\"The minimum number of digits after fraction (\" + minFrac + \") is higher than the maximum (\" + maxFrac + \").\");\n    }\n    var digits = parsedNumber.digits;\n    var fractionLen = digits.length - parsedNumber.integerLen;\n    var fractionSize = Math.min(Math.max(minFrac, fractionLen), maxFrac);\n    // The index of the digit to where rounding is to occur\n    var roundAt = fractionSize + parsedNumber.integerLen;\n    var digit = digits[roundAt];\n    if (roundAt > 0) {\n        // Drop fractional digits beyond `roundAt`\n        digits.splice(Math.max(parsedNumber.integerLen, roundAt));\n        // Set non-fractional digits beyond `roundAt` to 0\n        for (var j = roundAt; j < digits.length; j++) {\n            digits[j] = 0;\n        }\n    }\n    else {\n        // We rounded to zero so reset the parsedNumber\n        fractionLen = Math.max(0, fractionLen);\n        parsedNumber.integerLen = 1;\n        digits.length = Math.max(1, roundAt = fractionSize + 1);\n        digits[0] = 0;\n        for (var i = 1; i < roundAt; i++)\n            digits[i] = 0;\n    }\n    if (digit >= 5) {\n        if (roundAt - 1 < 0) {\n            for (var k = 0; k > roundAt; k--) {\n                digits.unshift(0);\n                parsedNumber.integerLen++;\n            }\n            digits.unshift(1);\n            parsedNumber.integerLen++;\n        }\n        else {\n            digits[roundAt - 1]++;\n        }\n    }\n    // Pad out with zeros to get the required fraction length\n    for (; fractionLen < Math.max(0, fractionSize); fractionLen++)\n        digits.push(0);\n    var dropTrailingZeros = fractionSize !== 0;\n    // Minimal length = nb of decimals required + current nb of integers\n    // Any number besides that is optional and can be removed if it's a trailing 0\n    var minLen = minFrac + parsedNumber.integerLen;\n    // Do any carrying, e.g. a digit was rounded up to 10\n    var carry = digits.reduceRight(function (carry, d, i, digits) {\n        d = d + carry;\n        digits[i] = d < 10 ? d : d - 10; // d % 10\n        if (dropTrailingZeros) {\n            // Do not keep meaningless fractional trailing zeros (e.g. 15.52000 --> 15.52)\n            if (digits[i] === 0 && i >= minLen) {\n                digits.pop();\n            }\n            else {\n                dropTrailingZeros = false;\n            }\n        }\n        return d >= 10 ? 1 : 0; // Math.floor(d / 10);\n    }, 0);\n    if (carry) {\n        digits.unshift(carry);\n        parsedNumber.integerLen++;\n    }\n}\nfunction parseIntAutoRadix(text) {\n    var result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated from v5\n */\nvar DEPRECATED_PLURAL_FN = new core.InjectionToken('UseV4Plurals');\n/**\n * @experimental\n */\nvar NgLocalization = /** @class */ (function () {\n    function NgLocalization() {\n    }\n    return NgLocalization;\n}());\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n */\nfunction getPluralCategory(value, cases, ngLocalization, locale) {\n    var key = \"=\" + value;\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    key = ngLocalization.getPluralCategory(value, locale);\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    if (cases.indexOf('other') > -1) {\n        return 'other';\n    }\n    throw new Error(\"No plural message found for value \\\"\" + value + \"\\\"\");\n}\n/**\n * Returns the plural case based on the locale\n *\n * @experimental\n */\nvar NgLocaleLocalization = /** @class */ (function (_super) {\n    __extends(NgLocaleLocalization, _super);\n    function NgLocaleLocalization(locale, /** @deprecated from v5 */\n    deprecatedPluralFn) {\n        var _this = _super.call(this) || this;\n        _this.locale = locale;\n        _this.deprecatedPluralFn = deprecatedPluralFn;\n        return _this;\n    }\n    NgLocaleLocalization.prototype.getPluralCategory = function (value, locale) {\n        var plural = this.deprecatedPluralFn ? this.deprecatedPluralFn(locale || this.locale, value) :\n            getLocalePluralCase(locale || this.locale)(value);\n        switch (plural) {\n            case exports.Plural.Zero:\n                return 'zero';\n            case exports.Plural.One:\n                return 'one';\n            case exports.Plural.Two:\n                return 'two';\n            case exports.Plural.Few:\n                return 'few';\n            case exports.Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    };\n    NgLocaleLocalization.decorators = [\n        { type: core.Injectable }\n    ];\n    /** @nocollapse */\n    NgLocaleLocalization.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [core.LOCALE_ID,] },] },\n        { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [DEPRECATED_PLURAL_FN,] },] },\n    ]; };\n    return NgLocaleLocalization;\n}(NgLocalization));\n/**\n * Returns the plural case based on the locale\n *\n * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n * @experimental\n */\nfunction getPluralCase(locale, nLike) {\n    // TODO(vicb): lazy compute\n    if (typeof nLike === 'string') {\n        nLike = parseInt(nLike, 10);\n    }\n    var n = nLike;\n    var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n    var i = Math.floor(Math.abs(n));\n    var v = nDecimal.length;\n    var f = parseInt(nDecimal, 10);\n    var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n    var lang = locale.split('-')[0].toLowerCase();\n    switch (lang) {\n        case 'af':\n        case 'asa':\n        case 'az':\n        case 'bem':\n        case 'bez':\n        case 'bg':\n        case 'brx':\n        case 'ce':\n        case 'cgg':\n        case 'chr':\n        case 'ckb':\n        case 'ee':\n        case 'el':\n        case 'eo':\n        case 'es':\n        case 'eu':\n        case 'fo':\n        case 'fur':\n        case 'gsw':\n        case 'ha':\n        case 'haw':\n        case 'hu':\n        case 'jgo':\n        case 'jmc':\n        case 'ka':\n        case 'kk':\n        case 'kkj':\n        case 'kl':\n        case 'ks':\n        case 'ksb':\n        case 'ky':\n        case 'lb':\n        case 'lg':\n        case 'mas':\n        case 'mgo':\n        case 'ml':\n        case 'mn':\n        case 'nb':\n        case 'nd':\n        case 'ne':\n        case 'nn':\n        case 'nnh':\n        case 'nyn':\n        case 'om':\n        case 'or':\n        case 'os':\n        case 'ps':\n        case 'rm':\n        case 'rof':\n        case 'rwk':\n        case 'saq':\n        case 'seh':\n        case 'sn':\n        case 'so':\n        case 'sq':\n        case 'ta':\n        case 'te':\n        case 'teo':\n        case 'tk':\n        case 'tr':\n        case 'ug':\n        case 'uz':\n        case 'vo':\n        case 'vun':\n        case 'wae':\n        case 'xog':\n            if (n === 1)\n                return exports.Plural.One;\n            return exports.Plural.Other;\n        case 'ak':\n        case 'ln':\n        case 'mg':\n        case 'pa':\n        case 'ti':\n            if (n === Math.floor(n) && n >= 0 && n <= 1)\n                return exports.Plural.One;\n            return exports.Plural.Other;\n        case 'am':\n        case 'as':\n        case 'bn':\n        case 'fa':\n        case 'gu':\n        case 'hi':\n        case 'kn':\n        case 'mr':\n        case 'zu':\n            if (i === 0 || n === 1)\n                return exports.Plural.One;\n            return exports.Plural.Other;\n        case 'ar':\n            if (n === 0)\n                return exports.Plural.Zero;\n            if (n === 1)\n                return exports.Plural.One;\n            if (n === 2)\n                return exports.Plural.Two;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                return exports.Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                return exports.Plural.Many;\n            return exports.Plural.Other;\n        case 'ast':\n        case 'ca':\n        case 'de':\n        case 'en':\n        case 'et':\n        case 'fi':\n        case 'fy':\n        case 'gl':\n        case 'it':\n        case 'nl':\n        case 'sv':\n        case 'sw':\n        case 'ur':\n        case 'yi':\n            if (i === 1 && v === 0)\n                return exports.Plural.One;\n            return exports.Plural.Other;\n        case 'be':\n            if (n % 10 === 1 && !(n % 100 === 11))\n                return exports.Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                !(n % 100 >= 12 && n % 100 <= 14))\n                return exports.Plural.Few;\n            if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                return exports.Plural.Many;\n            return exports.Plural.Other;\n        case 'br':\n            if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                return exports.Plural.One;\n            if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                return exports.Plural.Two;\n            if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                    n % 100 >= 90 && n % 100 <= 99))\n                return exports.Plural.Few;\n            if (!(n === 0) && n % 1e6 === 0)\n                return exports.Plural.Many;\n            return exports.Plural.Other;\n        case 'bs':\n        case 'hr':\n        case 'sr':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                return exports.Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14) ||\n                f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                    !(f % 100 >= 12 && f % 100 <= 14))\n                return exports.Plural.Few;\n            return exports.Plural.Other;\n        case 'cs':\n        case 'sk':\n            if (i === 1 && v === 0)\n                return exports.Plural.One;\n            if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                return exports.Plural.Few;\n            if (!(v === 0))\n                return exports.Plural.Many;\n            return exports.Plural.Other;\n        case 'cy':\n            if (n === 0)\n                return exports.Plural.Zero;\n            if (n === 1)\n                return exports.Plural.One;\n            if (n === 2)\n                return exports.Plural.Two;\n            if (n === 3)\n                return exports.Plural.Few;\n            if (n === 6)\n                return exports.Plural.Many;\n            return exports.Plural.Other;\n        case 'da':\n            if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                return exports.Plural.One;\n            return exports.Plural.Other;\n        case 'dsb':\n        case 'hsb':\n            if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                return exports.Plural.One;\n            if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                return exports.Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                return exports.Plural.Few;\n            return exports.Plural.Other;\n        case 'ff':\n        case 'fr':\n        case 'hy':\n        case 'kab':\n            if (i === 0 || i === 1)\n                return exports.Plural.One;\n            return exports.Plural.Other;\n        case 'fil':\n            if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                return exports.Plural.One;\n            return exports.Plural.Other;\n        case 'ga':\n            if (n === 1)\n                return exports.Plural.One;\n            if (n === 2)\n                return exports.Plural.Two;\n            if (n === Math.floor(n) && n >= 3 && n <= 6)\n                return exports.Plural.Few;\n            if (n === Math.floor(n) && n >= 7 && n <= 10)\n                return exports.Plural.Many;\n            return exports.Plural.Other;\n        case 'gd':\n            if (n === 1 || n === 11)\n                return exports.Plural.One;\n            if (n === 2 || n === 12)\n                return exports.Plural.Two;\n            if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                return exports.Plural.Few;\n            return exports.Plural.Other;\n        case 'gv':\n            if (v === 0 && i % 10 === 1)\n                return exports.Plural.One;\n            if (v === 0 && i % 10 === 2)\n                return exports.Plural.Two;\n            if (v === 0 &&\n                (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                return exports.Plural.Few;\n            if (!(v === 0))\n                return exports.Plural.Many;\n            return exports.Plural.Other;\n        case 'he':\n            if (i === 1 && v === 0)\n                return exports.Plural.One;\n            if (i === 2 && v === 0)\n                return exports.Plural.Two;\n            if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                return exports.Plural.Many;\n            return exports.Plural.Other;\n        case 'is':\n            if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                return exports.Plural.One;\n            return exports.Plural.Other;\n        case 'ksh':\n            if (n === 0)\n                return exports.Plural.Zero;\n            if (n === 1)\n                return exports.Plural.One;\n            return exports.Plural.Other;\n        case 'kw':\n        case 'naq':\n        case 'se':\n        case 'smn':\n            if (n === 1)\n                return exports.Plural.One;\n            if (n === 2)\n                return exports.Plural.Two;\n            return exports.Plural.Other;\n        case 'lag':\n            if (n === 0)\n                return exports.Plural.Zero;\n            if ((i === 0 || i === 1) && !(n === 0))\n                return exports.Plural.One;\n            return exports.Plural.Other;\n        case 'lt':\n            if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                return exports.Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                !(n % 100 >= 11 && n % 100 <= 19))\n                return exports.Plural.Few;\n            if (!(f === 0))\n                return exports.Plural.Many;\n            return exports.Plural.Other;\n        case 'lv':\n        case 'prg':\n            if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                return exports.Plural.Zero;\n            if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                !(v === 2) && f % 10 === 1)\n                return exports.Plural.One;\n            return exports.Plural.Other;\n        case 'mk':\n            if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                return exports.Plural.One;\n            return exports.Plural.Other;\n        case 'mt':\n            if (n === 1)\n                return exports.Plural.One;\n            if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                return exports.Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                return exports.Plural.Many;\n            return exports.Plural.Other;\n        case 'pl':\n            if (i === 1 && v === 0)\n                return exports.Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return exports.Plural.Few;\n            if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                return exports.Plural.Many;\n            return exports.Plural.Other;\n        case 'pt':\n            if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                return exports.Plural.One;\n            return exports.Plural.Other;\n        case 'ro':\n            if (i === 1 && v === 0)\n                return exports.Plural.One;\n            if (!(v === 0) || n === 0 ||\n                !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                return exports.Plural.Few;\n            return exports.Plural.Other;\n        case 'ru':\n        case 'uk':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                return exports.Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return exports.Plural.Few;\n            if (v === 0 && i % 10 === 0 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                return exports.Plural.Many;\n            return exports.Plural.Other;\n        case 'shi':\n            if (i === 0 || n === 1)\n                return exports.Plural.One;\n            if (n === Math.floor(n) && n >= 2 && n <= 10)\n                return exports.Plural.Few;\n            return exports.Plural.Other;\n        case 'si':\n            if (n === 0 || n === 1 || i === 0 && f === 1)\n                return exports.Plural.One;\n            return exports.Plural.Other;\n        case 'sl':\n            if (v === 0 && i % 100 === 1)\n                return exports.Plural.One;\n            if (v === 0 && i % 100 === 2)\n                return exports.Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                return exports.Plural.Few;\n            return exports.Plural.Other;\n        case 'tzm':\n            if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                return exports.Plural.One;\n            return exports.Plural.Other;\n        // When there is no specification, the default is always \"other\"\n        // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n        // > other (required—general plural form — also used if the language only has a single form)\n        default:\n            return exports.Plural.Other;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction parseCookieValue(cookieStr, name) {\n    name = encodeURIComponent(name);\n    try {\n        for (var _a = __values(cookieStr.split(';')), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var cookie = _b.value;\n            var eqIndex = cookie.indexOf('=');\n            var _c = __read(eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], 2), cookieName = _c[0], cookieValue = _c[1];\n            if (cookieName.trim() === name) {\n                return decodeURIComponent(cookieValue);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_d = _a.return)) _d.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return null;\n    var e_1, _d;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n *     <some-element [ngClass]=\"'first second'\">...</some-element>\n *\n *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n *\n *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n *\n * @description\n *\n * Adds and removes CSS classes on an HTML element.\n *\n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n *\n *\n */\nvar NgClass = /** @class */ (function () {\n    function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n        this._iterableDiffers = _iterableDiffers;\n        this._keyValueDiffers = _keyValueDiffers;\n        this._ngEl = _ngEl;\n        this._renderer = _renderer;\n        this._initialClasses = [];\n    }\n    Object.defineProperty(NgClass.prototype, \"klass\", {\n        set: function (v) {\n            this._removeClasses(this._initialClasses);\n            this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n            this._applyClasses(this._initialClasses);\n            this._applyClasses(this._rawClass);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgClass.prototype, \"ngClass\", {\n        set: function (v) {\n            this._removeClasses(this._rawClass);\n            this._applyClasses(this._initialClasses);\n            this._iterableDiffer = null;\n            this._keyValueDiffer = null;\n            this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n            if (this._rawClass) {\n                if (core.ɵisListLikeIterable(this._rawClass)) {\n                    this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();\n                }\n                else {\n                    this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgClass.prototype.ngDoCheck = function () {\n        if (this._iterableDiffer) {\n            var iterableChanges = this._iterableDiffer.diff(this._rawClass);\n            if (iterableChanges) {\n                this._applyIterableChanges(iterableChanges);\n            }\n        }\n        else if (this._keyValueDiffer) {\n            var keyValueChanges = this._keyValueDiffer.diff(this._rawClass);\n            if (keyValueChanges) {\n                this._applyKeyValueChanges(keyValueChanges);\n            }\n        }\n    };\n    NgClass.prototype._applyKeyValueChanges = function (changes) {\n        var _this = this;\n        changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n        changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n        changes.forEachRemovedItem(function (record) {\n            if (record.previousValue) {\n                _this._toggleClass(record.key, false);\n            }\n        });\n    };\n    NgClass.prototype._applyIterableChanges = function (changes) {\n        var _this = this;\n        changes.forEachAddedItem(function (record) {\n            if (typeof record.item === 'string') {\n                _this._toggleClass(record.item, true);\n            }\n            else {\n                throw new Error(\"NgClass can only toggle CSS classes expressed as strings, got \" + core.ɵstringify(record.item));\n            }\n        });\n        changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n    };\n    /**\n     * Applies a collection of CSS classes to the DOM element.\n     *\n     * For argument of type Set and Array CSS class names contained in those collections are always\n     * added.\n     * For argument of type Map CSS class name in the map's key is toggled based on the value (added\n     * for truthy and removed for falsy).\n     */\n    /**\n       * Applies a collection of CSS classes to the DOM element.\n       *\n       * For argument of type Set and Array CSS class names contained in those collections are always\n       * added.\n       * For argument of type Map CSS class name in the map's key is toggled based on the value (added\n       * for truthy and removed for falsy).\n       */\n    NgClass.prototype._applyClasses = /**\n       * Applies a collection of CSS classes to the DOM element.\n       *\n       * For argument of type Set and Array CSS class names contained in those collections are always\n       * added.\n       * For argument of type Map CSS class name in the map's key is toggled based on the value (added\n       * for truthy and removed for falsy).\n       */\n    function (rawClassVal) {\n        var _this = this;\n        if (rawClassVal) {\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                rawClassVal.forEach(function (klass) { return _this._toggleClass(klass, true); });\n            }\n            else {\n                Object.keys(rawClassVal).forEach(function (klass) { return _this._toggleClass(klass, !!rawClassVal[klass]); });\n            }\n        }\n    };\n    /**\n     * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup\n     * purposes.\n     */\n    /**\n       * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup\n       * purposes.\n       */\n    NgClass.prototype._removeClasses = /**\n       * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup\n       * purposes.\n       */\n    function (rawClassVal) {\n        var _this = this;\n        if (rawClassVal) {\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                rawClassVal.forEach(function (klass) { return _this._toggleClass(klass, false); });\n            }\n            else {\n                Object.keys(rawClassVal).forEach(function (klass) { return _this._toggleClass(klass, false); });\n            }\n        }\n    };\n    NgClass.prototype._toggleClass = function (klass, enabled) {\n        var _this = this;\n        klass = klass.trim();\n        if (klass) {\n            klass.split(/\\s+/g).forEach(function (klass) {\n                if (enabled) {\n                    _this._renderer.addClass(_this._ngEl.nativeElement, klass);\n                }\n                else {\n                    _this._renderer.removeClass(_this._ngEl.nativeElement, klass);\n                }\n            });\n        }\n    };\n    NgClass.decorators = [\n        { type: core.Directive, args: [{ selector: '[ngClass]' },] }\n    ];\n    /** @nocollapse */\n    NgClass.ctorParameters = function () { return [\n        { type: core.IterableDiffers, },\n        { type: core.KeyValueDiffers, },\n        { type: core.ElementRef, },\n        { type: core.Renderer2, },\n    ]; };\n    NgClass.propDecorators = {\n        \"klass\": [{ type: core.Input, args: ['class',] },],\n        \"ngClass\": [{ type: core.Input },],\n    };\n    return NgClass;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Instantiates a single {@link Component} type and inserts its Host View into current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n *\n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will get destroyed.\n *\n * ### Fine tune control\n *\n * You can control the component creation process by using the following optional attributes:\n *\n * * `ngComponentOutletInjector`: Optional custom {@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n *\n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if exists.\n *\n * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other\n * module, then load a component from that module.\n *\n * ### Syntax\n *\n * Simple\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n *\n * Customized injector/content\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n *\n * Customized ngModuleFactory\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModuleFactory: moduleFactory;\">\n * </ng-container>\n * ```\n * ## Example\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n *\n * A more complete example with additional options:\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n\n * A more complete example with ngModuleFactory:\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}\n *\n * @experimental\n */\nvar NgComponentOutlet = /** @class */ (function () {\n    function NgComponentOutlet(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._componentRef = null;\n        this._moduleRef = null;\n    }\n    NgComponentOutlet.prototype.ngOnChanges = function (changes) {\n        this._viewContainerRef.clear();\n        this._componentRef = null;\n        if (this.ngComponentOutlet) {\n            var elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n            if (changes['ngComponentOutletNgModuleFactory']) {\n                if (this._moduleRef)\n                    this._moduleRef.destroy();\n                if (this.ngComponentOutletNgModuleFactory) {\n                    var parentModule = elInjector.get(core.NgModuleRef);\n                    this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);\n                }\n                else {\n                    this._moduleRef = null;\n                }\n            }\n            var componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :\n                elInjector.get(core.ComponentFactoryResolver);\n            var componentFactory = componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);\n            this._componentRef = this._viewContainerRef.createComponent(componentFactory, this._viewContainerRef.length, elInjector, this.ngComponentOutletContent);\n        }\n    };\n    NgComponentOutlet.prototype.ngOnDestroy = function () {\n        if (this._moduleRef)\n            this._moduleRef.destroy();\n    };\n    NgComponentOutlet.decorators = [\n        { type: core.Directive, args: [{ selector: '[ngComponentOutlet]' },] }\n    ];\n    /** @nocollapse */\n    NgComponentOutlet.ctorParameters = function () { return [\n        { type: core.ViewContainerRef, },\n    ]; };\n    NgComponentOutlet.propDecorators = {\n        \"ngComponentOutlet\": [{ type: core.Input },],\n        \"ngComponentOutletInjector\": [{ type: core.Input },],\n        \"ngComponentOutletContent\": [{ type: core.Input },],\n        \"ngComponentOutletNgModuleFactory\": [{ type: core.Input },],\n    };\n    return NgComponentOutlet;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgForOfContext = /** @class */ (function () {\n    function NgForOfContext($implicit, ngForOf, index, count) {\n        this.$implicit = $implicit;\n        this.ngForOf = ngForOf;\n        this.index = index;\n        this.count = count;\n    }\n    Object.defineProperty(NgForOfContext.prototype, \"first\", {\n        get: function () { return this.index === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"last\", {\n        get: function () { return this.index === this.count - 1; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"even\", {\n        get: function () { return this.index % 2 === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"odd\", {\n        get: function () { return !this.even; },\n        enumerable: true,\n        configurable: true\n    });\n    return NgForOfContext;\n}());\n/**\n * The `NgForOf` directive instantiates a template once per item from an iterable. The context\n * for each instantiated template inherits from the outer context with the given loop variable\n * set to the current item from the iterable.\n *\n * ### Local Variables\n *\n * `NgForOf` provides several exported values that can be aliased to local variables:\n *\n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\n * more complex then a property access, for example when using the async pipe (`userStreams |\n * async`).\n * - `index: number`: The index of the current item in the iterable.\n * - `first: boolean`: True when the item is the first item in the iterable.\n * - `last: boolean`: True when the item is the last item in the iterable.\n * - `even: boolean`: True when the item has an even index in the iterable.\n * - `odd: boolean`: True when the item has an odd index in the iterable.\n *\n * ```\n * <li *ngFor=\"let user of userObservable | async as users; index as i; first as isFirst\">\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\n * </li>\n * ```\n *\n * ### Change Propagation\n *\n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\n *\n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n * * Otherwise, the DOM element for that item will remain the same.\n *\n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n * those changes in the DOM. This has important implications for animations and any stateful\n * controls (such as `<input>` elements which accept user input) that are present. Inserted rows can\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\n * such as user input.\n *\n * It is possible for the identities of elements in the iterator to change while the data does not.\n * This can happen, for example, if the iterator produced from an RPC to the server, and that\n * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n * elements were deleted and all new elements inserted). This is an expensive operation and should\n * be avoided if possible.\n *\n * To customize the default tracking algorithm, `NgForOf` supports `trackBy` option.\n * `trackBy` takes a function which has two arguments: `index` and `item`.\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\n *\n * ### Syntax\n *\n * - `<li *ngFor=\"let item of items; index as i; trackBy: trackByFn\">...</li>`\n *\n * With `<ng-template>` element:\n *\n * ```\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n *   <li>...</li>\n * </ng-template>\n * ```\n *\n * ### Example\n *\n * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n * example.\n *\n *\n */\nvar NgForOf = /** @class */ (function () {\n    function NgForOf(_viewContainer, _template, _differs) {\n        this._viewContainer = _viewContainer;\n        this._template = _template;\n        this._differs = _differs;\n        this._differ = null;\n    }\n    Object.defineProperty(NgForOf.prototype, \"ngForTrackBy\", {\n        get: function () { return this._trackByFn; },\n        set: function (fn) {\n            if (core.isDevMode() && fn != null && typeof fn !== 'function') {\n                // TODO(vicb): use a log service once there is a public one available\n                if (console && console.warn) {\n                    console.warn(\"trackBy must be a function, but received \" + JSON.stringify(fn) + \". \" +\n                        \"See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.\");\n                }\n            }\n            this._trackByFn = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOf.prototype, \"ngForTemplate\", {\n        set: function (value) {\n            // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\n            // The current type is too restrictive; a template that just uses index, for example,\n            // should be acceptable.\n            if (value) {\n                this._template = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgForOf.prototype.ngOnChanges = function (changes) {\n        if ('ngForOf' in changes) {\n            // React on ngForOf changes only once all inputs have been initialized\n            var value = changes['ngForOf'].currentValue;\n            if (!this._differ && value) {\n                try {\n                    this._differ = this._differs.find(value).create(this.ngForTrackBy);\n                }\n                catch (e) {\n                    throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeNameForDebugging(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n                }\n            }\n        }\n    };\n    NgForOf.prototype.ngDoCheck = function () {\n        if (this._differ) {\n            var changes = this._differ.diff(this.ngForOf);\n            if (changes)\n                this._applyChanges(changes);\n        }\n    };\n    NgForOf.prototype._applyChanges = function (changes) {\n        var _this = this;\n        var insertTuples = [];\n        changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n            if (item.previousIndex == null) {\n                var view = _this._viewContainer.createEmbeddedView(_this._template, new NgForOfContext((null), _this.ngForOf, -1, -1), currentIndex);\n                var tuple = new RecordViewTuple(item, view);\n                insertTuples.push(tuple);\n            }\n            else if (currentIndex == null) {\n                _this._viewContainer.remove(adjustedPreviousIndex);\n            }\n            else {\n                var view = (_this._viewContainer.get(adjustedPreviousIndex));\n                _this._viewContainer.move(view, currentIndex);\n                var tuple = new RecordViewTuple(item, view);\n                insertTuples.push(tuple);\n            }\n        });\n        for (var i = 0; i < insertTuples.length; i++) {\n            this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n        }\n        for (var i = 0, ilen = this._viewContainer.length; i < ilen; i++) {\n            var viewRef = this._viewContainer.get(i);\n            viewRef.context.index = i;\n            viewRef.context.count = ilen;\n        }\n        changes.forEachIdentityChange(function (record) {\n            var viewRef = _this._viewContainer.get(record.currentIndex);\n            viewRef.context.$implicit = record.item;\n        });\n    };\n    NgForOf.prototype._perViewChange = function (view, record) {\n        view.context.$implicit = record.item;\n    };\n    NgForOf.decorators = [\n        { type: core.Directive, args: [{ selector: '[ngFor][ngForOf]' },] }\n    ];\n    /** @nocollapse */\n    NgForOf.ctorParameters = function () { return [\n        { type: core.ViewContainerRef, },\n        { type: core.TemplateRef, },\n        { type: core.IterableDiffers, },\n    ]; };\n    NgForOf.propDecorators = {\n        \"ngForOf\": [{ type: core.Input },],\n        \"ngForTrackBy\": [{ type: core.Input },],\n        \"ngForTemplate\": [{ type: core.Input },],\n    };\n    return NgForOf;\n}());\nvar RecordViewTuple = /** @class */ (function () {\n    function RecordViewTuple(record, view) {\n        this.record = record;\n        this.view = view;\n    }\n    return RecordViewTuple;\n}());\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Conditionally includes a template based on the value of an `expression`.\n *\n * `ngIf` evaluates the `expression` and then renders the `then` or `else` template in its place\n * when expression is truthy or falsy respectively. Typically the:\n *  - `then` template is the inline template of `ngIf` unless bound to a different value.\n *  - `else` template is blank unless it is bound.\n *\n * ## Most common usage\n *\n * The most common usage of the `ngIf` directive is to conditionally show the inline template as\n * seen in this example:\n * {@example common/ngIf/ts/module.ts region='NgIfSimple'}\n *\n * ## Showing an alternative template using `else`\n *\n * If it is necessary to display a template when the `expression` is falsy use the `else` template\n * binding as shown. Note that the `else` binding points to a `<ng-template>` labeled `#elseBlock`.\n * The template can be defined anywhere in the component view but is typically placed right after\n * `ngIf` for readability.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfElse'}\n *\n * ## Using non-inlined `then` template\n *\n * Usually the `then` template is the inlined template of the `ngIf`, but it can be changed using\n * a binding (just like `else`). Because `then` and `else` are bindings, the template references can\n * change at runtime as shown in this example.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfThenElse'}\n *\n * ## Storing conditional result in a variable\n *\n * A common pattern is that we need to show a set of properties from the same object. If the\n * object is undefined, then we have to use the safe-traversal-operator `?.` to guard against\n * dereferencing a `null` value. This is especially the case when waiting on async data such as\n * when using the `async` pipe as shown in following example:\n *\n * ```\n * Hello {{ (userStream|async)?.last }}, {{ (userStream|async)?.first }}!\n * ```\n *\n * There are several inefficiencies in the above example:\n *  - We create multiple subscriptions on `userStream`. One for each `async` pipe, or two in the\n *    example above.\n *  - We cannot display an alternative screen while waiting for the data to arrive asynchronously.\n *  - We have to use the safe-traversal-operator `?.` to access properties, which is cumbersome.\n *  - We have to place the `async` pipe in parenthesis.\n *\n * A better way to do this is to use `ngIf` and store the result of the condition in a local\n * variable as shown in the the example below:\n *\n * {@example common/ngIf/ts/module.ts region='NgIfAs'}\n *\n * Notice that:\n *  - We use only one `async` pipe and hence only one subscription gets created.\n *  - `ngIf` stores the result of the `userStream|async` in the local variable `user`.\n *  - The local `user` can then be bound repeatedly in a more efficient way.\n *  - No need to use the safe-traversal-operator `?.` to access properties as `ngIf` will only\n *    display the data if `userStream` returns a value.\n *  - We can display an alternative template while waiting for the data.\n *\n * ### Syntax\n *\n * Simple form:\n * - `<div *ngIf=\"condition\">...</div>`\n * - `<ng-template [ngIf]=\"condition\"><div>...</div></ng-template>`\n *\n * Form with an else block:\n * ```\n * <div *ngIf=\"condition; else elseBlock\">...</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * Form with a `then` and `else` block:\n * ```\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n * <ng-template #thenBlock>...</ng-template>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * Form with storing the value locally:\n * ```\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n *\n */\nvar NgIf = /** @class */ (function () {\n    function NgIf(_viewContainer, templateRef) {\n        this._viewContainer = _viewContainer;\n        this._context = new NgIfContext();\n        this._thenTemplateRef = null;\n        this._elseTemplateRef = null;\n        this._thenViewRef = null;\n        this._elseViewRef = null;\n        this._thenTemplateRef = templateRef;\n    }\n    Object.defineProperty(NgIf.prototype, \"ngIf\", {\n        set: function (condition) {\n            this._context.$implicit = this._context.ngIf = condition;\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgIf.prototype, \"ngIfThen\", {\n        set: function (templateRef) {\n            assertTemplate('ngIfThen', templateRef);\n            this._thenTemplateRef = templateRef;\n            this._thenViewRef = null; // clear previous view if any.\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgIf.prototype, \"ngIfElse\", {\n        set: function (templateRef) {\n            assertTemplate('ngIfElse', templateRef);\n            this._elseTemplateRef = templateRef;\n            this._elseViewRef = null; // clear previous view if any.\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgIf.prototype._updateView = function () {\n        if (this._context.$implicit) {\n            if (!this._thenViewRef) {\n                this._viewContainer.clear();\n                this._elseViewRef = null;\n                if (this._thenTemplateRef) {\n                    this._thenViewRef =\n                        this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n                }\n            }\n        }\n        else {\n            if (!this._elseViewRef) {\n                this._viewContainer.clear();\n                this._thenViewRef = null;\n                if (this._elseTemplateRef) {\n                    this._elseViewRef =\n                        this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n                }\n            }\n        }\n    };\n    NgIf.decorators = [\n        { type: core.Directive, args: [{ selector: '[ngIf]' },] }\n    ];\n    /** @nocollapse */\n    NgIf.ctorParameters = function () { return [\n        { type: core.ViewContainerRef, },\n        { type: core.TemplateRef, },\n    ]; };\n    NgIf.propDecorators = {\n        \"ngIf\": [{ type: core.Input },],\n        \"ngIfThen\": [{ type: core.Input },],\n        \"ngIfElse\": [{ type: core.Input },],\n    };\n    return NgIf;\n}());\nvar NgIfContext = /** @class */ (function () {\n    function NgIfContext() {\n        this.$implicit = null;\n        this.ngIf = null;\n    }\n    return NgIfContext;\n}());\nfunction assertTemplate(property, templateRef) {\n    var isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);\n    if (!isTemplateRefOrNull) {\n        throw new Error(property + \" must be a TemplateRef, but received '\" + core.ɵstringify(templateRef) + \"'.\");\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SwitchView = /** @class */ (function () {\n    function SwitchView(_viewContainerRef, _templateRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._templateRef = _templateRef;\n        this._created = false;\n    }\n    SwitchView.prototype.create = function () {\n        this._created = true;\n        this._viewContainerRef.createEmbeddedView(this._templateRef);\n    };\n    SwitchView.prototype.destroy = function () {\n        this._created = false;\n        this._viewContainerRef.clear();\n    };\n    SwitchView.prototype.enforceState = function (created) {\n        if (created && !this._created) {\n            this.create();\n        }\n        else if (!created && this._created) {\n            this.destroy();\n        }\n    };\n    return SwitchView;\n}());\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n *     <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n * @description\n *\n * Adds / removes DOM sub-trees when the nest match expressions matches the switch expression.\n *\n * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n * switch expression.\n *\n * In other words:\n * - you define a container element (where you place the directive with a switch expression on the\n * `[ngSwitch]=\"...\"` attribute)\n * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n * root elements.\n *\n * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n * be preserved at the location.\n *\n * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n * expression is evaluated.\n * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n * stamped out.\n *\n *\n */\nvar NgSwitch = /** @class */ (function () {\n    function NgSwitch() {\n        this._defaultUsed = false;\n        this._caseCount = 0;\n        this._lastCaseCheckIndex = 0;\n        this._lastCasesMatched = false;\n    }\n    Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n        set: function (newValue) {\n            this._ngSwitch = newValue;\n            if (this._caseCount === 0) {\n                this._updateDefaultCases(true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /** @internal */\n    NgSwitch.prototype._addCase = /** @internal */\n    function () { return this._caseCount++; };\n    /** @internal */\n    /** @internal */\n    NgSwitch.prototype._addDefault = /** @internal */\n    function (view) {\n        if (!this._defaultViews) {\n            this._defaultViews = [];\n        }\n        this._defaultViews.push(view);\n    };\n    /** @internal */\n    /** @internal */\n    NgSwitch.prototype._matchCase = /** @internal */\n    function (value) {\n        var matched = value == this._ngSwitch;\n        this._lastCasesMatched = this._lastCasesMatched || matched;\n        this._lastCaseCheckIndex++;\n        if (this._lastCaseCheckIndex === this._caseCount) {\n            this._updateDefaultCases(!this._lastCasesMatched);\n            this._lastCaseCheckIndex = 0;\n            this._lastCasesMatched = false;\n        }\n        return matched;\n    };\n    NgSwitch.prototype._updateDefaultCases = function (useDefault) {\n        if (this._defaultViews && useDefault !== this._defaultUsed) {\n            this._defaultUsed = useDefault;\n            for (var i = 0; i < this._defaultViews.length; i++) {\n                var defaultView = this._defaultViews[i];\n                defaultView.enforceState(useDefault);\n            }\n        }\n    };\n    NgSwitch.decorators = [\n        { type: core.Directive, args: [{ selector: '[ngSwitch]' },] }\n    ];\n    /** @nocollapse */\n    NgSwitch.ctorParameters = function () { return []; };\n    NgSwitch.propDecorators = {\n        \"ngSwitch\": [{ type: core.Input },],\n    };\n    return NgSwitch;\n}());\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * </container-element>\n *```\n * @description\n *\n * Creates a view that will be added/removed from the parent {@link NgSwitch} when the\n * given expression evaluate to respectively the same/different value as the switch\n * expression.\n *\n * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n * expression.\n *\n * If multiple match expressions match the switch expression value, all of them are displayed.\n *\n * See {@link NgSwitch} for more details and example.\n *\n *\n */\nvar NgSwitchCase = /** @class */ (function () {\n    function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n        this.ngSwitch = ngSwitch;\n        ngSwitch._addCase();\n        this._view = new SwitchView(viewContainer, templateRef);\n    }\n    NgSwitchCase.prototype.ngDoCheck = function () { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); };\n    NgSwitchCase.decorators = [\n        { type: core.Directive, args: [{ selector: '[ngSwitchCase]' },] }\n    ];\n    /** @nocollapse */\n    NgSwitchCase.ctorParameters = function () { return [\n        { type: core.ViewContainerRef, },\n        { type: core.TemplateRef, },\n        { type: NgSwitch, decorators: [{ type: core.Host },] },\n    ]; };\n    NgSwitchCase.propDecorators = {\n        \"ngSwitchCase\": [{ type: core.Input },],\n    };\n    return NgSwitchCase;\n}());\n/**\n * @ngModule CommonModule\n * @usageNotes\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-other-element *ngSwitchDefault>...</some-other-element>\n * </container-element>\n * ```\n *\n * @description\n *\n * Creates a view that is added to the parent {@link NgSwitch} when no case expressions\n * match the switch expression.\n *\n * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n * expression.\n *\n * See {@link NgSwitch} for more details and example.\n *\n *\n */\nvar NgSwitchDefault = /** @class */ (function () {\n    function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {\n        ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n    }\n    NgSwitchDefault.decorators = [\n        { type: core.Directive, args: [{ selector: '[ngSwitchDefault]' },] }\n    ];\n    /** @nocollapse */\n    NgSwitchDefault.ctorParameters = function () { return [\n        { type: core.ViewContainerRef, },\n        { type: core.TemplateRef, },\n        { type: NgSwitch, decorators: [{ type: core.Host },] },\n    ]; };\n    return NgSwitchDefault;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n * </some-element>\n * ```\n *\n * @description\n *\n * Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n *\n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n *\n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n *\n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n *\n * @experimental\n */\nvar NgPlural = /** @class */ (function () {\n    function NgPlural(_localization) {\n        this._localization = _localization;\n        this._caseViews = {};\n    }\n    Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n        set: function (value) {\n            this._switchValue = value;\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgPlural.prototype.addCase = function (value, switchView) { this._caseViews[value] = switchView; };\n    NgPlural.prototype._updateView = function () {\n        this._clearViews();\n        var cases = Object.keys(this._caseViews);\n        var key = getPluralCategory(this._switchValue, cases, this._localization);\n        this._activateView(this._caseViews[key]);\n    };\n    NgPlural.prototype._clearViews = function () {\n        if (this._activeView)\n            this._activeView.destroy();\n    };\n    NgPlural.prototype._activateView = function (view) {\n        if (view) {\n            this._activeView = view;\n            this._activeView.create();\n        }\n    };\n    NgPlural.decorators = [\n        { type: core.Directive, args: [{ selector: '[ngPlural]' },] }\n    ];\n    /** @nocollapse */\n    NgPlural.ctorParameters = function () { return [\n        { type: NgLocalization, },\n    ]; };\n    NgPlural.propDecorators = {\n        \"ngPlural\": [{ type: core.Input },],\n    };\n    return NgPlural;\n}());\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Creates a view that will be added/removed from the parent {@link NgPlural} when the\n * given expression matches the plural expression according to CLDR rules.\n *\n * @usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\n * </some-element>\n *```\n *\n * See {@link NgPlural} for more details and example.\n *\n * @experimental\n */\nvar NgPluralCase = /** @class */ (function () {\n    function NgPluralCase(value, template, viewContainer, ngPlural) {\n        this.value = value;\n        var isANumber = !isNaN(Number(value));\n        ngPlural.addCase(isANumber ? \"=\" + value : value, new SwitchView(viewContainer, template));\n    }\n    NgPluralCase.decorators = [\n        { type: core.Directive, args: [{ selector: '[ngPluralCase]' },] }\n    ];\n    /** @nocollapse */\n    NgPluralCase.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Attribute, args: ['ngPluralCase',] },] },\n        { type: core.TemplateRef, },\n        { type: core.ViewContainerRef, },\n        { type: NgPlural, decorators: [{ type: core.Host },] },\n    ]; };\n    return NgPluralCase;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n *\n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n *\n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n *\n * @description\n *\n * Update an HTML element styles.\n *\n * The styles are updated according to the value of the expression evaluation:\n * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n * - values are the values assigned to those properties (expressed in the given unit).\n *\n *\n */\nvar NgStyle = /** @class */ (function () {\n    function NgStyle(_differs, _ngEl, _renderer) {\n        this._differs = _differs;\n        this._ngEl = _ngEl;\n        this._renderer = _renderer;\n    }\n    Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n        set: function (v) {\n            this._ngStyle = v;\n            if (!this._differ && v) {\n                this._differ = this._differs.find(v).create();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgStyle.prototype.ngDoCheck = function () {\n        if (this._differ) {\n            var changes = this._differ.diff(this._ngStyle);\n            if (changes) {\n                this._applyChanges(changes);\n            }\n        }\n    };\n    NgStyle.prototype._applyChanges = function (changes) {\n        var _this = this;\n        changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n        changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n        changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n    };\n    NgStyle.prototype._setStyle = function (nameAndUnit, value) {\n        var _a = __read(nameAndUnit.split('.'), 2), name = _a[0], unit = _a[1];\n        value = value != null && unit ? \"\" + value + unit : value;\n        if (value != null) {\n            this._renderer.setStyle(this._ngEl.nativeElement, name, value);\n        }\n        else {\n            this._renderer.removeStyle(this._ngEl.nativeElement, name);\n        }\n    };\n    NgStyle.decorators = [\n        { type: core.Directive, args: [{ selector: '[ngStyle]' },] }\n    ];\n    /** @nocollapse */\n    NgStyle.ctorParameters = function () { return [\n        { type: core.KeyValueDiffers, },\n        { type: core.ElementRef, },\n        { type: core.Renderer2, },\n    ]; };\n    NgStyle.propDecorators = {\n        \"ngStyle\": [{ type: core.Input },],\n    };\n    return NgStyle;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\n * ```\n *\n * @description\n *\n * Inserts an embedded view from a prepared `TemplateRef`.\n *\n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\n * by the local template `let` declarations.\n *\n * Note: using the key `$implicit` in the context object will set its value as default.\n *\n * ## Example\n *\n * {@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\n *\n *\n */\nvar NgTemplateOutlet = /** @class */ (function () {\n    function NgTemplateOutlet(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n    }\n    NgTemplateOutlet.prototype.ngOnChanges = function (changes) {\n        var recreateView = this._shouldRecreateView(changes);\n        if (recreateView) {\n            if (this._viewRef) {\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n            }\n            if (this.ngTemplateOutlet) {\n                this._viewRef = this._viewContainerRef.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext);\n            }\n        }\n        else {\n            if (this._viewRef && this.ngTemplateOutletContext) {\n                this._updateExistingContext(this.ngTemplateOutletContext);\n            }\n        }\n    };\n    /**\n     * We need to re-create existing embedded view if:\n     * - templateRef has changed\n     * - context has changes\n     *\n     * We mark context object as changed when the corresponding object\n     * shape changes (new properties are added or existing properties are removed).\n     * In other words we consider context with the same properties as \"the same\" even\n     * if object reference changes (see https://github.com/angular/angular/issues/13407).\n     */\n    /**\n       * We need to re-create existing embedded view if:\n       * - templateRef has changed\n       * - context has changes\n       *\n       * We mark context object as changed when the corresponding object\n       * shape changes (new properties are added or existing properties are removed).\n       * In other words we consider context with the same properties as \"the same\" even\n       * if object reference changes (see https://github.com/angular/angular/issues/13407).\n       */\n    NgTemplateOutlet.prototype._shouldRecreateView = /**\n       * We need to re-create existing embedded view if:\n       * - templateRef has changed\n       * - context has changes\n       *\n       * We mark context object as changed when the corresponding object\n       * shape changes (new properties are added or existing properties are removed).\n       * In other words we consider context with the same properties as \"the same\" even\n       * if object reference changes (see https://github.com/angular/angular/issues/13407).\n       */\n    function (changes) {\n        var ctxChange = changes['ngTemplateOutletContext'];\n        return !!changes['ngTemplateOutlet'] || (ctxChange && this._hasContextShapeChanged(ctxChange));\n    };\n    NgTemplateOutlet.prototype._hasContextShapeChanged = function (ctxChange) {\n        var prevCtxKeys = Object.keys(ctxChange.previousValue || {});\n        var currCtxKeys = Object.keys(ctxChange.currentValue || {});\n        if (prevCtxKeys.length === currCtxKeys.length) {\n            try {\n                for (var currCtxKeys_1 = __values(currCtxKeys), currCtxKeys_1_1 = currCtxKeys_1.next(); !currCtxKeys_1_1.done; currCtxKeys_1_1 = currCtxKeys_1.next()) {\n                    var propName = currCtxKeys_1_1.value;\n                    if (prevCtxKeys.indexOf(propName) === -1) {\n                        return true;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (currCtxKeys_1_1 && !currCtxKeys_1_1.done && (_a = currCtxKeys_1.return)) _a.call(currCtxKeys_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return false;\n        }\n        else {\n            return true;\n        }\n        var e_1, _a;\n    };\n    NgTemplateOutlet.prototype._updateExistingContext = function (ctx) {\n        try {\n            for (var _a = __values(Object.keys(ctx)), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var propName = _b.value;\n                this._viewRef.context[propName] = this.ngTemplateOutletContext[propName];\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        var e_2, _c;\n    };\n    NgTemplateOutlet.decorators = [\n        { type: core.Directive, args: [{ selector: '[ngTemplateOutlet]' },] }\n    ];\n    /** @nocollapse */\n    NgTemplateOutlet.ctorParameters = function () { return [\n        { type: core.ViewContainerRef, },\n    ]; };\n    NgTemplateOutlet.propDecorators = {\n        \"ngTemplateOutletContext\": [{ type: core.Input },],\n        \"ngTemplateOutlet\": [{ type: core.Input },],\n    };\n    return NgTemplateOutlet;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A collection of Angular directives that are likely to be used in each and every Angular\n * application.\n */\nvar COMMON_DIRECTIVES = [\n    NgClass,\n    NgComponentOutlet,\n    NgForOf,\n    NgIf,\n    NgTemplateOutlet,\n    NgStyle,\n    NgSwitch,\n    NgSwitchCase,\n    NgSwitchDefault,\n    NgPlural,\n    NgPluralCase,\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction invalidPipeArgumentError(type, value) {\n    return Error(\"InvalidPipeArgument: '\" + value + \"' for pipe '\" + core.ɵstringify(type) + \"'\");\n}\n\nvar NumberFormatter = /** @class */ (function () {\n    function NumberFormatter() {\n    }\n    NumberFormatter.format = function (num, locale, style, opts) {\n        if (opts === void 0) { opts = {}; }\n        var minimumIntegerDigits = opts.minimumIntegerDigits, minimumFractionDigits = opts.minimumFractionDigits, maximumFractionDigits = opts.maximumFractionDigits, currency = opts.currency, _a = opts.currencyAsSymbol, currencyAsSymbol = _a === void 0 ? false : _a;\n        var options = {\n            minimumIntegerDigits: minimumIntegerDigits,\n            minimumFractionDigits: minimumFractionDigits,\n            maximumFractionDigits: maximumFractionDigits,\n            style: exports.NumberFormatStyle[style].toLowerCase()\n        };\n        if (style == exports.NumberFormatStyle.Currency) {\n            options.currency = typeof currency == 'string' ? currency : undefined;\n            options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n        }\n        return new Intl.NumberFormat(locale, options).format(num);\n    };\n    return NumberFormatter;\n}());\nvar DATE_FORMATS_SPLIT$1 = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\nvar PATTERN_ALIASES = {\n    // Keys are quoted so they do not get renamed during closure compilation.\n    'yMMMdjms': datePartGetterFactory(combine([\n        digitCondition('year', 1),\n        nameCondition('month', 3),\n        digitCondition('day', 1),\n        digitCondition('hour', 1),\n        digitCondition('minute', 1),\n        digitCondition('second', 1),\n    ])),\n    'yMdjm': datePartGetterFactory(combine([\n        digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n        digitCondition('hour', 1), digitCondition('minute', 1)\n    ])),\n    'yMMMMEEEEd': datePartGetterFactory(combine([\n        digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n        digitCondition('day', 1)\n    ])),\n    'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n    'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n    'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n    'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n    'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n};\nvar DATE_FORMATS$1 = {\n    // Keys are quoted so they do not get renamed.\n    'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n    'yy': datePartGetterFactory(digitCondition('year', 2)),\n    'y': datePartGetterFactory(digitCondition('year', 1)),\n    'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n    'MMM': datePartGetterFactory(nameCondition('month', 3)),\n    'MM': datePartGetterFactory(digitCondition('month', 2)),\n    'M': datePartGetterFactory(digitCondition('month', 1)),\n    'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n    'L': datePartGetterFactory(nameCondition('month', 1)),\n    'dd': datePartGetterFactory(digitCondition('day', 2)),\n    'd': datePartGetterFactory(digitCondition('day', 1)),\n    'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n    'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n    'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n    'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n    'jj': datePartGetterFactory(digitCondition('hour', 2)),\n    'j': datePartGetterFactory(digitCondition('hour', 1)),\n    'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n    'm': datePartGetterFactory(digitCondition('minute', 1)),\n    'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n    's': datePartGetterFactory(digitCondition('second', 1)),\n    // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n    // we can be just safely rely on using `sss` since we currently don't support single or two digit\n    // fractions\n    'sss': datePartGetterFactory(digitCondition('second', 3)),\n    'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n    'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n    'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n    'E': datePartGetterFactory(nameCondition('weekday', 1)),\n    'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n    'Z': timeZoneGetter$1('short'),\n    'z': timeZoneGetter$1('long'),\n    'ww': datePartGetterFactory({}),\n    // Week of year, padded (00-53). Week 01 is the week with the\n    // first Thursday of the year. not support ?\n    'w': datePartGetterFactory({}),\n    // Week of year (0-53). Week 1 is the week with the first Thursday\n    // of the year not support ?\n    'G': datePartGetterFactory(nameCondition('era', 1)),\n    'GG': datePartGetterFactory(nameCondition('era', 2)),\n    'GGG': datePartGetterFactory(nameCondition('era', 3)),\n    'GGGG': datePartGetterFactory(nameCondition('era', 4))\n};\nfunction digitModifier(inner) {\n    return function (date, locale) {\n        var result = inner(date, locale);\n        return result.length == 1 ? '0' + result : result;\n    };\n}\nfunction hourClockExtractor(inner) {\n    return function (date, locale) { return inner(date, locale).split(' ')[1]; };\n}\nfunction hourExtractor(inner) {\n    return function (date, locale) { return inner(date, locale).split(' ')[0]; };\n}\nfunction intlDateFormat(date, locale, options) {\n    return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n}\nfunction timeZoneGetter$1(timezone) {\n    // To workaround `Intl` API restriction for single timezone let format with 24 hours\n    var options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n    return function (date, locale) {\n        var result = intlDateFormat(date, locale, options);\n        // Then extract first 3 letters that related to hours\n        return result ? result.substring(3) : '';\n    };\n}\nfunction hour12Modify(options, value) {\n    options.hour12 = value;\n    return options;\n}\nfunction digitCondition(prop, len) {\n    var result = {};\n    result[prop] = len === 2 ? '2-digit' : 'numeric';\n    return result;\n}\nfunction nameCondition(prop, len) {\n    var result = {};\n    if (len < 4) {\n        result[prop] = len > 1 ? 'short' : 'narrow';\n    }\n    else {\n        result[prop] = 'long';\n    }\n    return result;\n}\nfunction combine(options) {\n    return options.reduce(function (merged, opt) { return (__assign({}, merged, opt)); }, {});\n}\nfunction datePartGetterFactory(ret) {\n    return function (date, locale) { return intlDateFormat(date, locale, ret); };\n}\nvar DATE_FORMATTER_CACHE = new Map();\nfunction dateFormatter(format, date, locale) {\n    var fn = PATTERN_ALIASES[format];\n    if (fn)\n        return fn(date, locale);\n    var cacheKey = format;\n    var parts = DATE_FORMATTER_CACHE.get(cacheKey);\n    if (!parts) {\n        parts = [];\n        var match = void 0;\n        DATE_FORMATS_SPLIT$1.exec(format);\n        var _format = format;\n        while (_format) {\n            match = DATE_FORMATS_SPLIT$1.exec(_format);\n            if (match) {\n                parts = parts.concat(match.slice(1));\n                _format = (parts.pop());\n            }\n            else {\n                parts.push(_format);\n                _format = null;\n            }\n        }\n        DATE_FORMATTER_CACHE.set(cacheKey, parts);\n    }\n    return parts.reduce(function (text, part) {\n        var fn = DATE_FORMATS$1[part];\n        return text + (fn ? fn(date, locale) : partToTime(part));\n    }, '');\n}\nfunction partToTime(part) {\n    return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n}\nvar DateFormatter = /** @class */ (function () {\n    function DateFormatter() {\n    }\n    DateFormatter.format = function (date, locale, pattern) {\n        return dateFormatter(pattern, date, locale);\n    };\n    return DateFormatter;\n}());\n\n/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n  */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date according to locale rules.\n *\n * Where:\n * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n * (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. The format can be predefined as\n *   shown below or custom as shown in the table.\n *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n *\n *\n *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n *\n * In javascript, only the components specified will be respected (not the ordering,\n * punctuations, ...) and details of the formatting will be dependent on the locale.\n *\n * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n *\n * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n * applied and the formatted text will have the same day, month and year of the expression.\n *\n * WARNINGS:\n * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n *   Instead users should treat the date as an immutable object and change the reference when the\n *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n *   which would be an expensive operation).\n * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n *   browsers.\n *\n * ### Examples\n *\n * Assuming `dateObj` is (year: 2010, month: 9, day: 3, hour: 12 PM, minute: 05, second: 08)\n * in the _local_ time and locale is 'en-US':\n *\n * {@example common/pipes/ts/date_pipe.ts region='DeprecatedDatePipe'}\n *\n *\n */\nvar DeprecatedDatePipe = /** @class */ (function () {\n    function DeprecatedDatePipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedDatePipe.prototype.transform = function (value, pattern) {\n        if (pattern === void 0) { pattern = 'mediumDate'; }\n        if (value == null || value === '' || value !== value)\n            return null;\n        var date;\n        if (typeof value === 'string') {\n            value = value.trim();\n        }\n        if (isDate$1(value)) {\n            date = value;\n        }\n        else if (!isNaN(value - parseFloat(value))) {\n            date = new Date(parseFloat(value));\n        }\n        else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n            /**\n                   * For ISO Strings without time the day, month and year must be extracted from the ISO String\n                   * before Date creation to avoid time offset and errors in the new Date.\n                   * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n                   * date, some browsers (e.g. IE 9) will throw an invalid Date error\n                   * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the\n                   * timeoffset\n                   * is applied\n                   * Note: ISO months are 0 for January, 1 for February, ...\n                   */\n            var _a = __read(value.split('-').map(function (val) { return parseInt(val, 10); }), 3), y = _a[0], m = _a[1], d = _a[2];\n            date = new Date(y, m - 1, d);\n        }\n        else {\n            date = new Date(value);\n        }\n        if (!isDate$1(date)) {\n            var match = void 0;\n            if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n                date = isoStringToDate(match);\n            }\n            else {\n                throw invalidPipeArgumentError(DeprecatedDatePipe, value);\n            }\n        }\n        return DateFormatter.format(date, this._locale, DeprecatedDatePipe._ALIASES[pattern] || pattern);\n    };\n    /** @internal */\n    DeprecatedDatePipe._ALIASES = {\n        'medium': 'yMMMdjms',\n        'short': 'yMdjm',\n        'fullDate': 'yMMMMEEEEd',\n        'longDate': 'yMMMMd',\n        'mediumDate': 'yMMMd',\n        'shortDate': 'yMd',\n        'mediumTime': 'jms',\n        'shortTime': 'jm'\n    };\n    DeprecatedDatePipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'date', pure: true },] }\n    ];\n    /** @nocollapse */\n    DeprecatedDatePipe.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [core.LOCALE_ID,] },] },\n    ]; };\n    return DeprecatedDatePipe;\n}());\nfunction isDate$1(value) {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction formatNumber$1(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n    if (currency === void 0) { currency = null; }\n    if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n    if (value == null)\n        return null;\n    // Convert strings to numbers\n    value = typeof value === 'string' && !isNaN(+value - parseFloat(value)) ? +value : value;\n    if (typeof value !== 'number') {\n        throw invalidPipeArgumentError(pipe, value);\n    }\n    var minInt;\n    var minFraction;\n    var maxFraction;\n    if (style !== exports.NumberFormatStyle.Currency) {\n        // rely on Intl default for currency\n        minInt = 1;\n        minFraction = 0;\n        maxFraction = 3;\n    }\n    if (digits) {\n        var parts = digits.match(NUMBER_FORMAT_REGEXP);\n        if (parts === null) {\n            throw new Error(digits + \" is not a valid digit info for number pipes\");\n        }\n        if (parts[1] != null) {\n            // min integer digits\n            minInt = parseIntAutoRadix(parts[1]);\n        }\n        if (parts[3] != null) {\n            // min fraction digits\n            minFraction = parseIntAutoRadix(parts[3]);\n        }\n        if (parts[5] != null) {\n            // max fraction digits\n            maxFraction = parseIntAutoRadix(parts[5]);\n        }\n    }\n    return NumberFormatter.format(value, locale, style, {\n        minimumIntegerDigits: minInt,\n        minimumFractionDigits: minFraction,\n        maximumFractionDigits: maxFraction,\n        currency: currency,\n        currencyAsSymbol: currencyAsSymbol,\n    });\n}\n/**\n * @ngModule CommonModule\n *\n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the active locale.\n *\n * where `expression` is a number:\n *  - `digitInfo` is a `string` which has a following format: <br>\n *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n *\n * For more information on the acceptable range for each of these numbers and other\n * details see your native internationalization library.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * ### Example\n *\n * {@example common/pipes/ts/number_pipe.ts region='DeprecatedNumberPipe'}\n *\n *\n */\nvar DeprecatedDecimalPipe = /** @class */ (function () {\n    function DeprecatedDecimalPipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedDecimalPipe.prototype.transform = function (value, digits) {\n        return formatNumber$1(DeprecatedDecimalPipe, this._locale, value, exports.NumberFormatStyle.Decimal, digits);\n    };\n    DeprecatedDecimalPipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'number' },] }\n    ];\n    /** @nocollapse */\n    DeprecatedDecimalPipe.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [core.LOCALE_ID,] },] },\n    ]; };\n    return DeprecatedDecimalPipe;\n}());\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Formats a number as percentage according to locale rules.\n *\n * - `digitInfo` See {@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * ### Example\n *\n * {@example common/pipes/ts/percent_pipe.ts region='DeprecatedPercentPipe'}\n *\n *\n */\nvar DeprecatedPercentPipe = /** @class */ (function () {\n    function DeprecatedPercentPipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedPercentPipe.prototype.transform = function (value, digits) {\n        return formatNumber$1(DeprecatedPercentPipe, this._locale, value, exports.NumberFormatStyle.Percent, digits);\n    };\n    DeprecatedPercentPipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'percent' },] }\n    ];\n    /** @nocollapse */\n    DeprecatedPercentPipe.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [core.LOCALE_ID,] },] },\n    ]; };\n    return DeprecatedPercentPipe;\n}());\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as currency using locale rules.\n *\n * Use `currency` to format a number as currency.\n *\n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n *   - `true`: use symbol (e.g. `$`).\n *   - `false`(default): use code (e.g. `USD`).\n * - `digitInfo` See {@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * ### Example\n *\n * {@example common/pipes/ts/currency_pipe.ts region='DeprecatedCurrencyPipe'}\n *\n *\n */\nvar DeprecatedCurrencyPipe = /** @class */ (function () {\n    function DeprecatedCurrencyPipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedCurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {\n        if (currencyCode === void 0) { currencyCode = 'USD'; }\n        if (symbolDisplay === void 0) { symbolDisplay = false; }\n        return formatNumber$1(DeprecatedCurrencyPipe, this._locale, value, exports.NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n    };\n    DeprecatedCurrencyPipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'currency' },] }\n    ];\n    /** @nocollapse */\n    DeprecatedCurrencyPipe.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [core.LOCALE_ID,] },] },\n    ]; };\n    return DeprecatedCurrencyPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A collection of deprecated i18n pipes that require intl api\n *\n * @deprecated from v5\n */\nvar COMMON_DEPRECATED_I18N_PIPES = [DeprecatedDecimalPipe, DeprecatedPercentPipe, DeprecatedCurrencyPipe, DeprecatedDatePipe];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ObservableStrategy = /** @class */ (function () {\n    function ObservableStrategy() {\n    }\n    ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n        return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n    };\n    ObservableStrategy.prototype.dispose = function (subscription) { subscription.unsubscribe(); };\n    ObservableStrategy.prototype.onDestroy = function (subscription) { subscription.unsubscribe(); };\n    return ObservableStrategy;\n}());\nvar PromiseStrategy = /** @class */ (function () {\n    function PromiseStrategy() {\n    }\n    PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n        return async.then(updateLatestValue, function (e) { throw e; });\n    };\n    PromiseStrategy.prototype.dispose = function (subscription) { };\n    PromiseStrategy.prototype.onDestroy = function (subscription) { };\n    return PromiseStrategy;\n}());\nvar _promiseStrategy = new PromiseStrategy();\nvar _observableStrategy = new ObservableStrategy();\n/**\n * @ngModule CommonModule\n * @description\n *\n * Unwraps a value from an asynchronous primitive.\n *\n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n * potential memory leaks.\n *\n *\n * ## Examples\n *\n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n * promise.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n *\n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n * to the view. The Observable continuously updates the view with the current time.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n *\n *\n */\nvar AsyncPipe = /** @class */ (function () {\n    function AsyncPipe(_ref) {\n        this._ref = _ref;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n        this._strategy = null;\n    }\n    AsyncPipe.prototype.ngOnDestroy = function () {\n        if (this._subscription) {\n            this._dispose();\n        }\n    };\n    AsyncPipe.prototype.transform = function (obj) {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.transform(obj);\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return core.WrappedValue.wrap(this._latestValue);\n    };\n    AsyncPipe.prototype._subscribe = function (obj) {\n        var _this = this;\n        this._obj = obj;\n        this._strategy = this._selectStrategy(obj);\n        this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n    };\n    AsyncPipe.prototype._selectStrategy = function (obj) {\n        if (core.ɵisPromise(obj)) {\n            return _promiseStrategy;\n        }\n        if (core.ɵisObservable(obj)) {\n            return _observableStrategy;\n        }\n        throw invalidPipeArgumentError(AsyncPipe, obj);\n    };\n    AsyncPipe.prototype._dispose = function () {\n        this._strategy.dispose((this._subscription));\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    };\n    AsyncPipe.prototype._updateLatestValue = function (async, value) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    };\n    AsyncPipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'async', pure: false },] }\n    ];\n    /** @nocollapse */\n    AsyncPipe.ctorParameters = function () { return [\n        { type: core.ChangeDetectorRef, },\n    ]; };\n    return AsyncPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms text to lowercase.\n *\n * {@example  common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe' }\n *\n *\n */\nvar LowerCasePipe = /** @class */ (function () {\n    function LowerCasePipe() {\n    }\n    LowerCasePipe.prototype.transform = function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(LowerCasePipe, value);\n        }\n        return value.toLowerCase();\n    };\n    LowerCasePipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'lowercase' },] }\n    ];\n    /** @nocollapse */\n    LowerCasePipe.ctorParameters = function () { return []; };\n    return LowerCasePipe;\n}());\n//\n// Regex below matches any Unicode word and compatible with ES5. In ES2018 the same result\n// can be achieved by using /\\p{L}\\S*/gu and also known as Unicode Property Escapes\n// (http://2ality.com/2017/07/regexp-unicode-property-escapes.html). Since there is no\n// transpilation of this functionality down to ES5 without external tool, the only solution is\n// to use already transpiled form. Example can be found here -\n// https://mothereff.in/regexpu#input=var+regex+%3D+/%5Cp%7BL%7D/u%3B&unicodePropertyEscape=1\n//\nvar unicodeWordMatch = /(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])\\S*/g;\n/**\n * Transforms text to titlecase.\n *\n * The pipe splits up a text into words, capitalizes the first letter of each word and transforms\n * the rest of the word into lowercase. In this case, whitespace characters (such as \"space\", \"\\t\",\n * \"\\n\", etc) are used as word separators.\n *\n * ## Example\n * {@example common/pipes/ts/titlecase_pipe.ts region='TitleCasePipe'}\n *\n *\n */\nvar TitleCasePipe = /** @class */ (function () {\n    function TitleCasePipe() {\n    }\n    TitleCasePipe.prototype.transform = function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(TitleCasePipe, value);\n        }\n        return value.replace(unicodeWordMatch, (function (txt) { return txt[0].toUpperCase() + txt.substr(1).toLowerCase(); }));\n    };\n    TitleCasePipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'titlecase' },] }\n    ];\n    /** @nocollapse */\n    TitleCasePipe.ctorParameters = function () { return []; };\n    return TitleCasePipe;\n}());\n/**\n * Transforms text to uppercase.\n *\n *\n */\nvar UpperCasePipe = /** @class */ (function () {\n    function UpperCasePipe() {\n    }\n    UpperCasePipe.prototype.transform = function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(UpperCasePipe, value);\n        }\n        return value.toUpperCase();\n    };\n    UpperCasePipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'uppercase' },] }\n    ];\n    /** @nocollapse */\n    UpperCasePipe.ctorParameters = function () { return []; };\n    return UpperCasePipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format off\n/**\n * @ngModule CommonModule\n * @description\n *\n * Uses the function {@link formatDate} to format a date according to locale rules.\n *\n * The following tabled describes the formatting options.\n *\n *  | Field Type         | Format      | Description                                                   | Example Value                                              |\n *  |--------------------|-------------|---------------------------------------------------------------|------------------------------------------------------------|\n *  | Era                | G, GG & GGG | Abbreviated                                                   | AD                                                         |\n *  |                    | GGGG        | Wide                                                          | Anno Domini                                                |\n *  |                    | GGGGG       | Narrow                                                        | A                                                          |\n *  | Year               | y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |\n *  |                    | yy          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |\n *  |                    | yyy         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |\n *  |                    | yyyy        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |\n *  | Month              | M           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | MM          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | MMM         | Abbreviated                                                   | Sep                                                        |\n *  |                    | MMMM        | Wide                                                          | September                                                  |\n *  |                    | MMMMM       | Narrow                                                        | S                                                          |\n *  | Month standalone   | L           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | LL          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | LLL         | Abbreviated                                                   | Sep                                                        |\n *  |                    | LLLL        | Wide                                                          | September                                                  |\n *  |                    | LLLLL       | Narrow                                                        | S                                                          |\n *  | Week of year       | w           | Numeric: minimum digits                                       | 1... 53                                                    |\n *  |                    | ww          | Numeric: 2 digits + zero padded                               | 01... 53                                                   |\n *  | Week of month      | W           | Numeric: 1 digit                                              | 1... 5                                                     |\n *  | Day of month       | d           | Numeric: minimum digits                                       | 1                                                          |\n *  |                    | dd          | Numeric: 2 digits + zero padded                               | 01                                                          |\n *  | Week day           | E, EE & EEE | Abbreviated                                                   | Tue                                                        |\n *  |                    | EEEE        | Wide                                                          | Tuesday                                                    |\n *  |                    | EEEEE       | Narrow                                                        | T                                                          |\n *  |                    | EEEEEE      | Short                                                         | Tu                                                         |\n *  | Period             | a, aa & aaa | Abbreviated                                                   | am/pm or AM/PM                                             |\n *  |                    | aaaa        | Wide (fallback to `a` when missing)                           | ante meridiem/post meridiem                                |\n *  |                    | aaaaa       | Narrow                                                        | a/p                                                        |\n *  | Period*            | B, BB & BBB | Abbreviated                                                   | mid.                                                       |\n *  |                    | BBBB        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | BBBBB       | Narrow                                                        | md                                                         |\n *  | Period standalone* | b, bb & bbb | Abbreviated                                                   | mid.                                                       |\n *  |                    | bbbb        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | bbbbb       | Narrow                                                        | md                                                         |\n *  | Hour 1-12          | h           | Numeric: minimum digits                                       | 1, 12                                                      |\n *  |                    | hh          | Numeric: 2 digits + zero padded                               | 01, 12                                                     |\n *  | Hour 0-23          | H           | Numeric: minimum digits                                       | 0, 23                                                      |\n *  |                    | HH          | Numeric: 2 digits + zero padded                               | 00, 23                                                     |\n *  | Minute             | m           | Numeric: minimum digits                                       | 8, 59                                                      |\n *  |                    | mm          | Numeric: 2 digits + zero padded                               | 08, 59                                                     |\n *  | Second             | s           | Numeric: minimum digits                                       | 0... 59                                                    |\n *  |                    | ss          | Numeric: 2 digits + zero padded                               | 00... 59                                                   |\n *  | Fractional seconds | S           | Numeric: 1 digit                                              | 0... 9                                                     |\n *  |                    | SS          | Numeric: 2 digits + zero padded                               | 00... 99                                                   |\n *  |                    | SSS         | Numeric: 3 digits + zero padded (= milliseconds)              | 000... 999                                                 |\n *  | Zone               | z, zz & zzz | Short specific non location format (fallback to O)            | GMT-8                                                      |\n *  |                    | zzzz        | Long specific non location format (fallback to OOOO)          | GMT-08:00                                                  |\n *  |                    | Z, ZZ & ZZZ | ISO8601 basic format                                          | -0800                                                      |\n *  |                    | ZZZZ        | Long localized GMT format                                     | GMT-8:00                                                   |\n *  |                    | ZZZZZ       | ISO8601 extended format + Z indicator for offset 0 (= XXXXX)  | -08:00                                                     |\n *  |                    | O, OO & OOO | Short localized GMT format                                    | GMT-8                                                      |\n *  |                    | OOOO        | Long localized GMT format                                     | GMT-08:00                                                  |\n *\n *\n * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n * applied and the formatted text will have the same day, month and year of the expression.\n *\n * WARNINGS:\n * - this pipe has only access to en-US locale data by default. If you want to localize the dates\n *   in another language, you will have to import data for other locales.\n *   See the {@linkDocs guide/i18n#i18n-pipes \"I18n guide\"} to know how to import additional locale\n *   data.\n * - Fields suffixed with * are only available in the extra dataset.\n *   See the {@linkDocs guide/i18n#i18n-pipes \"I18n guide\"} to know how to import extra locale\n *   data.\n * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n *   Instead users should treat the date as an immutable object and change the reference when the\n *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n *   which would be an expensive operation).\n *\n * ### Examples\n *\n * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n * in the _local_ time and locale is 'en-US':\n *\n * {@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n *\n *\n */\n// clang-format on\nvar DatePipe = /** @class */ (function () {\n    function DatePipe(locale) {\n        this.locale = locale;\n    }\n    /**\n     * @param value a date object or a number (milliseconds since UTC epoch) or an ISO string\n     * (https://www.w3.org/TR/NOTE-datetime).\n     * @param format indicates which date/time components to include. The format can be predefined as\n     *   shown below (all examples are given for `en-US`) or custom as shown in the table.\n     *   - `'short'`: equivalent to `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`).\n     *   - `'medium'`: equivalent to `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`).\n     *   - `'long'`: equivalent to `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM\n     * GMT+1`).\n     *   - `'full'`: equivalent to `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at\n     * 9:03:01 AM GMT+01:00`).\n     *   - `'shortDate'`: equivalent to `'M/d/yy'` (e.g. `6/15/15`).\n     *   - `'mediumDate'`: equivalent to `'MMM d, y'` (e.g. `Jun 15, 2015`).\n     *   - `'longDate'`: equivalent to `'MMMM d, y'` (e.g. `June 15, 2015`).\n     *   - `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` (e.g. `Monday, June 15, 2015`).\n     *   - `'shortTime'`: equivalent to `'h:mm a'` (e.g. `9:03 AM`).\n     *   - `'mediumTime'`: equivalent to `'h:mm:ss a'` (e.g. `9:03:01 AM`).\n     *   - `'longTime'`: equivalent to `'h:mm:ss a z'` (e.g. `9:03:01 AM GMT+1`).\n     *   - `'fullTime'`: equivalent to `'h:mm:ss a zzzz'` (e.g. `9:03:01 AM GMT+01:00`).\n     * @param timezone to be used for formatting the time. It understands UTC/GMT and the continental\n     * US time zone\n     *  abbreviations, but for general use, use a time zone offset (e.g. `'+0430'`).\n     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n     * default).\n     */\n    /**\n       * @param value a date object or a number (milliseconds since UTC epoch) or an ISO string\n       * (https://www.w3.org/TR/NOTE-datetime).\n       * @param format indicates which date/time components to include. The format can be predefined as\n       *   shown below (all examples are given for `en-US`) or custom as shown in the table.\n       *   - `'short'`: equivalent to `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`).\n       *   - `'medium'`: equivalent to `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`).\n       *   - `'long'`: equivalent to `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM\n       * GMT+1`).\n       *   - `'full'`: equivalent to `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at\n       * 9:03:01 AM GMT+01:00`).\n       *   - `'shortDate'`: equivalent to `'M/d/yy'` (e.g. `6/15/15`).\n       *   - `'mediumDate'`: equivalent to `'MMM d, y'` (e.g. `Jun 15, 2015`).\n       *   - `'longDate'`: equivalent to `'MMMM d, y'` (e.g. `June 15, 2015`).\n       *   - `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` (e.g. `Monday, June 15, 2015`).\n       *   - `'shortTime'`: equivalent to `'h:mm a'` (e.g. `9:03 AM`).\n       *   - `'mediumTime'`: equivalent to `'h:mm:ss a'` (e.g. `9:03:01 AM`).\n       *   - `'longTime'`: equivalent to `'h:mm:ss a z'` (e.g. `9:03:01 AM GMT+1`).\n       *   - `'fullTime'`: equivalent to `'h:mm:ss a zzzz'` (e.g. `9:03:01 AM GMT+01:00`).\n       * @param timezone to be used for formatting the time. It understands UTC/GMT and the continental\n       * US time zone\n       *  abbreviations, but for general use, use a time zone offset (e.g. `'+0430'`).\n       * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n       * default).\n       */\n    DatePipe.prototype.transform = /**\n       * @param value a date object or a number (milliseconds since UTC epoch) or an ISO string\n       * (https://www.w3.org/TR/NOTE-datetime).\n       * @param format indicates which date/time components to include. The format can be predefined as\n       *   shown below (all examples are given for `en-US`) or custom as shown in the table.\n       *   - `'short'`: equivalent to `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`).\n       *   - `'medium'`: equivalent to `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`).\n       *   - `'long'`: equivalent to `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM\n       * GMT+1`).\n       *   - `'full'`: equivalent to `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at\n       * 9:03:01 AM GMT+01:00`).\n       *   - `'shortDate'`: equivalent to `'M/d/yy'` (e.g. `6/15/15`).\n       *   - `'mediumDate'`: equivalent to `'MMM d, y'` (e.g. `Jun 15, 2015`).\n       *   - `'longDate'`: equivalent to `'MMMM d, y'` (e.g. `June 15, 2015`).\n       *   - `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` (e.g. `Monday, June 15, 2015`).\n       *   - `'shortTime'`: equivalent to `'h:mm a'` (e.g. `9:03 AM`).\n       *   - `'mediumTime'`: equivalent to `'h:mm:ss a'` (e.g. `9:03:01 AM`).\n       *   - `'longTime'`: equivalent to `'h:mm:ss a z'` (e.g. `9:03:01 AM GMT+1`).\n       *   - `'fullTime'`: equivalent to `'h:mm:ss a zzzz'` (e.g. `9:03:01 AM GMT+01:00`).\n       * @param timezone to be used for formatting the time. It understands UTC/GMT and the continental\n       * US time zone\n       *  abbreviations, but for general use, use a time zone offset (e.g. `'+0430'`).\n       * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n       * default).\n       */\n    function (value, format, timezone, locale) {\n        if (format === void 0) { format = 'mediumDate'; }\n        if (value == null || value === '' || value !== value)\n            return null;\n        try {\n            return formatDate(value, format, locale || this.locale, timezone);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(DatePipe, error.message);\n        }\n    };\n    DatePipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'date', pure: true },] }\n    ];\n    /** @nocollapse */\n    DatePipe.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [core.LOCALE_ID,] },] },\n    ]; };\n    return DatePipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _INTERPOLATION_REGEXP = /#/g;\n/**\n * @ngModule CommonModule\n * @description\n *\n * Maps a value to a string that pluralizes the value according to locale rules.\n *\n *  ## Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n *\n * @experimental\n */\nvar I18nPluralPipe = /** @class */ (function () {\n    function I18nPluralPipe(_localization) {\n        this._localization = _localization;\n    }\n    /**\n     * @param value the number to be formatted\n     * @param pluralMap an object that mimics the ICU format, see\n     * http://userguide.icu-project.org/formatparse/messages.\n     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n     * default).\n     */\n    /**\n       * @param value the number to be formatted\n       * @param pluralMap an object that mimics the ICU format, see\n       * http://userguide.icu-project.org/formatparse/messages.\n       * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n       * default).\n       */\n    I18nPluralPipe.prototype.transform = /**\n       * @param value the number to be formatted\n       * @param pluralMap an object that mimics the ICU format, see\n       * http://userguide.icu-project.org/formatparse/messages.\n       * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n       * default).\n       */\n    function (value, pluralMap, locale) {\n        if (value == null)\n            return '';\n        if (typeof pluralMap !== 'object' || pluralMap === null) {\n            throw invalidPipeArgumentError(I18nPluralPipe, pluralMap);\n        }\n        var key = getPluralCategory(value, Object.keys(pluralMap), this._localization, locale);\n        return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n    };\n    I18nPluralPipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'i18nPlural', pure: true },] }\n    ];\n    /** @nocollapse */\n    I18nPluralPipe.ctorParameters = function () { return [\n        { type: NgLocalization, },\n    ]; };\n    return I18nPluralPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Generic selector that displays the string that matches the current value.\n *\n * If none of the keys of the `mapping` match the `value`, then the content\n * of the `other` key is returned when present, otherwise an empty string is returned.\n *\n * ## Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n *\n * @experimental\n */\nvar I18nSelectPipe = /** @class */ (function () {\n    function I18nSelectPipe() {\n    }\n    /**\n     * @param value a string to be internationalized.\n     * @param mapping an object that indicates the text that should be displayed\n     * for different values of the provided `value`.\n     */\n    /**\n       * @param value a string to be internationalized.\n       * @param mapping an object that indicates the text that should be displayed\n       * for different values of the provided `value`.\n       */\n    I18nSelectPipe.prototype.transform = /**\n       * @param value a string to be internationalized.\n       * @param mapping an object that indicates the text that should be displayed\n       * for different values of the provided `value`.\n       */\n    function (value, mapping) {\n        if (value == null)\n            return '';\n        if (typeof mapping !== 'object' || typeof value !== 'string') {\n            throw invalidPipeArgumentError(I18nSelectPipe, mapping);\n        }\n        if (mapping.hasOwnProperty(value)) {\n            return mapping[value];\n        }\n        if (mapping.hasOwnProperty('other')) {\n            return mapping['other'];\n        }\n        return '';\n    };\n    I18nSelectPipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'i18nSelect', pure: true },] }\n    ];\n    /** @nocollapse */\n    I18nSelectPipe.ctorParameters = function () { return []; };\n    return I18nSelectPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Converts value into string using `JSON.stringify`. Useful for debugging.\n *\n * ### Example\n * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n *\n *\n */\nvar JsonPipe = /** @class */ (function () {\n    function JsonPipe() {\n    }\n    JsonPipe.prototype.transform = function (value) { return JSON.stringify(value, null, 2); };\n    JsonPipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'json', pure: false },] }\n    ];\n    /** @nocollapse */\n    JsonPipe.ctorParameters = function () { return []; };\n    return JsonPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Uses the function {@link formatNumber} to format a number according to locale rules.\n *\n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the locale.\n *\n * ### Example\n *\n * {@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n *\n *\n */\nvar DecimalPipe = /** @class */ (function () {\n    function DecimalPipe(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param value a number to be formatted.\n     * @param digitsInfo a `string` which has a following format: <br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n     *   - `minFractionDigits` is the minimum number of digits after the decimal point. Defaults to\n     * `0`.\n     *   - `maxFractionDigits` is the maximum number of digits after the decimal point. Defaults to\n     * `3`.\n     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n     * default).\n     */\n    /**\n       * @param value a number to be formatted.\n       * @param digitsInfo a `string` which has a following format: <br>\n       * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n       *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n       *   - `minFractionDigits` is the minimum number of digits after the decimal point. Defaults to\n       * `0`.\n       *   - `maxFractionDigits` is the maximum number of digits after the decimal point. Defaults to\n       * `3`.\n       * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n       * default).\n       */\n    DecimalPipe.prototype.transform = /**\n       * @param value a number to be formatted.\n       * @param digitsInfo a `string` which has a following format: <br>\n       * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n       *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n       *   - `minFractionDigits` is the minimum number of digits after the decimal point. Defaults to\n       * `0`.\n       *   - `maxFractionDigits` is the maximum number of digits after the decimal point. Defaults to\n       * `3`.\n       * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n       * default).\n       */\n    function (value, digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        try {\n            var num = strToNumber(value);\n            return formatNumber(num, locale, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(DecimalPipe, error.message);\n        }\n    };\n    DecimalPipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'number' },] }\n    ];\n    /** @nocollapse */\n    DecimalPipe.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [core.LOCALE_ID,] },] },\n    ]; };\n    return DecimalPipe;\n}());\n/**\n * @ngModule CommonModule\n * @description\n *\n * Uses the function {@link formatPercent} to format a number as a percentage according\n * to locale rules.\n *\n * ### Example\n *\n * {@example common/pipes/ts/percent_pipe.ts region='PercentPipe'}\n *\n *\n */\nvar PercentPipe = /** @class */ (function () {\n    function PercentPipe(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     *\n     * @param value a number to be formatted as a percentage.\n     * @param digitsInfo see {@link DecimalPipe} for more details.\n     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n   * default).\n     */\n    /**\n       *\n       * @param value a number to be formatted as a percentage.\n       * @param digitsInfo see {@link DecimalPipe} for more details.\n       * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n     * default).\n       */\n    PercentPipe.prototype.transform = /**\n       *\n       * @param value a number to be formatted as a percentage.\n       * @param digitsInfo see {@link DecimalPipe} for more details.\n       * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n     * default).\n       */\n    function (value, digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        try {\n            var num = strToNumber(value);\n            return formatPercent(num, locale, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(PercentPipe, error.message);\n        }\n    };\n    PercentPipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'percent' },] }\n    ];\n    /** @nocollapse */\n    PercentPipe.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [core.LOCALE_ID,] },] },\n    ]; };\n    return PercentPipe;\n}());\n/**\n * @ngModule CommonModule\n * @description\n *\n * Uses the functions {@link getCurrencySymbol} and {@link formatCurrency} to format a\n * number as currency using locale rules.\n *\n * ### Example\n *\n * {@example common/pipes/ts/currency_pipe.ts region='CurrencyPipe'}\n *\n *\n */\nvar CurrencyPipe = /** @class */ (function () {\n    function CurrencyPipe(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     *\n     * @param value a number to be formatted as currency.\n     * @param currencyCodeis the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,\n     * such as `USD` for the US dollar and `EUR` for the euro.\n     * @param display indicates whether to show the currency symbol, the code or a custom value:\n     *   - `code`: use code (e.g. `USD`).\n     *   - `symbol`(default): use symbol (e.g. `$`).\n     *   - `symbol-narrow`: some countries have two symbols for their currency, one regular and one\n     *     narrow (e.g. the canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`).\n     *   - `string`: use this value instead of a code or a symbol.\n     *   - boolean (deprecated from v5): `true` for symbol and false for `code`.\n     *   If there is no narrow symbol for the chosen currency, the regular symbol will be used.\n     * @param digitsInfo see {@link DecimalPipe} for more details.\n     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n     * default).\n     */\n    /**\n       *\n       * @param value a number to be formatted as currency.\n       * @param currencyCodeis the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,\n       * such as `USD` for the US dollar and `EUR` for the euro.\n       * @param display indicates whether to show the currency symbol, the code or a custom value:\n       *   - `code`: use code (e.g. `USD`).\n       *   - `symbol`(default): use symbol (e.g. `$`).\n       *   - `symbol-narrow`: some countries have two symbols for their currency, one regular and one\n       *     narrow (e.g. the canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`).\n       *   - `string`: use this value instead of a code or a symbol.\n       *   - boolean (deprecated from v5): `true` for symbol and false for `code`.\n       *   If there is no narrow symbol for the chosen currency, the regular symbol will be used.\n       * @param digitsInfo see {@link DecimalPipe} for more details.\n       * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n       * default).\n       */\n    CurrencyPipe.prototype.transform = /**\n       *\n       * @param value a number to be formatted as currency.\n       * @param currencyCodeis the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,\n       * such as `USD` for the US dollar and `EUR` for the euro.\n       * @param display indicates whether to show the currency symbol, the code or a custom value:\n       *   - `code`: use code (e.g. `USD`).\n       *   - `symbol`(default): use symbol (e.g. `$`).\n       *   - `symbol-narrow`: some countries have two symbols for their currency, one regular and one\n       *     narrow (e.g. the canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`).\n       *   - `string`: use this value instead of a code or a symbol.\n       *   - boolean (deprecated from v5): `true` for symbol and false for `code`.\n       *   If there is no narrow symbol for the chosen currency, the regular symbol will be used.\n       * @param digitsInfo see {@link DecimalPipe} for more details.\n       * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n       * default).\n       */\n    function (value, currencyCode, display, digitsInfo, locale) {\n        if (display === void 0) { display = 'symbol'; }\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        if (typeof display === 'boolean') {\n            if (console && console.warn) {\n                console.warn(\"Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \\\"code\\\", \\\"symbol\\\" or \\\"symbol-narrow\\\".\");\n            }\n            display = display ? 'symbol' : 'code';\n        }\n        var currency = currencyCode || 'USD';\n        if (display !== 'code') {\n            if (display === 'symbol' || display === 'symbol-narrow') {\n                currency = getCurrencySymbol(currency, display === 'symbol' ? 'wide' : 'narrow', locale);\n            }\n            else {\n                currency = display;\n            }\n        }\n        try {\n            var num = strToNumber(value);\n            return formatCurrency(num, locale, currency, currencyCode, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(CurrencyPipe, error.message);\n        }\n    };\n    CurrencyPipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'currency' },] }\n    ];\n    /** @nocollapse */\n    CurrencyPipe.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [core.LOCALE_ID,] },] },\n    ]; };\n    return CurrencyPipe;\n}());\nfunction isEmpty(value) {\n    return value == null || value === '' || value !== value;\n}\n/**\n * Transforms a string into a number (if needed)\n */\nfunction strToNumber(value) {\n    // Convert strings to numbers\n    if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {\n        return Number(value);\n    }\n    if (typeof value !== 'number') {\n        throw new Error(value + \" is not a number\");\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Creates a new `Array` or `String` containing a subset (slice) of the elements.\n *\n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n * and `String.prototype.slice()`.\n *\n * When operating on an `Array`, the returned `Array` is always a copy even when all\n * the elements are being returned.\n *\n * When operating on a blank value, the pipe returns the blank value.\n *\n * ### List Example\n *\n * This `ngFor` example:\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n *\n * produces the following:\n *\n *     <li>b</li>\n *     <li>c</li>\n *\n * ## String Examples\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n *\n *\n */\nvar SlicePipe = /** @class */ (function () {\n    function SlicePipe() {\n    }\n    /**\n     * @param value a list or a string to be sliced.\n     * @param start the starting index of the subset to return:\n     *   - **a positive integer**: return the item at `start` index and all items after\n     *     in the list or string expression.\n     *   - **a negative integer**: return the item at `start` index from the end and all items after\n     *     in the list or string expression.\n     *   - **if positive and greater than the size of the expression**: return an empty list or\n     * string.\n     *   - **if negative and greater than the size of the expression**: return entire list or string.\n     * @param end the ending index of the subset to return:\n     *   - **omitted**: return all items until the end.\n     *   - **if positive**: return all items before `end` index of the list or string.\n     *   - **if negative**: return all items before `end` index from the end of the list or string.\n     */\n    /**\n       * @param value a list or a string to be sliced.\n       * @param start the starting index of the subset to return:\n       *   - **a positive integer**: return the item at `start` index and all items after\n       *     in the list or string expression.\n       *   - **a negative integer**: return the item at `start` index from the end and all items after\n       *     in the list or string expression.\n       *   - **if positive and greater than the size of the expression**: return an empty list or\n       * string.\n       *   - **if negative and greater than the size of the expression**: return entire list or string.\n       * @param end the ending index of the subset to return:\n       *   - **omitted**: return all items until the end.\n       *   - **if positive**: return all items before `end` index of the list or string.\n       *   - **if negative**: return all items before `end` index from the end of the list or string.\n       */\n    SlicePipe.prototype.transform = /**\n       * @param value a list or a string to be sliced.\n       * @param start the starting index of the subset to return:\n       *   - **a positive integer**: return the item at `start` index and all items after\n       *     in the list or string expression.\n       *   - **a negative integer**: return the item at `start` index from the end and all items after\n       *     in the list or string expression.\n       *   - **if positive and greater than the size of the expression**: return an empty list or\n       * string.\n       *   - **if negative and greater than the size of the expression**: return entire list or string.\n       * @param end the ending index of the subset to return:\n       *   - **omitted**: return all items until the end.\n       *   - **if positive**: return all items before `end` index of the list or string.\n       *   - **if negative**: return all items before `end` index from the end of the list or string.\n       */\n    function (value, start, end) {\n        if (value == null)\n            return value;\n        if (!this.supports(value)) {\n            throw invalidPipeArgumentError(SlicePipe, value);\n        }\n        return value.slice(start, end);\n    };\n    SlicePipe.prototype.supports = function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n    SlicePipe.decorators = [\n        { type: core.Pipe, args: [{ name: 'slice', pure: false },] }\n    ];\n    /** @nocollapse */\n    SlicePipe.ctorParameters = function () { return []; };\n    return SlicePipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A collection of Angular pipes that are likely to be used in each and every application.\n */\nvar COMMON_PIPES = [\n    AsyncPipe,\n    UpperCasePipe,\n    LowerCasePipe,\n    JsonPipe,\n    SlicePipe,\n    DecimalPipe,\n    PercentPipe,\n    TitleCasePipe,\n    CurrencyPipe,\n    DatePipe,\n    I18nPluralPipe,\n    I18nSelectPipe,\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This does not contain the location providers,\n// as they need some platform specific implementations to work.\n/**\n * The module that includes all the basic Angular directives like {@link NgIf}, {@link NgForOf}, ...\n *\n *\n */\nvar CommonModule = /** @class */ (function () {\n    function CommonModule() {\n    }\n    CommonModule.decorators = [\n        { type: core.NgModule, args: [{\n                    declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n                    exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n                    providers: [\n                        { provide: NgLocalization, useClass: NgLocaleLocalization },\n                    ],\n                },] }\n    ];\n    /** @nocollapse */\n    CommonModule.ctorParameters = function () { return []; };\n    return CommonModule;\n}());\nvar ɵ0 = getPluralCase;\n/**\n * A module that contains the deprecated i18n pipes.\n *\n * @deprecated from v5\n */\nvar DeprecatedI18NPipesModule = /** @class */ (function () {\n    function DeprecatedI18NPipesModule() {\n    }\n    DeprecatedI18NPipesModule.decorators = [\n        { type: core.NgModule, args: [{\n                    declarations: [COMMON_DEPRECATED_I18N_PIPES],\n                    exports: [COMMON_DEPRECATED_I18N_PIPES],\n                    providers: [{ provide: DEPRECATED_PLURAL_FN, useValue: ɵ0 }],\n                },] }\n    ];\n    /** @nocollapse */\n    DeprecatedI18NPipesModule.ctorParameters = function () { return []; };\n    return DeprecatedI18NPipesModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n *\n */\nvar DOCUMENT = new core.InjectionToken('DocumentToken');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PLATFORM_BROWSER_ID = 'browser';\nvar PLATFORM_SERVER_ID = 'server';\nvar PLATFORM_WORKER_APP_ID = 'browserWorkerApp';\nvar PLATFORM_WORKER_UI_ID = 'browserWorkerUi';\n/**\n * Returns whether a platform id represents a browser platform.\n * @experimental\n */\nfunction isPlatformBrowser(platformId) {\n    return platformId === PLATFORM_BROWSER_ID;\n}\n/**\n * Returns whether a platform id represents a server platform.\n * @experimental\n */\nfunction isPlatformServer(platformId) {\n    return platformId === PLATFORM_SERVER_ID;\n}\n/**\n * Returns whether a platform id represents a web worker app platform.\n * @experimental\n */\nfunction isPlatformWorkerApp(platformId) {\n    return platformId === PLATFORM_WORKER_APP_ID;\n}\n/**\n * Returns whether a platform id represents a web worker UI platform.\n * @experimental\n */\nfunction isPlatformWorkerUi(platformId) {\n    return platformId === PLATFORM_WORKER_UI_ID;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar VERSION = new core.Version('6.0.2');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.ɵangular_packages_common_common_e = COMMON_DIRECTIVES;\nexports.ɵangular_packages_common_common_d = findLocaleData;\nexports.ɵangular_packages_common_common_a = DEPRECATED_PLURAL_FN;\nexports.ɵangular_packages_common_common_b = getPluralCase;\nexports.ɵangular_packages_common_common_g = COMMON_DEPRECATED_I18N_PIPES;\nexports.ɵangular_packages_common_common_f = COMMON_PIPES;\nexports.ɵregisterLocaleData = registerLocaleData;\nexports.formatDate = formatDate;\nexports.formatCurrency = formatCurrency;\nexports.formatNumber = formatNumber;\nexports.formatPercent = formatPercent;\nexports.NgLocaleLocalization = NgLocaleLocalization;\nexports.NgLocalization = NgLocalization;\nexports.registerLocaleData = registerLocaleData;\nexports.getNumberOfCurrencyDigits = getNumberOfCurrencyDigits;\nexports.getCurrencySymbol = getCurrencySymbol;\nexports.getLocaleDayPeriods = getLocaleDayPeriods;\nexports.getLocaleDayNames = getLocaleDayNames;\nexports.getLocaleMonthNames = getLocaleMonthNames;\nexports.getLocaleId = getLocaleId;\nexports.getLocaleEraNames = getLocaleEraNames;\nexports.getLocaleWeekEndRange = getLocaleWeekEndRange;\nexports.getLocaleFirstDayOfWeek = getLocaleFirstDayOfWeek;\nexports.getLocaleDateFormat = getLocaleDateFormat;\nexports.getLocaleDateTimeFormat = getLocaleDateTimeFormat;\nexports.getLocaleExtraDayPeriodRules = getLocaleExtraDayPeriodRules;\nexports.getLocaleExtraDayPeriods = getLocaleExtraDayPeriods;\nexports.getLocalePluralCase = getLocalePluralCase;\nexports.getLocaleTimeFormat = getLocaleTimeFormat;\nexports.getLocaleNumberSymbol = getLocaleNumberSymbol;\nexports.getLocaleNumberFormat = getLocaleNumberFormat;\nexports.getLocaleCurrencyName = getLocaleCurrencyName;\nexports.getLocaleCurrencySymbol = getLocaleCurrencySymbol;\nexports.ɵparseCookieValue = parseCookieValue;\nexports.CommonModule = CommonModule;\nexports.DeprecatedI18NPipesModule = DeprecatedI18NPipesModule;\nexports.NgClass = NgClass;\nexports.NgForOf = NgForOf;\nexports.NgForOfContext = NgForOfContext;\nexports.NgIf = NgIf;\nexports.NgIfContext = NgIfContext;\nexports.NgPlural = NgPlural;\nexports.NgPluralCase = NgPluralCase;\nexports.NgStyle = NgStyle;\nexports.NgSwitch = NgSwitch;\nexports.NgSwitchCase = NgSwitchCase;\nexports.NgSwitchDefault = NgSwitchDefault;\nexports.NgTemplateOutlet = NgTemplateOutlet;\nexports.NgComponentOutlet = NgComponentOutlet;\nexports.DOCUMENT = DOCUMENT;\nexports.AsyncPipe = AsyncPipe;\nexports.DatePipe = DatePipe;\nexports.I18nPluralPipe = I18nPluralPipe;\nexports.I18nSelectPipe = I18nSelectPipe;\nexports.JsonPipe = JsonPipe;\nexports.LowerCasePipe = LowerCasePipe;\nexports.CurrencyPipe = CurrencyPipe;\nexports.DecimalPipe = DecimalPipe;\nexports.PercentPipe = PercentPipe;\nexports.SlicePipe = SlicePipe;\nexports.UpperCasePipe = UpperCasePipe;\nexports.TitleCasePipe = TitleCasePipe;\nexports.DeprecatedDatePipe = DeprecatedDatePipe;\nexports.DeprecatedCurrencyPipe = DeprecatedCurrencyPipe;\nexports.DeprecatedDecimalPipe = DeprecatedDecimalPipe;\nexports.DeprecatedPercentPipe = DeprecatedPercentPipe;\nexports.ɵPLATFORM_BROWSER_ID = PLATFORM_BROWSER_ID;\nexports.ɵPLATFORM_SERVER_ID = PLATFORM_SERVER_ID;\nexports.ɵPLATFORM_WORKER_APP_ID = PLATFORM_WORKER_APP_ID;\nexports.ɵPLATFORM_WORKER_UI_ID = PLATFORM_WORKER_UI_ID;\nexports.isPlatformBrowser = isPlatformBrowser;\nexports.isPlatformServer = isPlatformServer;\nexports.isPlatformWorkerApp = isPlatformWorkerApp;\nexports.isPlatformWorkerUi = isPlatformWorkerUi;\nexports.VERSION = VERSION;\nexports.PlatformLocation = PlatformLocation;\nexports.LOCATION_INITIALIZED = LOCATION_INITIALIZED;\nexports.LocationStrategy = LocationStrategy;\nexports.APP_BASE_HREF = APP_BASE_HREF;\nexports.HashLocationStrategy = HashLocationStrategy;\nexports.PathLocationStrategy = PathLocationStrategy;\nexports.Location = Location;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=common.umd.js.map\n"]}