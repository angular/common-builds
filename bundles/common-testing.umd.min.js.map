{"version":3,"sources":["packages/common/common-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","common","testing","core","rxjs","this","i0","SpyLocation","urlChanges","_history","LocationState","_historyIndex","_subject","EventEmitter","_baseHref","_platformStrategy","_platformLocation","_urlChangeListeners","prototype","setInitialPath","url","path","setBaseHref","getState","state","isCurrentPathEqualTo","query","givenPath","endsWith","substring","length","simulateUrlPop","pathname","emit","pop","type","simulateHashChange","push","prepareExternalUrl","startsWith","go","splice","locationState","replaceState","history","forward","back","onUrlChange","fn","_this","subscribe","v","_notifyUrlChangeListeners","forEach","onNext","onThrow","onReturn","next","error","complete","normalize","ngInjectableDef","ɵɵdefineInjectable","token","SpyLocation_Factory","t","providedIn","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","s","i","n","arguments","call","apply","MockLocationStrategy","_super","internalBaseHref","internalPath","internalTitle","stateChanges","__extends","__","constructor","create","simulatePopState","_MockPopStateEvent","includeHash","internal","pushState","ctx","title","externalUrl","onPopState","getBaseHref","MockLocationStrategy_Factory","LocationStrategy","newUrl","urlParse","MOCK_PLATFORM_LOCATION_CONFIG","InjectionToken","MockPlatformLocation","config","baseHref","hashUpdate","Subject","hostname","protocol","port","search","hash","appBaseHref","parsedChanges","parseChanges","startUrl","defineProperty","get","enumerable","configurable","getBaseHrefFromDOM","onHashChange","JSON","parse","stringify","parseUrl","urlStr","serverBase","parsedUrl","test","URL","e","result","exec","Error","hostSplit","split","indexOf","_a","unshift","oldUrl","oldHash","shift","scheduleMicroTask","cb","Promise","resolve","then","MockPlatformLocation_Factory","ɵɵinject","value"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-rc.0+157.sha-f74373f.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('rxjs')) :\n    typeof define === 'function' && define.amd ? define('@angular/common/testing', ['exports', '@angular/core', '@angular/common', 'rxjs'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.common = global.ng.common || {}, global.ng.common.testing = {}), global.ng.core, global.ng.common, global.rxjs));\n}(this, function (exports, i0, common, rxjs) { 'use strict';\n\n    /**\n     * A spy for {@link Location} that allows tests to fire simulated location events.\n     *\n     * @publicApi\n     */\n    var SpyLocation = /** @class */ (function () {\n        function SpyLocation() {\n            this.urlChanges = [];\n            this._history = [new LocationState('', '', null)];\n            this._historyIndex = 0;\n            /** @internal */\n            this._subject = new i0.EventEmitter();\n            /** @internal */\n            this._baseHref = '';\n            /** @internal */\n            this._platformStrategy = null;\n            /** @internal */\n            this._platformLocation = null;\n            /** @internal */\n            this._urlChangeListeners = [];\n        }\n        SpyLocation.prototype.setInitialPath = function (url) { this._history[this._historyIndex].path = url; };\n        SpyLocation.prototype.setBaseHref = function (url) { this._baseHref = url; };\n        SpyLocation.prototype.path = function () { return this._history[this._historyIndex].path; };\n        SpyLocation.prototype.getState = function () { return this._history[this._historyIndex].state; };\n        SpyLocation.prototype.isCurrentPathEqualTo = function (path, query) {\n            if (query === void 0) { query = ''; }\n            var givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n            var currPath = this.path().endsWith('/') ? this.path().substring(0, this.path().length - 1) : this.path();\n            return currPath == givenPath + (query.length > 0 ? ('?' + query) : '');\n        };\n        SpyLocation.prototype.simulateUrlPop = function (pathname) {\n            this._subject.emit({ 'url': pathname, 'pop': true, 'type': 'popstate' });\n        };\n        SpyLocation.prototype.simulateHashChange = function (pathname) {\n            // Because we don't prevent the native event, the browser will independently update the path\n            this.setInitialPath(pathname);\n            this.urlChanges.push('hash: ' + pathname);\n            this._subject.emit({ 'url': pathname, 'pop': true, 'type': 'hashchange' });\n        };\n        SpyLocation.prototype.prepareExternalUrl = function (url) {\n            if (url.length > 0 && !url.startsWith('/')) {\n                url = '/' + url;\n            }\n            return this._baseHref + url;\n        };\n        SpyLocation.prototype.go = function (path, query, state) {\n            if (query === void 0) { query = ''; }\n            if (state === void 0) { state = null; }\n            path = this.prepareExternalUrl(path);\n            if (this._historyIndex > 0) {\n                this._history.splice(this._historyIndex + 1);\n            }\n            this._history.push(new LocationState(path, query, state));\n            this._historyIndex = this._history.length - 1;\n            var locationState = this._history[this._historyIndex - 1];\n            if (locationState.path == path && locationState.query == query) {\n                return;\n            }\n            var url = path + (query.length > 0 ? ('?' + query) : '');\n            this.urlChanges.push(url);\n            this._subject.emit({ 'url': url, 'pop': false });\n        };\n        SpyLocation.prototype.replaceState = function (path, query, state) {\n            if (query === void 0) { query = ''; }\n            if (state === void 0) { state = null; }\n            path = this.prepareExternalUrl(path);\n            var history = this._history[this._historyIndex];\n            if (history.path == path && history.query == query) {\n                return;\n            }\n            history.path = path;\n            history.query = query;\n            history.state = state;\n            var url = path + (query.length > 0 ? ('?' + query) : '');\n            this.urlChanges.push('replace: ' + url);\n        };\n        SpyLocation.prototype.forward = function () {\n            if (this._historyIndex < (this._history.length - 1)) {\n                this._historyIndex++;\n                this._subject.emit({ 'url': this.path(), 'state': this.getState(), 'pop': true });\n            }\n        };\n        SpyLocation.prototype.back = function () {\n            if (this._historyIndex > 0) {\n                this._historyIndex--;\n                this._subject.emit({ 'url': this.path(), 'state': this.getState(), 'pop': true });\n            }\n        };\n        SpyLocation.prototype.onUrlChange = function (fn) {\n            var _this = this;\n            this._urlChangeListeners.push(fn);\n            this.subscribe(function (v) { _this._notifyUrlChangeListeners(v.url, v.state); });\n        };\n        /** @internal */\n        SpyLocation.prototype._notifyUrlChangeListeners = function (url, state) {\n            if (url === void 0) { url = ''; }\n            this._urlChangeListeners.forEach(function (fn) { return fn(url, state); });\n        };\n        SpyLocation.prototype.subscribe = function (onNext, onThrow, onReturn) {\n            return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n        };\n        SpyLocation.prototype.normalize = function (url) { return null; };\n        SpyLocation.ngInjectableDef = i0.ɵɵdefineInjectable({ token: SpyLocation, factory: function SpyLocation_Factory(t) { return new (t || SpyLocation)(); }, providedIn: null });\n        return SpyLocation;\n    }());\n    /*@__PURE__*/ i0.ɵsetClassMetadata(SpyLocation, [{\n            type: i0.Injectable\n        }], null, null);\n    var LocationState = /** @class */ (function () {\n        function LocationState(path, query, state) {\n            this.path = path;\n            this.query = query;\n            this.state = state;\n        }\n        return LocationState;\n    }());\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    /**\n     * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n     * location events.\n     *\n     * @publicApi\n     */\n    var MockLocationStrategy = /** @class */ (function (_super) {\n        __extends(MockLocationStrategy, _super);\n        function MockLocationStrategy() {\n            var _this = _super.call(this) || this;\n            _this.internalBaseHref = '/';\n            _this.internalPath = '/';\n            _this.internalTitle = '';\n            _this.urlChanges = [];\n            /** @internal */\n            _this._subject = new i0.EventEmitter();\n            _this.stateChanges = [];\n            return _this;\n        }\n        MockLocationStrategy.prototype.simulatePopState = function (url) {\n            this.internalPath = url;\n            this._subject.emit(new _MockPopStateEvent(this.path()));\n        };\n        MockLocationStrategy.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            return this.internalPath;\n        };\n        MockLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n            if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n                return this.internalBaseHref + internal.substring(1);\n            }\n            return this.internalBaseHref + internal;\n        };\n        MockLocationStrategy.prototype.pushState = function (ctx, title, path, query) {\n            // Add state change to changes array\n            this.stateChanges.push(ctx);\n            this.internalTitle = title;\n            var url = path + (query.length > 0 ? ('?' + query) : '');\n            this.internalPath = url;\n            var externalUrl = this.prepareExternalUrl(url);\n            this.urlChanges.push(externalUrl);\n        };\n        MockLocationStrategy.prototype.replaceState = function (ctx, title, path, query) {\n            // Reset the last index of stateChanges to the ctx (state) object\n            this.stateChanges[(this.stateChanges.length || 1) - 1] = ctx;\n            this.internalTitle = title;\n            var url = path + (query.length > 0 ? ('?' + query) : '');\n            this.internalPath = url;\n            var externalUrl = this.prepareExternalUrl(url);\n            this.urlChanges.push('replace: ' + externalUrl);\n        };\n        MockLocationStrategy.prototype.onPopState = function (fn) { this._subject.subscribe({ next: fn }); };\n        MockLocationStrategy.prototype.getBaseHref = function () { return this.internalBaseHref; };\n        MockLocationStrategy.prototype.back = function () {\n            if (this.urlChanges.length > 0) {\n                this.urlChanges.pop();\n                this.stateChanges.pop();\n                var nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n                this.simulatePopState(nextUrl);\n            }\n        };\n        MockLocationStrategy.prototype.forward = function () { throw 'not implemented'; };\n        MockLocationStrategy.prototype.getState = function () { return this.stateChanges[(this.stateChanges.length || 1) - 1]; };\n        MockLocationStrategy.ngInjectableDef = i0.ɵɵdefineInjectable({ token: MockLocationStrategy, factory: function MockLocationStrategy_Factory(t) { return new (t || MockLocationStrategy)(); }, providedIn: null });\n        return MockLocationStrategy;\n    }(common.LocationStrategy));\n    /*@__PURE__*/ i0.ɵsetClassMetadata(MockLocationStrategy, [{\n            type: i0.Injectable\n        }], function () { return []; }, null);\n    var _MockPopStateEvent = /** @class */ (function () {\n        function _MockPopStateEvent(newUrl) {\n            this.newUrl = newUrl;\n            this.pop = true;\n            this.type = 'popstate';\n        }\n        return _MockPopStateEvent;\n    }());\n\n    /**\n     * Parser from https://tools.ietf.org/html/rfc3986#appendix-B\n     * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n     *  12            3  4          5       6  7        8 9\n     *\n     * Example: http://www.ics.uci.edu/pub/ietf/uri/#Related\n     *\n     * Results in:\n     *\n     * $1 = http:\n     * $2 = http\n     * $3 = //www.ics.uci.edu\n     * $4 = www.ics.uci.edu\n     * $5 = /pub/ietf/uri/\n     * $6 = <undefined>\n     * $7 = <undefined>\n     * $8 = #Related\n     * $9 = Related\n     */\n    var urlParse = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n    function parseUrl(urlStr, baseHref) {\n        var verifyProtocol = /^((http[s]?|ftp):\\/\\/)/;\n        var serverBase;\n        // URL class requires full URL. If the URL string doesn't start with protocol, we need to add\n        // an arbitrary base URL which can be removed afterward.\n        if (!verifyProtocol.test(urlStr)) {\n            serverBase = 'http://empty.com/';\n        }\n        var parsedUrl;\n        try {\n            parsedUrl = new URL(urlStr, serverBase);\n        }\n        catch (e) {\n            var result = urlParse.exec(serverBase || '' + urlStr);\n            if (!result) {\n                throw new Error(\"Invalid URL: \" + urlStr + \" with base: \" + baseHref);\n            }\n            var hostSplit = result[4].split(':');\n            parsedUrl = {\n                protocol: result[1],\n                hostname: hostSplit[0],\n                port: hostSplit[1] || '',\n                pathname: result[5],\n                search: result[6],\n                hash: result[8],\n            };\n        }\n        if (parsedUrl.pathname && parsedUrl.pathname.indexOf(baseHref) === 0) {\n            parsedUrl.pathname = parsedUrl.pathname.substring(baseHref.length);\n        }\n        return {\n            hostname: !serverBase && parsedUrl.hostname || '',\n            protocol: !serverBase && parsedUrl.protocol || '',\n            port: !serverBase && parsedUrl.port || '',\n            pathname: parsedUrl.pathname || '/',\n            search: parsedUrl.search || '',\n            hash: parsedUrl.hash || '',\n        };\n    }\n    /**\n     * Provider for mock platform location config\n     *\n     * @publicApi\n     */\n    var MOCK_PLATFORM_LOCATION_CONFIG = new i0.InjectionToken('MOCK_PLATFORM_LOCATION_CONFIG');\n    /**\n     * Mock implementation of URL state.\n     *\n     * @publicApi\n     */\n    var MockPlatformLocation = /** @class */ (function () {\n        function MockPlatformLocation(config) {\n            this.baseHref = '';\n            this.hashUpdate = new rxjs.Subject();\n            this.urlChanges = [{ hostname: '', protocol: '', port: '', pathname: '/', search: '', hash: '', state: null }];\n            if (config) {\n                this.baseHref = config.appBaseHref || '';\n                var parsedChanges = this.parseChanges(null, config.startUrl || 'http://<empty>/', this.baseHref);\n                this.urlChanges[0] = __assign({}, parsedChanges);\n            }\n        }\n        Object.defineProperty(MockPlatformLocation.prototype, \"hostname\", {\n            get: function () { return this.urlChanges[0].hostname; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MockPlatformLocation.prototype, \"protocol\", {\n            get: function () { return this.urlChanges[0].protocol; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MockPlatformLocation.prototype, \"port\", {\n            get: function () { return this.urlChanges[0].port; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MockPlatformLocation.prototype, \"pathname\", {\n            get: function () { return this.urlChanges[0].pathname; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MockPlatformLocation.prototype, \"search\", {\n            get: function () { return this.urlChanges[0].search; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MockPlatformLocation.prototype, \"hash\", {\n            get: function () { return this.urlChanges[0].hash; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MockPlatformLocation.prototype, \"state\", {\n            get: function () { return this.urlChanges[0].state; },\n            enumerable: true,\n            configurable: true\n        });\n        MockPlatformLocation.prototype.getBaseHrefFromDOM = function () { return this.baseHref; };\n        MockPlatformLocation.prototype.onPopState = function (fn) {\n            // No-op: a state stack is not implemented, so\n            // no events will ever come.\n        };\n        MockPlatformLocation.prototype.onHashChange = function (fn) { this.hashUpdate.subscribe(fn); };\n        Object.defineProperty(MockPlatformLocation.prototype, \"href\", {\n            get: function () {\n                var url = this.protocol + \"//\" + this.hostname + (this.port ? ':' + this.port : '');\n                url += \"\" + (this.pathname === '/' ? '' : this.pathname) + this.search + this.hash;\n                return url;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MockPlatformLocation.prototype, \"url\", {\n            get: function () { return \"\" + this.pathname + this.search + this.hash; },\n            enumerable: true,\n            configurable: true\n        });\n        MockPlatformLocation.prototype.parseChanges = function (state, url, baseHref) {\n            if (baseHref === void 0) { baseHref = ''; }\n            // When the `history.state` value is stored, it is always copied.\n            state = JSON.parse(JSON.stringify(state));\n            return __assign({}, parseUrl(url, baseHref), { state: state });\n        };\n        MockPlatformLocation.prototype.replaceState = function (state, title, newUrl) {\n            var _a = this.parseChanges(state, newUrl), pathname = _a.pathname, search = _a.search, parsedState = _a.state, hash = _a.hash;\n            this.urlChanges[0] = __assign({}, this.urlChanges[0], { pathname: pathname, search: search, hash: hash, state: parsedState });\n        };\n        MockPlatformLocation.prototype.pushState = function (state, title, newUrl) {\n            var _a = this.parseChanges(state, newUrl), pathname = _a.pathname, search = _a.search, parsedState = _a.state, hash = _a.hash;\n            this.urlChanges.unshift(__assign({}, this.urlChanges[0], { pathname: pathname, search: search, hash: hash, state: parsedState }));\n        };\n        MockPlatformLocation.prototype.forward = function () { throw new Error('Not implemented'); };\n        MockPlatformLocation.prototype.back = function () {\n            var _this = this;\n            var oldUrl = this.url;\n            var oldHash = this.hash;\n            this.urlChanges.shift();\n            var newHash = this.hash;\n            if (oldHash !== newHash) {\n                scheduleMicroTask(function () { return _this.hashUpdate.next({\n                    type: 'hashchange', state: null, oldUrl: oldUrl, newUrl: _this.url\n                }); });\n            }\n        };\n        MockPlatformLocation.prototype.getState = function () { return this.state; };\n        MockPlatformLocation.ngInjectableDef = i0.ɵɵdefineInjectable({ token: MockPlatformLocation, factory: function MockPlatformLocation_Factory(t) { return new (t || MockPlatformLocation)(i0.ɵɵinject(MOCK_PLATFORM_LOCATION_CONFIG, 8)); }, providedIn: null });\n        return MockPlatformLocation;\n    }());\n    /*@__PURE__*/ i0.ɵsetClassMetadata(MockPlatformLocation, [{\n            type: i0.Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: i0.Inject,\n                    args: [MOCK_PLATFORM_LOCATION_CONFIG]\n                }, {\n                    type: i0.Optional\n                }] }]; }, null);\n    function scheduleMicroTask(cb) {\n        Promise.resolve(null).then(cb);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.SpyLocation = SpyLocation;\n    exports.MockLocationStrategy = MockLocationStrategy;\n    exports.MOCK_PLATFORM_LOCATION_CONFIG = MOCK_PLATFORM_LOCATION_CONFIG;\n    exports.MockPlatformLocation = MockPlatformLocation;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=common-testing.umd.js.map\n"]}