{"version":3,"file":"common.js","sources":["../../../../packages/common/index.ts","../../../../packages/common/public_api.ts","../../../../packages/common/src/common.ts","../../../../packages/common/src/version.ts","../../../../packages/common/src/platform_id.ts","../../../../packages/common/src/dom_tokens.ts","../../../../packages/common/src/common_module.ts","../../../../packages/common/src/pipes/index.ts","../../../../packages/common/src/pipes/slice_pipe.ts","../../../../packages/common/src/pipes/number_pipe.ts","../../../../packages/common/src/pipes/json_pipe.ts","../../../../packages/common/src/pipes/i18n_select_pipe.ts","../../../../packages/common/src/pipes/i18n_plural_pipe.ts","../../../../packages/common/src/pipes/case_conversion_pipes.ts","../../../../packages/common/src/pipes/async_pipe.ts","../../../../packages/common/src/pipes/deprecated/index.ts","../../../../packages/common/src/pipes/deprecated/number_pipe.ts","../../../../packages/common/src/i18n/format_number.ts","../../../../packages/common/src/pipes/deprecated/date_pipe.ts","../../../../packages/common/src/pipes/deprecated/intl.ts","../../../../packages/common/src/pipes/date_pipe.ts","../../../../packages/common/src/pipes/invalid_pipe_argument_error.ts","../../../../packages/common/src/i18n/format_date.ts","../../../../packages/common/src/directives/index.ts","../../../../packages/common/src/directives/ng_template_outlet.ts","../../../../packages/common/src/directives/ng_style.ts","../../../../packages/common/src/directives/ng_plural.ts","../../../../packages/common/src/directives/ng_switch.ts","../../../../packages/common/src/directives/ng_if.ts","../../../../packages/common/src/directives/ng_for_of.ts","../../../../packages/common/src/directives/ng_component_outlet.ts","../../../../packages/common/src/directives/ng_class.ts","../../../../packages/common/src/cookie.ts","../../../../packages/common/src/i18n/localization.ts","../../../../packages/common/src/i18n/locale_data_api.ts","../../../../packages/common/src/i18n/locale_data.ts","../../../../packages/common/src/i18n/locale_en.ts","../../../../packages/common/src/i18n/currencies.ts","../../../../packages/common/src/location/index.ts","../../../../packages/common/src/location/path_location_strategy.ts","../../../../packages/common/src/location/hash_location_strategy.ts","../../../../packages/common/src/location/location.ts","../../../../packages/common/src/location/location_strategy.ts","../../../../packages/common/src/location/platform_location.ts"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport {NgLocaleLocalization,NgLocalization,registerLocaleData,Plural,NumberFormatStyle,FormStyle,Time,TranslationWidth,FormatWidth,NumberSymbol,WeekDay,getLocaleDayPeriods,getLocaleDayNames,getLocaleMonthNames,getLocaleId,getLocaleEraNames,getLocaleWeekEndRange,getLocaleFirstDayOfWeek,getLocaleDateFormat,getLocaleDateTimeFormat,getLocaleExtraDayPeriodRules,getLocaleExtraDayPeriods,getLocalePluralCase,getLocaleTimeFormat,getLocaleNumberSymbol,getLocaleNumberFormat,getLocaleCurrencyName,getLocaleCurrencySymbol,CURRENCIES,ɵparseCookieValue,CommonModule,DeprecatedI18NPipesModule,NgClass,NgForOf,NgForOfContext,NgIf,NgIfContext,NgPlural,NgPluralCase,NgStyle,NgSwitch,NgSwitchCase,NgSwitchDefault,NgTemplateOutlet,NgComponentOutlet,DOCUMENT,AsyncPipe,DatePipe,I18nPluralPipe,I18nSelectPipe,JsonPipe,LowerCasePipe,CurrencyPipe,DecimalPipe,PercentPipe,SlicePipe,UpperCasePipe,TitleCasePipe,DeprecatedDatePipe,DeprecatedCurrencyPipe,DeprecatedDecimalPipe,DeprecatedPercentPipe,ɵPLATFORM_BROWSER_ID,ɵPLATFORM_SERVER_ID,ɵPLATFORM_WORKER_APP_ID,ɵPLATFORM_WORKER_UI_ID,isPlatformBrowser,isPlatformServer,isPlatformWorkerApp,isPlatformWorkerUi,VERSION,PlatformLocation,LOCATION_INITIALIZED,LocationChangeEvent,LocationChangeListener,LocationStrategy,APP_BASE_HREF,HashLocationStrategy,PathLocationStrategy,PopStateEvent,Location} from './public_api';\n\nexport {COMMON_DIRECTIVES as ɵc} from './src/directives/index';\nexport {LocaleDataIndex as ɵa} from './src/i18n/locale_data';\nexport {findLocaleData as ɵb} from './src/i18n/locale_data_api';\nexport {COMMON_DEPRECATED_I18N_PIPES as ɵe} from './src/pipes/deprecated/index';\nexport {COMMON_PIPES as ɵd} from './src/pipes/index';","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\nexport {NgLocaleLocalization,NgLocalization,registerLocaleData,Plural,NumberFormatStyle,FormStyle,Time,TranslationWidth,FormatWidth,NumberSymbol,WeekDay,getLocaleDayPeriods,getLocaleDayNames,getLocaleMonthNames,getLocaleId,getLocaleEraNames,getLocaleWeekEndRange,getLocaleFirstDayOfWeek,getLocaleDateFormat,getLocaleDateTimeFormat,getLocaleExtraDayPeriodRules,getLocaleExtraDayPeriods,getLocalePluralCase,getLocaleTimeFormat,getLocaleNumberSymbol,getLocaleNumberFormat,getLocaleCurrencyName,getLocaleCurrencySymbol,CURRENCIES,ɵparseCookieValue,CommonModule,DeprecatedI18NPipesModule,NgClass,NgForOf,NgForOfContext,NgIf,NgIfContext,NgPlural,NgPluralCase,NgStyle,NgSwitch,NgSwitchCase,NgSwitchDefault,NgTemplateOutlet,NgComponentOutlet,DOCUMENT,AsyncPipe,DatePipe,I18nPluralPipe,I18nSelectPipe,JsonPipe,LowerCasePipe,CurrencyPipe,DecimalPipe,PercentPipe,SlicePipe,UpperCasePipe,TitleCasePipe,DeprecatedDatePipe,DeprecatedCurrencyPipe,DeprecatedDecimalPipe,DeprecatedPercentPipe,ɵPLATFORM_BROWSER_ID,ɵPLATFORM_SERVER_ID,ɵPLATFORM_WORKER_APP_ID,ɵPLATFORM_WORKER_UI_ID,isPlatformBrowser,isPlatformServer,isPlatformWorkerApp,isPlatformWorkerUi,VERSION,PlatformLocation,LOCATION_INITIALIZED,LocationChangeEvent,LocationChangeListener,LocationStrategy,APP_BASE_HREF,HashLocationStrategy,PathLocationStrategy,PopStateEvent,Location} from './src/common';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\nexport {PlatformLocation,LOCATION_INITIALIZED,LocationChangeEvent,LocationChangeListener,LocationStrategy,APP_BASE_HREF,HashLocationStrategy,PathLocationStrategy,PopStateEvent,Location} from './location/index';\nexport {NgLocaleLocalization, NgLocalization} from './i18n/localization';\nexport {registerLocaleData} from './i18n/locale_data';\nexport {Plural, NumberFormatStyle, FormStyle, Time, TranslationWidth, FormatWidth, NumberSymbol, WeekDay, getLocaleDayPeriods, getLocaleDayNames, getLocaleMonthNames, getLocaleId, getLocaleEraNames, getLocaleWeekEndRange, getLocaleFirstDayOfWeek, getLocaleDateFormat, getLocaleDateTimeFormat, getLocaleExtraDayPeriodRules, getLocaleExtraDayPeriods, getLocalePluralCase, getLocaleTimeFormat, getLocaleNumberSymbol, getLocaleNumberFormat, getLocaleCurrencyName, getLocaleCurrencySymbol} from './i18n/locale_data_api';\nexport {CURRENCIES} from './i18n/currencies';\nexport {parseCookieValue as ɵparseCookieValue} from './cookie';\nexport {CommonModule, DeprecatedI18NPipesModule} from './common_module';\nexport {NgClass, NgForOf, NgForOfContext, NgIf, NgIfContext, NgPlural, NgPluralCase, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgTemplateOutlet, NgComponentOutlet} from './directives/index';\nexport {DOCUMENT} from './dom_tokens';\nexport {AsyncPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, JsonPipe, LowerCasePipe, CurrencyPipe, DecimalPipe, PercentPipe, SlicePipe, UpperCasePipe, TitleCasePipe} from './pipes/index';\nexport {DeprecatedDatePipe, DeprecatedCurrencyPipe, DeprecatedDecimalPipe, DeprecatedPercentPipe} from './pipes/deprecated/index';\nexport {PLATFORM_BROWSER_ID as ɵPLATFORM_BROWSER_ID, PLATFORM_SERVER_ID as ɵPLATFORM_SERVER_ID, PLATFORM_WORKER_APP_ID as ɵPLATFORM_WORKER_APP_ID, PLATFORM_WORKER_UI_ID as ɵPLATFORM_WORKER_UI_ID, isPlatformBrowser, isPlatformServer, isPlatformWorkerApp, isPlatformWorkerUi} from './platform_id';\nexport {VERSION} from './version';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n/**\n * \\@stable\n */\nexport const /** @type {?} */ VERSION = new Version('5.0.0-beta.5-452a7ae');\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const /** @type {?} */ PLATFORM_BROWSER_ID = 'browser';\nexport const /** @type {?} */ PLATFORM_SERVER_ID = 'server';\nexport const /** @type {?} */ PLATFORM_WORKER_APP_ID = 'browserWorkerApp';\nexport const /** @type {?} */ PLATFORM_WORKER_UI_ID = 'browserWorkerUi';\n/**\n * Returns whether a platform id represents a browser platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nexport function isPlatformBrowser(platformId: Object): boolean {\n  return platformId === PLATFORM_BROWSER_ID;\n}\n/**\n * Returns whether a platform id represents a server platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nexport function isPlatformServer(platformId: Object): boolean {\n  return platformId === PLATFORM_SERVER_ID;\n}\n/**\n * Returns whether a platform id represents a web worker app platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nexport function isPlatformWorkerApp(platformId: Object): boolean {\n  return platformId === PLATFORM_WORKER_APP_ID;\n}\n/**\n * Returns whether a platform id represents a web worker UI platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nexport function isPlatformWorkerUi(platformId: Object): boolean {\n  return platformId === PLATFORM_WORKER_UI_ID;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n * \n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n * \n * \\@stable\n */\nexport const /** @type {?} */ DOCUMENT = new InjectionToken<Document>('DocumentToken');\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {COMMON_DIRECTIVES} from './directives/index';\nimport {NgLocaleLocalization, NgLocalization} from './i18n/localization';\nimport {COMMON_DEPRECATED_I18N_PIPES} from './pipes/deprecated/index';\nimport {COMMON_PIPES} from './pipes/index';\n/**\n * The module that includes all the basic Angular directives like {\\@link NgIf}, {\\@link NgForOf}, ...\n * \n * \\@stable\n */\nexport class CommonModule {\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: NgModule, args: [{\n  declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n  exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n  providers: [\n    {provide: NgLocalization, useClass: NgLocaleLocalization},\n  ],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction CommonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCommonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCommonModule.ctorParameters;\n}\n\n/**\n * A module that contains the deprecated i18n pipes.\n * \n * @deprecated from v5\n */\nexport class DeprecatedI18NPipesModule {\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: NgModule, args: [{declarations: [COMMON_DEPRECATED_I18N_PIPES], exports: [COMMON_DEPRECATED_I18N_PIPES]}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction DeprecatedI18NPipesModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDeprecatedI18NPipesModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDeprecatedI18NPipesModule.ctorParameters;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * This module provides a set of common Pipes.\n */\nimport {AsyncPipe} from './async_pipe';\nimport {LowerCasePipe, TitleCasePipe, UpperCasePipe} from './case_conversion_pipes';\nimport {DatePipe} from './date_pipe';\nimport {I18nPluralPipe} from './i18n_plural_pipe';\nimport {I18nSelectPipe} from './i18n_select_pipe';\nimport {JsonPipe} from './json_pipe';\nimport {CurrencyPipe, DecimalPipe, PercentPipe} from './number_pipe';\nimport {SlicePipe} from './slice_pipe';\n\nexport {\n  AsyncPipe,\n  CurrencyPipe,\n  DatePipe,\n  DecimalPipe,\n  I18nPluralPipe,\n  I18nSelectPipe,\n  JsonPipe,\n  LowerCasePipe,\n  PercentPipe,\n  SlicePipe,\n  TitleCasePipe,\n  UpperCasePipe\n};\n/**\n * A collection of Angular pipes that are likely to be used in each and every application.\n */\nexport const /** @type {?} */ COMMON_PIPES = [\n  AsyncPipe,\n  UpperCasePipe,\n  LowerCasePipe,\n  JsonPipe,\n  SlicePipe,\n  DecimalPipe,\n  PercentPipe,\n  TitleCasePipe,\n  CurrencyPipe,\n  DatePipe,\n  I18nPluralPipe,\n  I18nSelectPipe,\n];\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Creates a new List or String containing a subset (slice) of the elements.\n * \\@howToUse `array_or_string_expression | slice:start[:end]`\n * \\@description \n * \n * Where the input expression is a `List` or `String`, and:\n * - `start`: The starting index of the subset to return.\n *   - **a positive integer**: return the item at `start` index and all items after\n *     in the list or string expression.\n *   - **a negative integer**: return the item at `start` index from the end and all items after\n *     in the list or string expression.\n *   - **if positive and greater than the size of the expression**: return an empty list or string.\n *   - **if negative and greater than the size of the expression**: return entire list or string.\n * - `end`: The ending index of the subset to return.\n *   - **omitted**: return all items until the end.\n *   - **if positive**: return all items before `end` index of the list or string.\n *   - **if negative**: return all items before `end` index from the end of the list or string.\n * \n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n * and `String.prototype.slice()`.\n * \n * When operating on a [List], the returned list is always a copy even when all\n * the elements are being returned.\n * \n * When operating on a blank value, the pipe returns the blank value.\n * \n * ## List Example\n * \n * This `ngFor` example:\n * \n * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n * \n * produces the following:\n * \n *     <li>b</li>\n *     <li>c</li>\n * \n * ## String Examples\n * \n * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n * \n * \\@stable\n */\nexport class SlicePipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} start\n * @param {?=} end\n * @return {?}\n */\ntransform(value: any, start: number, end?: number): any {\n    if (value == null) return value;\n\n    if (!this.supports(value)) {\n      throw invalidPipeArgumentError(SlicePipe, value);\n    }\n\n    return value.slice(start, end);\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\n\nprivate supports(obj: any): boolean { return typeof obj === 'string' || Array.isArray(obj); }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'slice', pure: false}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction SlicePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nSlicePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSlicePipe.ctorParameters;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\nimport {formatNumber} from '../i18n/format_number';\nimport {NumberFormatStyle, findCurrencySymbol, getLocaleCurrencyName, getLocaleCurrencySymbol} from '../i18n/locale_data_api';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number according to locale rules.\n * \\@howToUse `number_expression | number[:digitInfo[:locale]]`\n * \n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the active locale.\n * \n * where `expression` is a number:\n *  - `digitInfo` is a `string` which has a following format: <br>\n *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n *  - `locale` is a `string` defining the locale to use (uses the current {\\@link LOCALE_ID} by\n * default)\n * \n * For more information on the acceptable range for each of these numbers and other\n * details see your native internationalization library.\n * \n * ### Example\n * \n * {\\@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n * \n * \\@stable\n */\nexport class DecimalPipe implements PipeTransform {\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} digits\n * @param {?=} locale\n * @return {?}\n */\ntransform(value: any, digits?: string, locale?: string): string|null {\n    if (isEmpty(value)) return null;\n\n    locale = locale || this._locale;\n\n    const {str, error} = formatNumber(value, locale, NumberFormatStyle.Decimal, digits);\n\n    if (error) {\n      throw invalidPipeArgumentError(CurrencyPipe, error);\n    }\n\n    return str;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'number'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction DecimalPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDecimalPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDecimalPipe.ctorParameters;\n/** @type {?} */\nDecimalPipe.prototype._locale;\n}\n\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number as a percentage according to locale rules.\n * \\@howToUse `number_expression | percent[:digitInfo[:locale]]`\n * \n * \\@description \n * \n * Formats a number as percentage.\n * \n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n *  - `locale` is a `string` defining the locale to use (uses the current {\\@link LOCALE_ID} by\n * default)\n * \n * ### Example\n * \n * {\\@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n * \n * \\@stable\n */\nexport class PercentPipe implements PipeTransform {\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} digits\n * @param {?=} locale\n * @return {?}\n */\ntransform(value: any, digits?: string, locale?: string): string|null {\n    if (isEmpty(value)) return null;\n\n    locale = locale || this._locale;\n\n    const {str, error} = formatNumber(value, locale, NumberFormatStyle.Percent, digits);\n\n    if (error) {\n      throw invalidPipeArgumentError(CurrencyPipe, error);\n    }\n\n    return str;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'percent'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction PercentPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nPercentPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPercentPipe.ctorParameters;\n/** @type {?} */\nPercentPipe.prototype._locale;\n}\n\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number as currency using locale rules.\n * \\@howToUse `number_expression | currency[:currencyCode[:display[:digitInfo[:locale]]]]`\n * \\@description \n * \n * Use `currency` to format a number as currency.\n * \n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `display` indicates whether to show the currency symbol or the code.\n *   - `code`(default): use code (e.g. `USD`).\n *   - `symbol`: use symbol (e.g. `$`).\n *   - `symbol-narrow`: some countries have two symbols for their currency, one regular and one\n *   - boolean (deprecated from v5): `true` for symbol and false for `code`\n *   narrow (e.g. the canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`).\n *   If there is no narrow symbol for the chosen currency, the regular symbol will be used.\n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n *  - `locale` is a `string` defining the locale to use (uses the current {\\@link LOCALE_ID} by\n * default)\n * \n * ### Example\n * \n * {\\@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n * \n * \\@stable\n */\nexport class CurrencyPipe implements PipeTransform {\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} currencyCode\n * @param {?=} display\n * @param {?=} digits\n * @param {?=} locale\n * @return {?}\n */\ntransform(\n      value: any, currencyCode?: string,\n      display: 'code'|'symbol'|'symbol-narrow'|boolean = 'symbol', digits?: string,\n      locale?: string): string|null {\n    if (isEmpty(value)) return null;\n\n    locale = locale || this._locale;\n\n    if (typeof display === 'boolean') {\n      if ( /** @type {?} */((<any>console)) && /** @type {?} */(( <any>console.warn))) {\n        console.warn(\n            `Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \"code\", \"symbol\" or \"symbol-narrow\".`);\n      }\n      display = display ? 'symbol' : 'code';\n    }\n\n    let /** @type {?} */ currency = currencyCode || 'USD';\n    if (display !== 'code') {\n      currency = findCurrencySymbol(currency, display === 'symbol' ? 'wide' : 'narrow');\n    }\n\n    const {str, error} = formatNumber(value, locale, NumberFormatStyle.Currency, digits, currency);\n\n    if (error) {\n      throw invalidPipeArgumentError(CurrencyPipe, error);\n    }\n\n    return str;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'currency'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction CurrencyPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nCurrencyPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCurrencyPipe.ctorParameters;\n/** @type {?} */\nCurrencyPipe.prototype._locale;\n}\n\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmpty(value: any): boolean {\n  return value == null || value === '' || value !== value;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Converts value into JSON string.\n * \\@howToUse `expression | json`\n * \\@description \n * \n * Converts value into string using `JSON.stringify`. Useful for debugging.\n * \n * ### Example\n * {\\@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n * \n * \\@stable\n */\nexport class JsonPipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: any): string { return JSON.stringify(value, null, 2); }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'json', pure: false}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction JsonPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nJsonPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJsonPipe.ctorParameters;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Generic selector that displays the string that matches the current value.\n * \\@howToUse `expression | i18nSelect:mapping`\n * \\@description \n * \n *  Where `mapping` is an object that indicates the text that should be displayed\n *  for different values of the provided `expression`.\n *  If none of the keys of the mapping match the value of the `expression`, then the content\n *  of the `other` key is returned when present, otherwise an empty string is returned.\n * \n *  ## Example\n * \n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n * \n *  \\@experimental\n */\nexport class I18nSelectPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} mapping\n * @return {?}\n */\ntransform(value: string|null|undefined, mapping: {[key: string]: string}): string {\n    if (value == null) return '';\n\n    if (typeof mapping !== 'object' || typeof value !== 'string') {\n      throw invalidPipeArgumentError(I18nSelectPipe, mapping);\n    }\n\n    if (mapping.hasOwnProperty(value)) {\n      return mapping[value];\n    }\n\n    if (mapping.hasOwnProperty('other')) {\n      return mapping['other'];\n    }\n\n    return '';\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'i18nSelect', pure: true}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction I18nSelectPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nI18nSelectPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nI18nSelectPipe.ctorParameters;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\n\nimport {NgLocalization, getPluralCategory} from '../i18n/localization';\n\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\nconst /** @type {?} */ _INTERPOLATION_REGEXP: RegExp = /#/g;\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Maps a value to a string that pluralizes the value according to locale rules.\n * \\@howToUse `expression | i18nPlural:mapping[:locale]`\n * \\@description \n * \n *  Where:\n *  - `expression` is a number.\n *  - `mapping` is an object that mimics the ICU format, see\n *    http://userguide.icu-project.org/formatparse/messages\n *  - `locale` is a `string` defining the locale to use (uses the current {\\@link LOCALE_ID} by\n * default)\n * \n *  ## Example\n * \n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n * \n * \\@experimental\n */\nexport class I18nPluralPipe implements PipeTransform {\n/**\n * @param {?} _localization\n */\nconstructor(private _localization: NgLocalization) {}\n/**\n * @param {?} value\n * @param {?} pluralMap\n * @param {?=} locale\n * @return {?}\n */\ntransform(value: number, pluralMap: {[count: string]: string}, locale?: string): string {\n    if (value == null) return '';\n\n    if (typeof pluralMap !== 'object' || pluralMap === null) {\n      throw invalidPipeArgumentError(I18nPluralPipe, pluralMap);\n    }\n\n    const /** @type {?} */ key = getPluralCategory(value, Object.keys(pluralMap), this._localization, locale);\n\n    return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'i18nPlural', pure: true}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: NgLocalization, },\n];\n}\n\nfunction I18nPluralPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nI18nPluralPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nI18nPluralPipe.ctorParameters;\n/** @type {?} */\nI18nPluralPipe.prototype._localization;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * Transforms text to lowercase.\n * \n * {\\@example  common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe' }\n * \n * \\@stable\n */\nexport class LowerCasePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: string): string {\n    if (!value) return value;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(LowerCasePipe, value);\n    }\n    return value.toLowerCase();\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'lowercase'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction LowerCasePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nLowerCasePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLowerCasePipe.ctorParameters;\n}\n\n/**\n * Helper method to transform a single word to titlecase.\n * \n * \\@stable\n * @param {?} word\n * @return {?}\n */\nfunction titleCaseWord(word: string) {\n  if (!word) return word;\n  return word[0].toUpperCase() + word.substr(1).toLowerCase();\n}\n/**\n * Transforms text to titlecase.\n * \n * \\@stable\n */\nexport class TitleCasePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: string): string {\n    if (!value) return value;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(TitleCasePipe, value);\n    }\n\n    return value.split(/\\b/g).map(word => titleCaseWord(word)).join('');\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'titlecase'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction TitleCasePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nTitleCasePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTitleCasePipe.ctorParameters;\n}\n\n/**\n * Transforms text to uppercase.\n * \n * \\@stable\n */\nexport class UpperCasePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: string): string {\n    if (!value) return value;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(UpperCasePipe, value);\n    }\n    return value.toUpperCase();\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'uppercase'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction UpperCasePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nUpperCasePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUpperCasePipe.ctorParameters;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, EventEmitter, OnDestroy, Pipe, PipeTransform, WrappedValue, ɵisObservable, ɵisPromise} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {ISubscription} from 'rxjs/Subscription';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * @record\n */\nfunction SubscriptionStrategy() {}\n\n\nfunction SubscriptionStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nSubscriptionStrategy.prototype.createSubscription;\n/** @type {?} */\nSubscriptionStrategy.prototype.dispose;\n/** @type {?} */\nSubscriptionStrategy.prototype.onDestroy;\n}\n\n\ninterface SubscriptionStrategy {\n  createSubscription(async: Observable<any>|Promise<any>, updateLatestValue: any): ISubscription\n      |Promise<any>;\n  dispose(subscription: ISubscription|Promise<any>): void;\n  onDestroy(subscription: ISubscription|Promise<any>): void;\n}\nclass ObservableStrategy implements SubscriptionStrategy {\n/**\n * @param {?} async\n * @param {?} updateLatestValue\n * @return {?}\n */\ncreateSubscription(async: Observable<any>, updateLatestValue: any): ISubscription {\n    return async.subscribe({next: updateLatestValue, error: (e: any) => { throw e; }});\n  }\n/**\n * @param {?} subscription\n * @return {?}\n */\ndispose(subscription: ISubscription): void { subscription.unsubscribe(); }\n/**\n * @param {?} subscription\n * @return {?}\n */\nonDestroy(subscription: ISubscription): void { subscription.unsubscribe(); }\n}\nclass PromiseStrategy implements SubscriptionStrategy {\n/**\n * @param {?} async\n * @param {?} updateLatestValue\n * @return {?}\n */\ncreateSubscription(async: Promise<any>, updateLatestValue: (v: any) => any): Promise<any> {\n    return async.then(updateLatestValue, e => { throw e; });\n  }\n/**\n * @param {?} subscription\n * @return {?}\n */\ndispose(subscription: Promise<any>): void {}\n/**\n * @param {?} subscription\n * @return {?}\n */\nonDestroy(subscription: Promise<any>): void {}\n}\n\nconst /** @type {?} */ _promiseStrategy = new PromiseStrategy();\nconst /** @type {?} */ _observableStrategy = new ObservableStrategy();\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Unwraps a value from an asynchronous primitive.\n * \\@howToUse `observable_or_promise_expression | async`\n * \\@description \n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n * potential memory leaks.\n * \n * \n * ## Examples\n * \n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n * promise.\n * \n * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n * \n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n * to the view. The Observable continuously updates the view with the current time.\n * \n * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n * \n * \\@stable\n */\nexport class AsyncPipe implements OnDestroy, PipeTransform {\nprivate _latestValue: any = null;\nprivate _latestReturnedValue: any = null;\nprivate _subscription: ISubscription|Promise<any>|null = null;\nprivate _obj: Observable<any>|Promise<any>|EventEmitter<any>|null = null;\nprivate _strategy: SubscriptionStrategy = /** @type {?} */(( null));\n/**\n * @param {?} _ref\n */\nconstructor(private _ref: ChangeDetectorRef) {}\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this._subscription) {\n      this._dispose();\n    }\n  }\n\n  transform<T>(obj: null): null;\n  transform<T>(obj: undefined): undefined;\n  transform<T>(obj: Observable<T>): T|null;\n  transform<T>(obj: Promise<T>): T|null;\n/**\n * @param {?} obj\n * @return {?}\n */\ntransform(obj: Observable<any>|Promise<any>|null|undefined): any {\n    if (!this._obj) {\n      if (obj) {\n        this._subscribe(obj);\n      }\n      this._latestReturnedValue = this._latestValue;\n      return this._latestValue;\n    }\n\n    if (obj !== this._obj) {\n      this._dispose();\n      return this.transform( /** @type {?} */((obj as any)));\n    }\n\n    if (this._latestValue === this._latestReturnedValue) {\n      return this._latestReturnedValue;\n    }\n\n    this._latestReturnedValue = this._latestValue;\n    return WrappedValue.wrap(this._latestValue);\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\n\nprivate _subscribe(obj: Observable<any>|Promise<any>|EventEmitter<any>): void {\n    this._obj = obj;\n    this._strategy = this._selectStrategy(obj);\n    this._subscription = this._strategy.createSubscription(\n        obj, (value: Object) => this._updateLatestValue(obj, value));\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\n\nprivate _selectStrategy(obj: Observable<any>|Promise<any>|EventEmitter<any>): any {\n    if (ɵisPromise(obj)) {\n      return _promiseStrategy;\n    }\n\n    if (ɵisObservable(obj)) {\n      return _observableStrategy;\n    }\n\n    throw invalidPipeArgumentError(AsyncPipe, obj);\n  }\n/**\n * @return {?}\n */\n\nprivate _dispose(): void {\n    this._strategy.dispose( /** @type {?} */((this._subscription)));\n    this._latestValue = null;\n    this._latestReturnedValue = null;\n    this._subscription = null;\n    this._obj = null;\n  }\n/**\n * @param {?} async\n * @param {?} value\n * @return {?}\n */\n\nprivate _updateLatestValue(async: any, value: Object): void {\n    if (async === this._obj) {\n      this._latestValue = value;\n      this._ref.markForCheck();\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'async', pure: false}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction AsyncPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nAsyncPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAsyncPipe.ctorParameters;\n/** @type {?} */\nAsyncPipe.prototype._latestValue;\n/** @type {?} */\nAsyncPipe.prototype._latestReturnedValue;\n/** @type {?} */\nAsyncPipe.prototype._subscription;\n/** @type {?} */\nAsyncPipe.prototype._obj;\n/** @type {?} */\nAsyncPipe.prototype._strategy;\n/** @type {?} */\nAsyncPipe.prototype._ref;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Provider} from '@angular/core';\nimport {DeprecatedDatePipe} from './date_pipe';\nimport {DeprecatedCurrencyPipe, DeprecatedDecimalPipe, DeprecatedPercentPipe} from './number_pipe';\n\nexport {\n  DeprecatedCurrencyPipe,\n  DeprecatedDatePipe,\n  DeprecatedDecimalPipe,\n  DeprecatedPercentPipe,\n};\n/**\n * A collection of deprecated i18n pipes that require intl api\n * \n * @deprecated\n */\nexport const /** @type {?} */ COMMON_DEPRECATED_I18N_PIPES: Provider[] =\n    [DeprecatedDecimalPipe, DeprecatedPercentPipe, DeprecatedCurrencyPipe, DeprecatedDatePipe];\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, LOCALE_ID, Pipe, PipeTransform, Type} from '@angular/core';\nimport {NUMBER_FORMAT_REGEXP, parseIntAutoRadix} from '../../i18n/format_number';\nimport {NumberFormatStyle} from '../../i18n/locale_data_api';\nimport {invalidPipeArgumentError} from '../invalid_pipe_argument_error';\nimport {NumberFormatter} from './intl';\n/**\n * @param {?} pipe\n * @param {?} locale\n * @param {?} value\n * @param {?} style\n * @param {?=} digits\n * @param {?=} currency\n * @param {?=} currencyAsSymbol\n * @return {?}\n */\nfunction formatNumber(\n    pipe: Type<any>, locale: string, value: number | string, style: NumberFormatStyle,\n    digits?: string | null, currency: string | null = null,\n    currencyAsSymbol: boolean = false): string|null {\n  if (value == null) return null;\n\n  // Convert strings to numbers\n  value = typeof value === 'string' && !isNaN(+value - parseFloat(value)) ? +value : value;\n  if (typeof value !== 'number') {\n    throw invalidPipeArgumentError(pipe, value);\n  }\n\n  let /** @type {?} */ minInt: number|undefined;\n  let /** @type {?} */ minFraction: number|undefined;\n  let /** @type {?} */ maxFraction: number|undefined;\n  if (style !== NumberFormatStyle.Currency) {\n    // rely on Intl default for currency\n    minInt = 1;\n    minFraction = 0;\n    maxFraction = 3;\n  }\n\n  if (digits) {\n    const /** @type {?} */ parts = digits.match(NUMBER_FORMAT_REGEXP);\n    if (parts === null) {\n      throw new Error(`${digits} is not a valid digit info for number pipes`);\n    }\n    if (parts[1] != null) {  // min integer digits\n      minInt = parseIntAutoRadix(parts[1]);\n    }\n    if (parts[3] != null) {  // min fraction digits\n      minFraction = parseIntAutoRadix(parts[3]);\n    }\n    if (parts[5] != null) {  // max fraction digits\n      maxFraction = parseIntAutoRadix(parts[5]);\n    }\n  }\n\n  return NumberFormatter.format( /** @type {?} */((value as number)), locale, style, {\n    minimumIntegerDigits: minInt,\n    minimumFractionDigits: minFraction,\n    maximumFractionDigits: maxFraction,\n    currency: currency,\n    currencyAsSymbol: currencyAsSymbol,\n  });\n}\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number according to locale rules.\n * \\@howToUse `number_expression | number[:digitInfo]`\n * \n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the active locale.\n * \n * where `expression` is a number:\n *  - `digitInfo` is a `string` which has a following format: <br>\n *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n * \n * For more information on the acceptable range for each of these numbers and other\n * details see your native internationalization library.\n * \n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n * \n * ### Example\n * \n * {\\@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n * \n * \\@stable\n */\nexport class DeprecatedDecimalPipe implements PipeTransform {\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} digits\n * @return {?}\n */\ntransform(value: any, digits?: string): string|null {\n    return formatNumber(\n        DeprecatedDecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'number'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction DeprecatedDecimalPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDeprecatedDecimalPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDeprecatedDecimalPipe.ctorParameters;\n/** @type {?} */\nDeprecatedDecimalPipe.prototype._locale;\n}\n\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number as a percentage according to locale rules.\n * \\@howToUse `number_expression | percent[:digitInfo]`\n * \n * \\@description \n * \n * Formats a number as percentage.\n * \n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n * \n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n * \n * ### Example\n * \n * {\\@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n * \n * \\@stable\n */\nexport class DeprecatedPercentPipe implements PipeTransform {\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} digits\n * @return {?}\n */\ntransform(value: any, digits?: string): string|null {\n    return formatNumber(\n        DeprecatedPercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'percent'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction DeprecatedPercentPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDeprecatedPercentPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDeprecatedPercentPipe.ctorParameters;\n/** @type {?} */\nDeprecatedPercentPipe.prototype._locale;\n}\n\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number as currency using locale rules.\n * \\@howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`\n * \\@description \n * \n * Use `currency` to format a number as currency.\n * \n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n *   - `true`: use symbol (e.g. `$`).\n *   - `false`(default): use code (e.g. `USD`).\n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n * \n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n * \n * ### Example\n * \n * {\\@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n * \n * \\@stable\n */\nexport class DeprecatedCurrencyPipe implements PipeTransform {\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} currencyCode\n * @param {?=} symbolDisplay\n * @param {?=} digits\n * @return {?}\n */\ntransform(\n      value: any, currencyCode: string = 'USD', symbolDisplay: boolean = false,\n      digits?: string): string|null {\n    return formatNumber(\n        DeprecatedCurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits,\n        currencyCode, symbolDisplay);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'currency'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction DeprecatedCurrencyPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDeprecatedCurrencyPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDeprecatedCurrencyPipe.ctorParameters;\n/** @type {?} */\nDeprecatedCurrencyPipe.prototype._locale;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NumberFormatStyle, NumberSymbol, getLocaleNumberFormat, getLocaleNumberSymbol} from './locale_data_api';\n\nexport const /** @type {?} */ NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\nconst /** @type {?} */ MAX_DIGITS = 22;\nconst /** @type {?} */ DECIMAL_SEP = '.';\nconst /** @type {?} */ ZERO_CHAR = '0';\nconst /** @type {?} */ PATTERN_SEP = ';';\nconst /** @type {?} */ GROUP_SEP = ',';\nconst /** @type {?} */ DIGIT_CHAR = '#';\nconst /** @type {?} */ CURRENCY_CHAR = '¤';\nconst /** @type {?} */ PERCENT_CHAR = '%';\n\n/** @internal */\nexport type FormatNumberRes = {\n  str: string | null,\n  error?: string\n};\n/**\n * Transform a number to a locale string based on a style and a format\n * \n * \\@internal\n * @param {?} value\n * @param {?} locale\n * @param {?} style\n * @param {?=} digitsInfo\n * @param {?=} currency\n * @return {?}\n */\nexport function formatNumber(\n    value: number | string, locale: string, style: NumberFormatStyle, digitsInfo?: string | null,\n    currency: string | null = null): FormatNumberRes {\n  const /** @type {?} */ res: FormatNumberRes = {str: null};\n  const /** @type {?} */ format = getLocaleNumberFormat(locale, style);\n  let /** @type {?} */ num;\n\n  // Convert strings to numbers\n  if (typeof value === 'string' && !isNaN(+value - parseFloat(value))) {\n    num = +value;\n  } else if (typeof value !== 'number') {\n    res.error = `${value} is not a number`;\n    return res;\n  } else {\n    num = value;\n  }\n\n  if (style === NumberFormatStyle.Percent) {\n    num = num * 100;\n  }\n\n  const /** @type {?} */ numStr = Math.abs(num) + '';\n  const /** @type {?} */ pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n  let /** @type {?} */ formattedText = '';\n  let /** @type {?} */ isZero = false;\n\n  if (!isFinite(num)) {\n    formattedText = getLocaleNumberSymbol(locale, NumberSymbol.Infinity);\n  } else {\n    const /** @type {?} */ parsedNumber = parseNumber(numStr);\n\n    let /** @type {?} */ minInt = pattern.minInt;\n    let /** @type {?} */ minFraction = pattern.minFrac;\n    let /** @type {?} */ maxFraction = pattern.maxFrac;\n\n    if (digitsInfo) {\n      const /** @type {?} */ parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);\n      if (parts === null) {\n        res.error = `${digitsInfo} is not a valid digit info`;\n        return res;\n      }\n      const /** @type {?} */ minIntPart = parts[1];\n      const /** @type {?} */ minFractionPart = parts[3];\n      const /** @type {?} */ maxFractionPart = parts[5];\n      if (minIntPart != null) {\n        minInt = parseIntAutoRadix(minIntPart);\n      }\n      if (minFractionPart != null) {\n        minFraction = parseIntAutoRadix(minFractionPart);\n      }\n      if (maxFractionPart != null) {\n        maxFraction = parseIntAutoRadix(maxFractionPart);\n      } else if (minFractionPart != null && minFraction > maxFraction) {\n        maxFraction = minFraction;\n      }\n    }\n\n    roundNumber(parsedNumber, minFraction, maxFraction);\n\n    let /** @type {?} */ digits = parsedNumber.digits;\n    let /** @type {?} */ integerLen = parsedNumber.integerLen;\n    const /** @type {?} */ exponent = parsedNumber.exponent;\n    let /** @type {?} */ decimals = [];\n    isZero = digits.every(d => !d);\n\n    // pad zeros for small numbers\n    for (; integerLen < minInt; integerLen++) {\n      digits.unshift(0);\n    }\n\n    // pad zeros for small numbers\n    for (; integerLen < 0; integerLen++) {\n      digits.unshift(0);\n    }\n\n    // extract decimals digits\n    if (integerLen > 0) {\n      decimals = digits.splice(integerLen, digits.length);\n    } else {\n      decimals = digits;\n      digits = [0];\n    }\n\n    // format the integer digits with grouping separators\n    const /** @type {?} */ groups = [];\n    if (digits.length >= pattern.lgSize) {\n      groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));\n    }\n\n    while (digits.length > pattern.gSize) {\n      groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));\n    }\n\n    if (digits.length) {\n      groups.unshift(digits.join(''));\n    }\n\n    const /** @type {?} */ groupSymbol = currency ? NumberSymbol.CurrencyGroup : NumberSymbol.Group;\n    formattedText = groups.join(getLocaleNumberSymbol(locale, groupSymbol));\n\n    // append the decimal digits\n    if (decimals.length) {\n      const /** @type {?} */ decimalSymbol = currency ? NumberSymbol.CurrencyDecimal : NumberSymbol.Decimal;\n      formattedText += getLocaleNumberSymbol(locale, decimalSymbol) + decimals.join('');\n    }\n\n    if (exponent) {\n      formattedText += getLocaleNumberSymbol(locale, NumberSymbol.Exponential) + '+' + exponent;\n    }\n  }\n\n  if (num < 0 && !isZero) {\n    formattedText = pattern.negPre + formattedText + pattern.negSuf;\n  } else {\n    formattedText = pattern.posPre + formattedText + pattern.posSuf;\n  }\n\n  if (style === NumberFormatStyle.Currency && currency !== null) {\n    res.str = formattedText\n                  .replace(CURRENCY_CHAR, currency)\n                  // if we have 2 time the currency character, the second one is ignored\n                  .replace(CURRENCY_CHAR, '');\n    return res;\n  }\n\n  if (style === NumberFormatStyle.Percent) {\n    res.str = formattedText.replace(\n        new RegExp(PERCENT_CHAR, 'g'), getLocaleNumberSymbol(locale, NumberSymbol.PercentSign));\n    return res;\n  }\n\n  res.str = formattedText;\n  return res;\n}\n/**\n * @record\n */\nfunction ParsedNumberFormat() {}\n\n\nfunction ParsedNumberFormat_tsickle_Closure_declarations() {\n/** @type {?} */\nParsedNumberFormat.prototype.minInt;\n/** @type {?} */\nParsedNumberFormat.prototype.minFrac;\n/** @type {?} */\nParsedNumberFormat.prototype.maxFrac;\n/** @type {?} */\nParsedNumberFormat.prototype.posPre;\n/** @type {?} */\nParsedNumberFormat.prototype.posSuf;\n/** @type {?} */\nParsedNumberFormat.prototype.negPre;\n/** @type {?} */\nParsedNumberFormat.prototype.negSuf;\n/** @type {?} */\nParsedNumberFormat.prototype.gSize;\n/** @type {?} */\nParsedNumberFormat.prototype.lgSize;\n}\n\n\ninterface ParsedNumberFormat {\n  minInt: number;\n  // the minimum number of digits required in the fraction part of the number\n  minFrac: number;\n  // the maximum number of digits required in the fraction part of the number\n  maxFrac: number;\n  // the prefix for a positive number\n  posPre: string;\n  // the suffix for a positive number\n  posSuf: string;\n  // the prefix for a negative number (e.g. `-` or `(`))\n  negPre: string;\n  // the suffix for a negative number (e.g. `)`)\n  negSuf: string;\n  // number of digits in each group of separated digits\n  gSize: number;\n  // number of digits in the last group of digits before the decimal separator\n  lgSize: number;\n}\n/**\n * @param {?} format\n * @param {?=} minusSign\n * @return {?}\n */\nfunction parseNumberFormat(format: string, minusSign = '-'): ParsedNumberFormat {\n  const /** @type {?} */ p = {\n    minInt: 1,\n    minFrac: 0,\n    maxFrac: 0,\n    posPre: '',\n    posSuf: '',\n    negPre: '',\n    negSuf: '',\n    gSize: 0,\n    lgSize: 0\n  };\n\n  const /** @type {?} */ patternParts = format.split(PATTERN_SEP);\n  const /** @type {?} */ positive = patternParts[0];\n  const /** @type {?} */ negative = patternParts[1];\n\n  const /** @type {?} */ positiveParts = positive.indexOf(DECIMAL_SEP) !== -1 ?\n      positive.split(DECIMAL_SEP) :\n      [\n        positive.substring(0, positive.lastIndexOf(ZERO_CHAR) + 1),\n        positive.substring(positive.lastIndexOf(ZERO_CHAR) + 1)\n      ], /** @type {?} */\n        integer = positiveParts[0], /** @type {?} */ fraction = positiveParts[1] || '';\n\n  p.posPre = integer.substr(0, integer.indexOf(DIGIT_CHAR));\n\n  for (let /** @type {?} */ i = 0; i < fraction.length; i++) {\n    const /** @type {?} */ ch = fraction.charAt(i);\n    if (ch === ZERO_CHAR) {\n      p.minFrac = p.maxFrac = i + 1;\n    } else if (ch === DIGIT_CHAR) {\n      p.maxFrac = i + 1;\n    } else {\n      p.posSuf += ch;\n    }\n  }\n\n  const /** @type {?} */ groups = integer.split(GROUP_SEP);\n  p.gSize = groups[1] ? groups[1].length : 0;\n  p.lgSize = (groups[2] || groups[1]) ? (groups[2] || groups[1]).length : 0;\n\n  if (negative) {\n    const /** @type {?} */ trunkLen = positive.length - p.posPre.length - p.posSuf.length, /** @type {?} */\n          pos = negative.indexOf(DIGIT_CHAR);\n\n    p.negPre = negative.substr(0, pos).replace(/'/g, '');\n    p.negSuf = negative.substr(pos + trunkLen).replace(/'/g, '');\n  } else {\n    p.negPre = minusSign + p.posPre;\n    p.negSuf = p.posSuf;\n  }\n\n  return p;\n}\n/**\n * @record\n */\nfunction ParsedNumber() {}\n\n\nfunction ParsedNumber_tsickle_Closure_declarations() {\n/** @type {?} */\nParsedNumber.prototype.digits;\n/** @type {?} */\nParsedNumber.prototype.exponent;\n/** @type {?} */\nParsedNumber.prototype.integerLen;\n}\n\n\ninterface ParsedNumber {\n  // an array of digits containing leading zeros as necessary\n  digits: number[];\n  // the exponent for numbers that would need more than `MAX_DIGITS` digits in `d`\n  exponent: number;\n  // the number of the digits in `d` that are to the left of the decimal point\n  integerLen: number;\n}\n/**\n * Parse a number (as a string)\n * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/\n * @param {?} numStr\n * @return {?}\n */\nfunction parseNumber(numStr: string): ParsedNumber {\n  let /** @type {?} */ exponent = 0, /** @type {?} */ digits, /** @type {?} */ integerLen;\n  let /** @type {?} */ i, /** @type {?} */ j, /** @type {?} */ zeros;\n\n  // Decimal point?\n  if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {\n    numStr = numStr.replace(DECIMAL_SEP, '');\n  }\n\n  // Exponential form?\n  if ((i = numStr.search(/e/i)) > 0) {\n    // Work out the exponent.\n    if (integerLen < 0) integerLen = i;\n    integerLen += +numStr.slice(i + 1);\n    numStr = numStr.substring(0, i);\n  } else if (integerLen < 0) {\n    // There was no decimal point or exponent so it is an integer.\n    integerLen = numStr.length;\n  }\n\n  // Count the number of leading zeros.\n  for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) { /* empty */\n  }\n\n  if (i === (zeros = numStr.length)) {\n    // The digits are all zero.\n    digits = [0];\n    integerLen = 1;\n  } else {\n    // Count the number of trailing zeros\n    zeros--;\n    while (numStr.charAt(zeros) === ZERO_CHAR) zeros--;\n\n    // Trailing zeros are insignificant so ignore them\n    integerLen -= i;\n    digits = [];\n    // Convert string to array of digits without leading/trailing zeros.\n    for (j = 0; i <= zeros; i++, j++) {\n      digits[j] = +numStr.charAt(i);\n    }\n  }\n\n  // If the number overflows the maximum allowed digits then use an exponent.\n  if (integerLen > MAX_DIGITS) {\n    digits = digits.splice(0, MAX_DIGITS - 1);\n    exponent = integerLen - 1;\n    integerLen = 1;\n  }\n\n  return {digits, exponent, integerLen};\n}\n/**\n * Round the parsed number to the specified number of decimal places\n * This function changes the parsedNumber in-place\n * @param {?} parsedNumber\n * @param {?} minFrac\n * @param {?} maxFrac\n * @return {?}\n */\nfunction roundNumber(parsedNumber: ParsedNumber, minFrac: number, maxFrac: number) {\n  if (minFrac > maxFrac) {\n    throw new Error(\n        `The minimum number of digits after fraction (${minFrac}) is higher than the maximum (${maxFrac}).`);\n  }\n\n  let /** @type {?} */ digits = parsedNumber.digits;\n  let /** @type {?} */ fractionLen = digits.length - parsedNumber.integerLen;\n  const /** @type {?} */ fractionSize = Math.min(Math.max(minFrac, fractionLen), maxFrac);\n\n  // The index of the digit to where rounding is to occur\n  let /** @type {?} */ roundAt = fractionSize + parsedNumber.integerLen;\n  let /** @type {?} */ digit = digits[roundAt];\n\n  if (roundAt > 0) {\n    // Drop fractional digits beyond `roundAt`\n    digits.splice(Math.max(parsedNumber.integerLen, roundAt));\n\n    // Set non-fractional digits beyond `roundAt` to 0\n    for (let /** @type {?} */ j = roundAt; j < digits.length; j++) {\n      digits[j] = 0;\n    }\n  } else {\n    // We rounded to zero so reset the parsedNumber\n    fractionLen = Math.max(0, fractionLen);\n    parsedNumber.integerLen = 1;\n    digits.length = Math.max(1, roundAt = fractionSize + 1);\n    digits[0] = 0;\n    for (let /** @type {?} */ i = 1; i < roundAt; i++) digits[i] = 0;\n  }\n\n  if (digit >= 5) {\n    if (roundAt - 1 < 0) {\n      for (let /** @type {?} */ k = 0; k > roundAt; k--) {\n        digits.unshift(0);\n        parsedNumber.integerLen++;\n      }\n      digits.unshift(1);\n      parsedNumber.integerLen++;\n    } else {\n      digits[roundAt - 1]++;\n    }\n  }\n\n  // Pad out with zeros to get the required fraction length\n  for (; fractionLen < Math.max(0, fractionSize); fractionLen++) digits.push(0);\n\n\n  // Do any carrying, e.g. a digit was rounded up to 10\n  const /** @type {?} */ carry = digits.reduceRight(function(carry, d, i, digits) {\n    d = d + carry;\n    digits[i] = d % 10;\n    return Math.floor(d / 10);\n  }, 0);\n  if (carry) {\n    digits.unshift(carry);\n    parsedNumber.integerLen++;\n  }\n}\n/**\n * \\@internal\n * @param {?} text\n * @return {?}\n */\nexport function parseIntAutoRadix(text: string): number {\n  const /** @type {?} */ result: number = parseInt(text);\n  if (isNaN(result)) {\n    throw new Error('Invalid integer literal when parsing ' + text);\n  }\n  return result;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n  */\n\nimport {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\nimport {ISO8601_DATE_REGEX, isoStringToDate} from '../date_pipe';\nimport {invalidPipeArgumentError} from '../invalid_pipe_argument_error';\nimport {DateFormatter} from './intl';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a date according to locale rules.\n * \\@howToUse `date_expression | date[:format]`\n * \\@description \n * \n * Where:\n * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n * (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. The format can be predefined as\n *   shown below or custom as shown in the table.\n *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n * \n * \n *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n * \n * In javascript, only the components specified will be respected (not the ordering,\n * punctuations, ...) and details of the formatting will be dependent on the locale.\n * \n * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n * \n * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n * applied and the formatted text will have the same day, month and year of the expression.\n * \n * WARNINGS:\n * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n *   Instead users should treat the date as an immutable object and change the reference when the\n *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n *   which would be an expensive operation).\n * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n *   browsers.\n * \n * ### Examples\n * \n * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n * in the _local_ time and locale is 'en-US':\n * \n * ```\n *     {{ dateObj | date }}               // output is 'Jun 15, 2015'\n *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n *     {{ dateObj | date:'mmss' }}        // output is '43:11'\n * ```\n * \n * {\\@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n * \n * \\@stable\n */\nexport class DeprecatedDatePipe implements PipeTransform {\n/**\n * \\@internal\n */\nstatic _ALIASES: {[key: string]: string} = {\n    'medium': 'yMMMdjms',\n    'short': 'yMdjm',\n    'fullDate': 'yMMMMEEEEd',\n    'longDate': 'yMMMMd',\n    'mediumDate': 'yMMMd',\n    'shortDate': 'yMd',\n    'mediumTime': 'jms',\n    'shortTime': 'jm'\n  };\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} pattern\n * @return {?}\n */\ntransform(value: any, pattern: string = 'mediumDate'): string|null {\n    if (value == null || value === '' || value !== value) return null;\n\n    let /** @type {?} */ date: Date;\n\n    if (typeof value === 'string') {\n      value = value.trim();\n    }\n\n    if (isDate(value)) {\n      date = value;\n    } else if (!isNaN(value - parseFloat(value))) {\n      date = new Date(parseFloat(value));\n    } else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n/**\n * For ISO Strings without time the day, month and year must be extracted from the ISO String\n * before Date creation to avoid time offset and errors in the new Date.\n * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n * date, some browsers (e.g. IE 9) will throw an invalid Date error\n * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the\n * timeoffset\n * is applied\n * Note: ISO months are 0 for January, 1 for February, ...\n */\nconst [y, m, d] = value.split('-').map((val: string) => parseInt(val, 10));\n      date = new Date(y, m - 1, d);\n    } else {\n      date = new Date(value);\n    }\n\n    if (!isDate(date)) {\n      let /** @type {?} */ match: RegExpMatchArray|null;\n      if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n        date = isoStringToDate(match);\n      } else {\n        throw invalidPipeArgumentError(DeprecatedDatePipe, value);\n      }\n    }\n\n    return DateFormatter.format(\n        date, this._locale, DeprecatedDatePipe._ALIASES[pattern] || pattern);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'date', pure: true}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction DeprecatedDatePipe_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nDeprecatedDatePipe._ALIASES;\n/** @type {?} */\nDeprecatedDatePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDeprecatedDatePipe.ctorParameters;\n/** @type {?} */\nDeprecatedDatePipe.prototype._locale;\n}\n\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value.valueOf());\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NumberFormatStyle} from '../../i18n/locale_data_api';\nexport class NumberFormatter {\n/**\n * @param {?} num\n * @param {?} locale\n * @param {?} style\n * @param {?=} opts\n * @return {?}\n */\nstatic format(num: number, locale: string, style: NumberFormatStyle, opts: {\n    minimumIntegerDigits?: number,\n    minimumFractionDigits?: number,\n    maximumFractionDigits?: number,\n    currency?: string|null,\n    currencyAsSymbol?: boolean\n  } = {}): string {\n    const {minimumIntegerDigits, minimumFractionDigits, maximumFractionDigits, currency,\n           currencyAsSymbol = false} = opts;\n    const /** @type {?} */ options: Intl.NumberFormatOptions = {\n      minimumIntegerDigits,\n      minimumFractionDigits,\n      maximumFractionDigits,\n      style: NumberFormatStyle[style].toLowerCase()\n    };\n\n    if (style == NumberFormatStyle.Currency) {\n      options.currency = typeof currency == 'string' ? currency : undefined;\n      options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n    }\n    return new Intl.NumberFormat(locale, options).format(num);\n  }\n}\n\ntype DateFormatterFn = (date: Date, locale: string) => string;\n\nconst /** @type {?} */ DATE_FORMATS_SPLIT =\n    /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n\nconst /** @type {?} */ PATTERN_ALIASES: {[format: string]: DateFormatterFn} = {\n  // Keys are quoted so they do not get renamed during closure compilation.\n  'yMMMdjms': datePartGetterFactory(combine([\n    digitCondition('year', 1),\n    nameCondition('month', 3),\n    digitCondition('day', 1),\n    digitCondition('hour', 1),\n    digitCondition('minute', 1),\n    digitCondition('second', 1),\n  ])),\n  'yMdjm': datePartGetterFactory(combine([\n    digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n    digitCondition('hour', 1), digitCondition('minute', 1)\n  ])),\n  'yMMMMEEEEd': datePartGetterFactory(combine([\n    digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n    digitCondition('day', 1)\n  ])),\n  'yMMMMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n  'yMMMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n  'yMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n  'jms': datePartGetterFactory(combine(\n      [digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n  'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n};\n\nconst /** @type {?} */ DATE_FORMATS: {[format: string]: DateFormatterFn} = {\n  // Keys are quoted so they do not get renamed.\n  'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n  'yy': datePartGetterFactory(digitCondition('year', 2)),\n  'y': datePartGetterFactory(digitCondition('year', 1)),\n  'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n  'MMM': datePartGetterFactory(nameCondition('month', 3)),\n  'MM': datePartGetterFactory(digitCondition('month', 2)),\n  'M': datePartGetterFactory(digitCondition('month', 1)),\n  'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n  'L': datePartGetterFactory(nameCondition('month', 1)),\n  'dd': datePartGetterFactory(digitCondition('day', 2)),\n  'd': datePartGetterFactory(digitCondition('day', 1)),\n  'HH': digitModifier(\n      hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n  'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n  'hh': digitModifier(\n      hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n  'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n  'jj': datePartGetterFactory(digitCondition('hour', 2)),\n  'j': datePartGetterFactory(digitCondition('hour', 1)),\n  'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n  'm': datePartGetterFactory(digitCondition('minute', 1)),\n  'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n  's': datePartGetterFactory(digitCondition('second', 1)),\n  // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n  // we can be just safely rely on using `sss` since we currently don't support single or two digit\n  // fractions\n  'sss': datePartGetterFactory(digitCondition('second', 3)),\n  'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n  'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n  'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n  'E': datePartGetterFactory(nameCondition('weekday', 1)),\n  'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n  'Z': timeZoneGetter('short'),\n  'z': timeZoneGetter('long'),\n  'ww': datePartGetterFactory({}),  // Week of year, padded (00-53). Week 01 is the week with the\n                                    // first Thursday of the year. not support ?\n  'w':\n      datePartGetterFactory({}),  // Week of year (0-53). Week 1 is the week with the first Thursday\n                                  // of the year not support ?\n  'G': datePartGetterFactory(nameCondition('era', 1)),\n  'GG': datePartGetterFactory(nameCondition('era', 2)),\n  'GGG': datePartGetterFactory(nameCondition('era', 3)),\n  'GGGG': datePartGetterFactory(nameCondition('era', 4))\n};\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction digitModifier(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string {\n    const /** @type {?} */ result = inner(date, locale);\n    return result.length == 1 ? '0' + result : result;\n  };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourClockExtractor(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string { return inner(date, locale).split(' ')[1]; };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourExtractor(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string { return inner(date, locale).split(' ')[0]; };\n}\n/**\n * @param {?} date\n * @param {?} locale\n * @param {?} options\n * @return {?}\n */\nfunction intlDateFormat(date: Date, locale: string, options: Intl.DateTimeFormatOptions): string {\n  return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n}\n/**\n * @param {?} timezone\n * @return {?}\n */\nfunction timeZoneGetter(timezone: string): DateFormatterFn {\n  // To workaround `Intl` API restriction for single timezone let format with 24 hours\n  const /** @type {?} */ options = {hour: '2-digit', hour12: false, timeZoneName: timezone};\n  return function(date: Date, locale: string): string {\n    const /** @type {?} */ result = intlDateFormat(date, locale, options);\n    // Then extract first 3 letters that related to hours\n    return result ? result.substring(3) : '';\n  };\n}\n/**\n * @param {?} options\n * @param {?} value\n * @return {?}\n */\nfunction hour12Modify(\n    options: Intl.DateTimeFormatOptions, value: boolean): Intl.DateTimeFormatOptions {\n  options.hour12 = value;\n  return options;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction digitCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\n  const /** @type {?} */ result: {[k: string]: string} = {};\n  result[prop] = len === 2 ? '2-digit' : 'numeric';\n  return result;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction nameCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\n  const /** @type {?} */ result: {[k: string]: string} = {};\n  if (len < 4) {\n    result[prop] = len > 1 ? 'short' : 'narrow';\n  } else {\n    result[prop] = 'long';\n  }\n\n  return result;\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction combine(options: Intl.DateTimeFormatOptions[]): Intl.DateTimeFormatOptions {\n  return options.reduce((merged, opt) => ({...merged, ...opt}), {});\n}\n/**\n * @param {?} ret\n * @return {?}\n */\nfunction datePartGetterFactory(ret: Intl.DateTimeFormatOptions): DateFormatterFn {\n  return (date: Date, locale: string): string => intlDateFormat(date, locale, ret);\n}\n\nconst /** @type {?} */ DATE_FORMATTER_CACHE = new Map<string, string[]>();\n/**\n * @param {?} format\n * @param {?} date\n * @param {?} locale\n * @return {?}\n */\nfunction dateFormatter(format: string, date: Date, locale: string): string {\n  const /** @type {?} */ fn = PATTERN_ALIASES[format];\n\n  if (fn) return fn(date, locale);\n\n  const /** @type {?} */ cacheKey = format;\n  let /** @type {?} */ parts = DATE_FORMATTER_CACHE.get(cacheKey);\n\n  if (!parts) {\n    parts = [];\n    let /** @type {?} */ match: RegExpExecArray|null;\n    DATE_FORMATS_SPLIT.exec(format);\n\n    let /** @type {?} */ _format: string|null = format;\n    while (_format) {\n      match = DATE_FORMATS_SPLIT.exec(_format);\n      if (match) {\n        parts = parts.concat(match.slice(1));\n        _format = /** @type {?} */(( parts.pop()));\n      } else {\n        parts.push(_format);\n        _format = null;\n      }\n    }\n\n    DATE_FORMATTER_CACHE.set(cacheKey, parts);\n  }\n\n  return parts.reduce((text, part) => {\n    const /** @type {?} */ fn = DATE_FORMATS[part];\n    return text + (fn ? fn(date, locale) : partToTime(part));\n  }, '');\n}\n/**\n * @param {?} part\n * @return {?}\n */\nfunction partToTime(part: string): string {\n  return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n}\nexport class DateFormatter {\n/**\n * @param {?} date\n * @param {?} locale\n * @param {?} pattern\n * @return {?}\n */\nstatic format(date: Date, locale: string, pattern: string): string {\n    return dateFormatter(pattern, date, locale);\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\nimport {formatDate} from '../i18n/format_date';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\nexport const /** @type {?} */ ISO8601_DATE_REGEX =\n    /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\nexport class DatePipe implements PipeTransform {\n/**\n * @param {?} locale\n */\nconstructor(\nprivate locale: string) {}\n/**\n * @param {?} value\n * @param {?=} format\n * @param {?=} timezone\n * @param {?=} locale\n * @return {?}\n */\ntransform(value: any, format = 'mediumDate', timezone?: string, locale?: string): string|null {\n    if (value == null || value === '' || value !== value) return null;\n\n    if (typeof value === 'string') {\n      value = value.trim();\n    }\n\n    let /** @type {?} */ date: Date;\n    if (isDate(value)) {\n      date = value;\n    } else if (!isNaN(value - parseFloat(value))) {\n      date = new Date(parseFloat(value));\n    } else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n/**\n * For ISO Strings without time the day, month and year must be extracted from the ISO String\n * before Date creation to avoid time offset and errors in the new Date.\n * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n * date, some browsers (e.g. IE 9) will throw an invalid Date error\n * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n * is applied\n * Note: ISO months are 0 for January, 1 for February, ...\n */\nconst [y, m, d] = value.split('-').map((val: string) => +val);\n      date = new Date(y, m - 1, d);\n    } else {\n      date = new Date(value);\n    }\n\n    if (!isDate(date)) {\n      let /** @type {?} */ match: RegExpMatchArray|null;\n      if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n        date = isoStringToDate(match);\n      } else {\n        throw invalidPipeArgumentError(DatePipe, value);\n      }\n    }\n\n    return formatDate(date, format, locale || this.locale, timezone);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'date', pure: true}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction DatePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDatePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatePipe.ctorParameters;\n/** @type {?} */\nDatePipe.prototype.locale;\n}\n\n/**\n * \\@internal\n * @param {?} match\n * @return {?}\n */\nexport function isoStringToDate(match: RegExpMatchArray): Date {\n  const /** @type {?} */ date = new Date(0);\n  let /** @type {?} */ tzHour = 0;\n  let /** @type {?} */ tzMin = 0;\n  const /** @type {?} */ dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n  const /** @type {?} */ timeSetter = match[8] ? date.setUTCHours : date.setHours;\n\n  if (match[9]) {\n    tzHour = +(match[9] + match[10]);\n    tzMin = +(match[9] + match[11]);\n  }\n  dateSetter.call(date, +(match[1]), +(match[2]) - 1, +(match[3]));\n  const /** @type {?} */ h = +(match[4] || '0') - tzHour;\n  const /** @type {?} */ m = +(match[5] || '0') - tzMin;\n  const /** @type {?} */ s = +(match[6] || '0');\n  const /** @type {?} */ ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n  timeSetter.call(date, h, m, s, ms);\n  return date;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value.valueOf());\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type, ɵstringify as stringify} from '@angular/core';\n/**\n * @param {?} type\n * @param {?} value\n * @return {?}\n */\nexport function invalidPipeArgumentError(type: Type<any>, value: Object) {\n  return Error(`InvalidPipeArgument: '${value}' for pipe '${stringify(type)}'`);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FormStyle, FormatWidth, NumberSymbol, Time, TranslationWidth, getLocaleDateFormat, getLocaleDateTimeFormat, getLocaleDayNames, getLocaleDayPeriods, getLocaleEraNames, getLocaleExtraDayPeriodRules, getLocaleExtraDayPeriods, getLocaleId, getLocaleMonthNames, getLocaleNumberSymbol, getLocaleTimeFormat} from './locale_data_api';\n\nconst /** @type {?} */ NAMED_FORMATS: {[localeId: string]: {[format: string]: string}} = {};\nconst /** @type {?} */ DATE_FORMATS_SPLIT =\n    /((?:[^GyMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\\s\\S]*)/;\ntype ZoneWidth = number;\nlet ZoneWidth: any = {};\nZoneWidth.Short = 0;\nZoneWidth.ShortGMT = 1;\nZoneWidth.Long = 2;\nZoneWidth.Extended = 3;\nZoneWidth[ZoneWidth.Short] = \"Short\";\nZoneWidth[ZoneWidth.ShortGMT] = \"ShortGMT\";\nZoneWidth[ZoneWidth.Long] = \"Long\";\nZoneWidth[ZoneWidth.Extended] = \"Extended\";\n\ntype DateType = number;\nlet DateType: any = {};\nDateType.FullYear = 0;\nDateType.Month = 1;\nDateType.Date = 2;\nDateType.Hours = 3;\nDateType.Minutes = 4;\nDateType.Seconds = 5;\nDateType.Milliseconds = 6;\nDateType.Day = 7;\nDateType[DateType.FullYear] = \"FullYear\";\nDateType[DateType.Month] = \"Month\";\nDateType[DateType.Date] = \"Date\";\nDateType[DateType.Hours] = \"Hours\";\nDateType[DateType.Minutes] = \"Minutes\";\nDateType[DateType.Seconds] = \"Seconds\";\nDateType[DateType.Milliseconds] = \"Milliseconds\";\nDateType[DateType.Day] = \"Day\";\n\ntype TranslationType = number;\nlet TranslationType: any = {};\nTranslationType.DayPeriods = 0;\nTranslationType.Days = 1;\nTranslationType.Months = 2;\nTranslationType.Eras = 3;\nTranslationType[TranslationType.DayPeriods] = \"DayPeriods\";\nTranslationType[TranslationType.Days] = \"Days\";\nTranslationType[TranslationType.Months] = \"Months\";\nTranslationType[TranslationType.Eras] = \"Eras\";\n\n/**\n * Transforms a date to a locale string based on a pattern and a timezone\n * \n * \\@internal\n * @param {?} date\n * @param {?} format\n * @param {?} locale\n * @param {?=} timezone\n * @return {?}\n */\nexport function formatDate(date: Date, format: string, locale: string, timezone?: string): string {\n  const /** @type {?} */ namedFormat = getNamedFormat(locale, format);\n  format = namedFormat || format;\n\n  let /** @type {?} */ parts: string[] = [];\n  let /** @type {?} */ match;\n  while (format) {\n    match = DATE_FORMATS_SPLIT.exec(format);\n    if (match) {\n      parts = parts.concat(match.slice(1));\n      const /** @type {?} */ part = parts.pop();\n      if (!part) {\n        break;\n      }\n      format = part;\n    } else {\n      parts.push(format);\n      break;\n    }\n  }\n\n  let /** @type {?} */ dateTimezoneOffset = date.getTimezoneOffset();\n  if (timezone) {\n    dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n    date = convertTimezoneToLocal(date, timezone, true);\n  }\n\n  let /** @type {?} */ text = '';\n  parts.forEach(value => {\n    const /** @type {?} */ dateFormatter = getDateFormatter(value);\n    text += dateFormatter ?\n        dateFormatter(date, locale, dateTimezoneOffset) :\n        value === '\\'\\'' ? '\\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n  });\n\n  return text;\n}\n/**\n * @param {?} locale\n * @param {?} format\n * @return {?}\n */\nfunction getNamedFormat(locale: string, format: string): string {\n  const /** @type {?} */ localeId = getLocaleId(locale);\n  NAMED_FORMATS[localeId] = NAMED_FORMATS[localeId] || {};\n\n  if (NAMED_FORMATS[localeId][format]) {\n    return NAMED_FORMATS[localeId][format];\n  }\n\n  let /** @type {?} */ formatValue = '';\n  switch (format) {\n    case 'shortDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Short);\n      break;\n    case 'mediumDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Medium);\n      break;\n    case 'longDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Long);\n      break;\n    case 'fullDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Full);\n      break;\n    case 'shortTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Short);\n      break;\n    case 'mediumTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Medium);\n      break;\n    case 'longTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Long);\n      break;\n    case 'fullTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Full);\n      break;\n    case 'short':\n      const /** @type {?} */ shortTime = getNamedFormat(locale, 'shortTime');\n      const /** @type {?} */ shortDate = getNamedFormat(locale, 'shortDate');\n      formatValue = formatDateTime(\n          getLocaleDateTimeFormat(locale, FormatWidth.Short), [shortTime, shortDate]);\n      break;\n    case 'medium':\n      const /** @type {?} */ mediumTime = getNamedFormat(locale, 'mediumTime');\n      const /** @type {?} */ mediumDate = getNamedFormat(locale, 'mediumDate');\n      formatValue = formatDateTime(\n          getLocaleDateTimeFormat(locale, FormatWidth.Medium), [mediumTime, mediumDate]);\n      break;\n    case 'long':\n      const /** @type {?} */ longTime = getNamedFormat(locale, 'longTime');\n      const /** @type {?} */ longDate = getNamedFormat(locale, 'longDate');\n      formatValue =\n          formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Long), [longTime, longDate]);\n      break;\n    case 'full':\n      const /** @type {?} */ fullTime = getNamedFormat(locale, 'fullTime');\n      const /** @type {?} */ fullDate = getNamedFormat(locale, 'fullDate');\n      formatValue =\n          formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Full), [fullTime, fullDate]);\n      break;\n  }\n  if (formatValue) {\n    NAMED_FORMATS[localeId][format] = formatValue;\n  }\n  return formatValue;\n}\n/**\n * @param {?} str\n * @param {?} opt_values\n * @return {?}\n */\nfunction formatDateTime(str: string, opt_values: string[]) {\n  if (opt_values) {\n    str = str.replace(/\\{([^}]+)}/g, function(match, key) {\n      return (opt_values != null && key in opt_values) ? opt_values[key] : match;\n    });\n  }\n  return str;\n}\n/**\n * @param {?} num\n * @param {?} digits\n * @param {?=} minusSign\n * @param {?=} trim\n * @param {?=} negWrap\n * @return {?}\n */\nfunction padNumber(\n    num: number, digits: number, minusSign = '-', trim?: boolean, negWrap?: boolean): string {\n  let /** @type {?} */ neg = '';\n  if (num < 0 || (negWrap && num <= 0)) {\n    if (negWrap) {\n      num = -num + 1;\n    } else {\n      num = -num;\n      neg = minusSign;\n    }\n  }\n  let /** @type {?} */ strNum = '' + num;\n  while (strNum.length < digits) strNum = '0' + strNum;\n  if (trim) {\n    strNum = strNum.substr(strNum.length - digits);\n  }\n  return neg + strNum;\n}\n/**\n * Returns a date formatter that transforms a date into its locale digit representation\n * @param {?} name\n * @param {?} size\n * @param {?=} offset\n * @param {?=} trim\n * @param {?=} negWrap\n * @return {?}\n */\nfunction dateGetter(\n    name: DateType, size: number, offset: number = 0, trim = false,\n    negWrap = false): DateFormatter {\n  return function(date: Date, locale: string): string {\n    let /** @type {?} */ part = getDatePart(name, date, size);\n    if (offset > 0 || part > -offset) {\n      part += offset;\n    }\n    if (name === DateType.Hours && part === 0 && offset === -12) {\n      part = 12;\n    }\n    return padNumber(\n        part, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign), trim, negWrap);\n  };\n}\n/**\n * @param {?} name\n * @param {?} date\n * @param {?} size\n * @return {?}\n */\nfunction getDatePart(name: DateType, date: Date, size: number): number {\n  switch (name) {\n    case DateType.FullYear:\n      return date.getFullYear();\n    case DateType.Month:\n      return date.getMonth();\n    case DateType.Date:\n      return date.getDate();\n    case DateType.Hours:\n      return date.getHours();\n    case DateType.Minutes:\n      return date.getMinutes();\n    case DateType.Seconds:\n      return date.getSeconds();\n    case DateType.Milliseconds:\n      const /** @type {?} */ div = size === 1 ? 100 : (size === 2 ? 10 : 1);\n      return Math.round(date.getMilliseconds() / div);\n    case DateType.Day:\n      return date.getDay();\n    default:\n      throw new Error(`Unknown DateType value \"${name}\".`);\n  }\n}\n/**\n * Returns a date formatter that transforms a date into its locale string representation\n * @param {?} name\n * @param {?} width\n * @param {?=} form\n * @param {?=} extended\n * @return {?}\n */\nfunction dateStrGetter(\n    name: TranslationType, width: TranslationWidth, form: FormStyle = FormStyle.Format,\n    extended = false): DateFormatter {\n  return function(date: Date, locale: string): string {\n    return getDateTranslation(date, locale, name, width, form, extended);\n  };\n}\n/**\n * Returns the locale translation of a date for a given form, type and width\n * @param {?} date\n * @param {?} locale\n * @param {?} name\n * @param {?} width\n * @param {?} form\n * @param {?} extended\n * @return {?}\n */\nfunction getDateTranslation(\n    date: Date, locale: string, name: TranslationType, width: TranslationWidth, form: FormStyle,\n    extended: boolean) {\n  switch (name) {\n    case TranslationType.Months:\n      return getLocaleMonthNames(locale, form, width)[date.getMonth()];\n    case TranslationType.Days:\n      return getLocaleDayNames(locale, form, width)[date.getDay()];\n    case TranslationType.DayPeriods:\n      const /** @type {?} */ currentHours = date.getHours();\n      const /** @type {?} */ currentMinutes = date.getMinutes();\n      if (extended) {\n        const /** @type {?} */ rules = getLocaleExtraDayPeriodRules(locale);\n        const /** @type {?} */ dayPeriods = getLocaleExtraDayPeriods(locale, form, width);\n        let /** @type {?} */ result;\n        rules.forEach((rule: Time | [Time, Time], index: number) => {\n          if (Array.isArray(rule)) {\n            // morning, afternoon, evening, night\n            const {hours: hoursFrom, minutes: minutesFrom} = rule[0];\n            const {hours: hoursTo, minutes: minutesTo} = rule[1];\n            if (currentHours >= hoursFrom && currentMinutes >= minutesFrom &&\n                (currentHours < hoursTo ||\n                 (currentHours === hoursTo && currentMinutes < minutesTo))) {\n              result = dayPeriods[index];\n            }\n          } else {  // noon or midnight\n            const {hours, minutes} = rule;\n            if (hours === currentHours && minutes === currentMinutes) {\n              result = dayPeriods[index];\n            }\n          }\n        });\n        if (result) {\n          return result;\n        }\n      }\n      // if no rules for the day periods, we use am/pm by default\n      return getLocaleDayPeriods(locale, form, /** @type {?} */(( <TranslationWidth>width)))[currentHours < 12 ? 0 : 1];\n    case TranslationType.Eras:\n      return getLocaleEraNames(locale, /** @type {?} */(( <TranslationWidth>width)))[date.getFullYear() <= 0 ? 0 : 1];\n  }\n}\n/**\n * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or\n * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,\n * extended = +04:30)\n * @param {?} width\n * @return {?}\n */\nfunction timeZoneGetter(width: ZoneWidth): DateFormatter {\n  return function(date: Date, locale: string, offset: number) {\n    const /** @type {?} */ zone = -1 * offset;\n    const /** @type {?} */ minusSign = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n    const /** @type {?} */ hours = zone > 0 ? Math.floor(zone / 60) : Math.ceil(zone / 60);\n    switch (width) {\n      case ZoneWidth.Short:\n        return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) +\n            padNumber(Math.abs(zone % 60), 2, minusSign);\n      case ZoneWidth.ShortGMT:\n        return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 1, minusSign);\n      case ZoneWidth.Long:\n        return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n            padNumber(Math.abs(zone % 60), 2, minusSign);\n      case ZoneWidth.Extended:\n        if (offset === 0) {\n          return 'Z';\n        } else {\n          return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n              padNumber(Math.abs(zone % 60), 2, minusSign);\n        }\n      default:\n        throw new Error(`Unknown zone width \"${width}\"`);\n    }\n  };\n}\n\nconst /** @type {?} */ JANUARY = 0;\nconst /** @type {?} */ THURSDAY = 4;\n/**\n * @param {?} year\n * @return {?}\n */\nfunction getFirstThursdayOfYear(year: number) {\n  const /** @type {?} */ firstDayOfYear = (new Date(year, JANUARY, 1)).getDay();\n  return new Date(\n      year, 0, 1 + ((firstDayOfYear <= THURSDAY) ? THURSDAY : THURSDAY + 7) - firstDayOfYear);\n}\n/**\n * @param {?} datetime\n * @return {?}\n */\nfunction getThursdayThisWeek(datetime: Date) {\n  return new Date(\n      datetime.getFullYear(), datetime.getMonth(),\n      datetime.getDate() + (THURSDAY - datetime.getDay()));\n}\n/**\n * @param {?} size\n * @param {?=} monthBased\n * @return {?}\n */\nfunction weekGetter(size: number, monthBased = false): DateFormatter {\n  return function(date: Date, locale: string) {\n    let /** @type {?} */ result;\n    if (monthBased) {\n      const /** @type {?} */ nbDaysBefore1stDayOfMonth =\n          new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;\n      const /** @type {?} */ today = date.getDate();\n      result = 1 + Math.floor((today + nbDaysBefore1stDayOfMonth) / 7);\n    } else {\n      const /** @type {?} */ firstThurs = getFirstThursdayOfYear(date.getFullYear());\n      const /** @type {?} */ thisThurs = getThursdayThisWeek(date);\n      const /** @type {?} */ diff = thisThurs.getTime() - firstThurs.getTime();\n      result = 1 + Math.round(diff / 6.048e8);  // 6.048e8 ms per week\n    }\n\n    return padNumber(result, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n  };\n}\n\ntype DateFormatter = (date: Date, locale: string, offset?: number) => string;\n\nconst /** @type {?} */ DATE_FORMATS: {[format: string]: DateFormatter} = {};\n/**\n * @param {?} format\n * @return {?}\n */\nfunction getDateFormatter(format: string): DateFormatter|null {\n  if (DATE_FORMATS[format]) {\n    return DATE_FORMATS[format];\n  }\n  let /** @type {?} */ formatter;\n  switch (format) {\n    // Era name (AD/BC)\n    case 'G':\n    case 'GG':\n    case 'GGG':\n      formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Abbreviated);\n      break;\n    case 'GGGG':\n      formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Wide);\n      break;\n    case 'GGGGG':\n      formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Narrow);\n      break;\n\n    // 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)\n    case 'y':\n      formatter = dateGetter(DateType.FullYear, 1, 0, false, true);\n      break;\n    // 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n    case 'yy':\n      formatter = dateGetter(DateType.FullYear, 2, 0, true, true);\n      break;\n    // 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)\n    case 'yyy':\n      formatter = dateGetter(DateType.FullYear, 3, 0, false, true);\n      break;\n    // 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)\n    case 'yyyy':\n      formatter = dateGetter(DateType.FullYear, 4, 0, false, true);\n      break;\n\n    // Month of the year (1-12), numeric\n    case 'M':\n    case 'L':\n      formatter = dateGetter(DateType.Month, 1, 1);\n      break;\n    case 'MM':\n    case 'LL':\n      formatter = dateGetter(DateType.Month, 2, 1);\n      break;\n\n    // Month of the year (January, ...), string, format\n    case 'MMM':\n      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated);\n      break;\n    case 'MMMM':\n      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Wide);\n      break;\n    case 'MMMMM':\n      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Narrow);\n      break;\n\n    // Month of the year (January, ...), string, standalone\n    case 'LLL':\n      formatter =\n          dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated, FormStyle.Standalone);\n      break;\n    case 'LLLL':\n      formatter =\n          dateStrGetter(TranslationType.Months, TranslationWidth.Wide, FormStyle.Standalone);\n      break;\n    case 'LLLLL':\n      formatter =\n          dateStrGetter(TranslationType.Months, TranslationWidth.Narrow, FormStyle.Standalone);\n      break;\n\n    // Week of the year (1, ... 52)\n    case 'w':\n      formatter = weekGetter(1);\n      break;\n    case 'ww':\n      formatter = weekGetter(2);\n      break;\n\n    // Week of the month (1, ...)\n    case 'W':\n      formatter = weekGetter(1, true);\n      break;\n\n    // Day of the month (1-31)\n    case 'd':\n      formatter = dateGetter(DateType.Date, 1);\n      break;\n    case 'dd':\n      formatter = dateGetter(DateType.Date, 2);\n      break;\n\n    // Day of the Week\n    case 'E':\n    case 'EE':\n    case 'EEE':\n      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Abbreviated);\n      break;\n    case 'EEEE':\n      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Wide);\n      break;\n    case 'EEEEE':\n      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Narrow);\n      break;\n    case 'EEEEEE':\n      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Short);\n      break;\n\n    // Generic period of the day (am-pm)\n    case 'a':\n    case 'aa':\n    case 'aaa':\n      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated);\n      break;\n    case 'aaaa':\n      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide);\n      break;\n    case 'aaaaa':\n      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow);\n      break;\n\n    // Extended period of the day (midnight, at night, ...), standalone\n    case 'b':\n    case 'bb':\n    case 'bbb':\n      formatter = dateStrGetter(\n          TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Standalone, true);\n      break;\n    case 'bbbb':\n      formatter = dateStrGetter(\n          TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Standalone, true);\n      break;\n    case 'bbbbb':\n      formatter = dateStrGetter(\n          TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Standalone, true);\n      break;\n\n    // Extended period of the day (midnight, night, ...), standalone\n    case 'B':\n    case 'BB':\n    case 'BBB':\n      formatter = dateStrGetter(\n          TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Format, true);\n      break;\n    case 'BBBB':\n      formatter =\n          dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Format, true);\n      break;\n    case 'BBBBB':\n      formatter = dateStrGetter(\n          TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Format, true);\n      break;\n\n    // Hour in AM/PM, (1-12)\n    case 'h':\n      formatter = dateGetter(DateType.Hours, 1, -12);\n      break;\n    case 'hh':\n      formatter = dateGetter(DateType.Hours, 2, -12);\n      break;\n\n    // Hour of the day (0-23)\n    case 'H':\n      formatter = dateGetter(DateType.Hours, 1);\n      break;\n    // Hour in day, padded (00-23)\n    case 'HH':\n      formatter = dateGetter(DateType.Hours, 2);\n      break;\n\n    // Minute of the hour (0-59)\n    case 'm':\n      formatter = dateGetter(DateType.Minutes, 1);\n      break;\n    case 'mm':\n      formatter = dateGetter(DateType.Minutes, 2);\n      break;\n\n    // Second of the minute (0-59)\n    case 's':\n      formatter = dateGetter(DateType.Seconds, 1);\n      break;\n    case 'ss':\n      formatter = dateGetter(DateType.Seconds, 2);\n      break;\n\n    // Fractional second padded (0-9)\n    case 'S':\n      formatter = dateGetter(DateType.Milliseconds, 1);\n      break;\n    case 'SS':\n      formatter = dateGetter(DateType.Milliseconds, 2);\n      break;\n    // = millisecond\n    case 'SSS':\n      formatter = dateGetter(DateType.Milliseconds, 3);\n      break;\n\n\n    // Timezone ISO8601 short format (-0430)\n    case 'Z':\n    case 'ZZ':\n    case 'ZZZ':\n      formatter = timeZoneGetter(ZoneWidth.Short);\n      break;\n    // Timezone ISO8601 extended format (-04:30)\n    case 'ZZZZZ':\n      formatter = timeZoneGetter(ZoneWidth.Extended);\n      break;\n\n    // Timezone GMT short format (GMT+4)\n    case 'O':\n    case 'OO':\n    case 'OOO':\n    // Should be location, but fallback to format O instead because we don't have the data yet\n    case 'z':\n    case 'zz':\n    case 'zzz':\n      formatter = timeZoneGetter(ZoneWidth.ShortGMT);\n      break;\n    // Timezone GMT long format (GMT+0430)\n    case 'OOOO':\n    case 'ZZZZ':\n    // Should be location, but fallback to format O instead because we don't have the data yet\n    case 'zzzz':\n      formatter = timeZoneGetter(ZoneWidth.Long);\n      break;\n    default:\n      return null;\n  }\n  DATE_FORMATS[format] = formatter;\n  return formatter;\n}\n/**\n * @param {?} timezone\n * @param {?} fallback\n * @return {?}\n */\nfunction timezoneToOffset(timezone: string, fallback: number): number {\n  // Support: IE 9-11 only, Edge 13-15+\n  // IE/Edge do not \"understand\" colon (`:`) in timezone\n  timezone = timezone.replace(/:/g, '');\n  const /** @type {?} */ requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;\n  return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;\n}\n/**\n * @param {?} date\n * @param {?} minutes\n * @return {?}\n */\nfunction addDateMinutes(date: Date, minutes: number) {\n  date = new Date(date.getTime());\n  date.setMinutes(date.getMinutes() + minutes);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} timezone\n * @param {?} reverse\n * @return {?}\n */\nfunction convertTimezoneToLocal(date: Date, timezone: string, reverse: boolean): Date {\n  const /** @type {?} */ reverseValue = reverse ? -1 : 1;\n  const /** @type {?} */ dateTimezoneOffset = date.getTimezoneOffset();\n  const /** @type {?} */ timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n  return addDateMinutes(date, reverseValue * (timezoneOffset - dateTimezoneOffset));\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Provider} from '@angular/core';\n\nimport {NgClass} from './ng_class';\nimport {NgComponentOutlet} from './ng_component_outlet';\nimport {NgForOf, NgForOfContext} from './ng_for_of';\nimport {NgIf, NgIfContext} from './ng_if';\nimport {NgPlural, NgPluralCase} from './ng_plural';\nimport {NgStyle} from './ng_style';\nimport {NgSwitch, NgSwitchCase, NgSwitchDefault} from './ng_switch';\nimport {NgTemplateOutlet} from './ng_template_outlet';\n\nexport {\n  NgClass,\n  NgComponentOutlet,\n  NgForOf,\n  NgForOfContext,\n  NgIf,\n  NgIfContext,\n  NgPlural,\n  NgPluralCase,\n  NgStyle,\n  NgSwitch,\n  NgSwitchCase,\n  NgSwitchDefault,\n  NgTemplateOutlet\n};\n/**\n * A collection of Angular directives that are likely to be used in each and every Angular\n * application.\n */\nexport const /** @type {?} */ COMMON_DIRECTIVES: Provider[] = [\n  NgClass,\n  NgComponentOutlet,\n  NgForOf,\n  NgIf,\n  NgTemplateOutlet,\n  NgStyle,\n  NgSwitch,\n  NgSwitchCase,\n  NgSwitchDefault,\n  NgPlural,\n  NgPluralCase,\n];\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, EmbeddedViewRef, Input, OnChanges, SimpleChange, SimpleChanges, TemplateRef, ViewContainerRef} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Inserts an embedded view from a prepared `TemplateRef`\n * \n * \\@howToUse \n * ```\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\n * ```\n * \n * \\@description \n * \n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\n * by the local template `let` declarations.\n * \n * Note: using the key `$implicit` in the context object will set it's value as default.\n * \n * ## Example\n * \n * {\\@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\n * \n * \\@stable\n */\nexport class NgTemplateOutlet implements OnChanges {\nprivate _viewRef: EmbeddedViewRef<any>;\npublic ngTemplateOutletContext: Object;\npublic ngTemplateOutlet: TemplateRef<any>;\n/**\n * @param {?} _viewContainerRef\n */\nconstructor(private _viewContainerRef: ViewContainerRef) {}\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    const /** @type {?} */ recreateView = this._shouldRecreateView(changes);\n\n    if (recreateView) {\n      if (this._viewRef) {\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n      }\n\n      if (this.ngTemplateOutlet) {\n        this._viewRef = this._viewContainerRef.createEmbeddedView(\n            this.ngTemplateOutlet, this.ngTemplateOutletContext);\n      }\n    } else {\n      if (this._viewRef && this.ngTemplateOutletContext) {\n        this._updateExistingContext(this.ngTemplateOutletContext);\n      }\n    }\n  }\n/**\n * We need to re-create existing embedded view if:\n * - templateRef has changed\n * - context has changes\n * \n * We mark context object as changed when the corresponding object\n * shape changes (new properties are added or existing properties are removed).\n * In other words we consider context with the same properties as \"the same\" even\n * if object reference changes (see https://github.com/angular/angular/issues/13407).\n * @param {?} changes\n * @return {?}\n */\n\nprivate _shouldRecreateView(changes: SimpleChanges): boolean {\n    const /** @type {?} */ ctxChange = changes['ngTemplateOutletContext'];\n    return !!changes['ngTemplateOutlet'] || (ctxChange && this._hasContextShapeChanged(ctxChange));\n  }\n/**\n * @param {?} ctxChange\n * @return {?}\n */\n\nprivate _hasContextShapeChanged(ctxChange: SimpleChange): boolean {\n    const /** @type {?} */ prevCtxKeys = Object.keys(ctxChange.previousValue || {});\n    const /** @type {?} */ currCtxKeys = Object.keys(ctxChange.currentValue || {});\n\n    if (prevCtxKeys.length === currCtxKeys.length) {\n      for (let /** @type {?} */ propName of currCtxKeys) {\n        if (prevCtxKeys.indexOf(propName) === -1) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      return true;\n    }\n  }\n/**\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _updateExistingContext(ctx: Object): void {\n    for (let /** @type {?} */ propName of Object.keys(ctx)) {\n      ( /** @type {?} */((<any>this._viewRef.context)))[propName] = ( /** @type {?} */((<any>this.ngTemplateOutletContext)))[propName];\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: '[ngTemplateOutlet]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"ngTemplateOutletContext\": [{ type: Input },],\n\"ngTemplateOutlet\": [{ type: Input },],\n};\n}\n\nfunction NgTemplateOutlet_tsickle_Closure_declarations() {\n/** @type {?} */\nNgTemplateOutlet.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgTemplateOutlet.ctorParameters;\n/** @type {?} */\nNgTemplateOutlet.propDecorators;\n/** @type {?} */\nNgTemplateOutlet.prototype._viewRef;\n/** @type {?} */\nNgTemplateOutlet.prototype.ngTemplateOutletContext;\n/** @type {?} */\nNgTemplateOutlet.prototype.ngTemplateOutlet;\n/** @type {?} */\nNgTemplateOutlet.prototype._viewContainerRef;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, DoCheck, ElementRef, Input, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Renderer2} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Update an HTML element styles.\n * \n * \\@howToUse \n * ```\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n * \n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n * \n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n * \n * \\@description \n * \n * The styles are updated according to the value of the expression evaluation:\n * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n * - values are the values assigned to those properties (expressed in the given unit).\n * \n * \\@stable\n */\nexport class NgStyle implements DoCheck {\nprivate _ngStyle: {[key: string]: string};\nprivate _differ: KeyValueDiffer<string, string|number>;\n/**\n * @param {?} _differs\n * @param {?} _ngEl\n * @param {?} _renderer\n */\nconstructor(\nprivate _differs: KeyValueDiffers,\nprivate _ngEl: ElementRef,\nprivate _renderer: Renderer2) {}\n/**\n * @param {?} v\n * @return {?}\n */\nset ngStyle(v: {[key: string]: string}) {\n    this._ngStyle = v;\n    if (!this._differ && v) {\n      this._differ = this._differs.find(v).create();\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\n    if (this._differ) {\n      const /** @type {?} */ changes = this._differ.diff(this._ngStyle);\n      if (changes) {\n        this._applyChanges(changes);\n      }\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\n\nprivate _applyChanges(changes: KeyValueChanges<string, string|number>): void {\n    changes.forEachRemovedItem((record) => this._setStyle(record.key, null));\n    changes.forEachAddedItem((record) => this._setStyle(record.key, record.currentValue));\n    changes.forEachChangedItem((record) => this._setStyle(record.key, record.currentValue));\n  }\n/**\n * @param {?} nameAndUnit\n * @param {?} value\n * @return {?}\n */\n\nprivate _setStyle(nameAndUnit: string, value: string|number|null|undefined): void {\n    const [name, unit] = nameAndUnit.split('.');\n    value = value != null && unit ? `${value}${unit}` : value;\n\n    this._renderer.setStyle(this._ngEl.nativeElement, name, /** @type {?} */(( value as string)));\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: '[ngStyle]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"ngStyle\": [{ type: Input },],\n};\n}\n\nfunction NgStyle_tsickle_Closure_declarations() {\n/** @type {?} */\nNgStyle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgStyle.ctorParameters;\n/** @type {?} */\nNgStyle.propDecorators;\n/** @type {?} */\nNgStyle.prototype._ngStyle;\n/** @type {?} */\nNgStyle.prototype._differ;\n/** @type {?} */\nNgStyle.prototype._differs;\n/** @type {?} */\nNgStyle.prototype._ngEl;\n/** @type {?} */\nNgStyle.prototype._renderer;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, Directive, Host, Input, TemplateRef, ViewContainerRef} from '@angular/core';\n\nimport {NgLocalization, getPluralCategory} from '../i18n/localization';\n\nimport {SwitchView} from './ng_switch';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n * \n * \\@howToUse \n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n * </some-element>\n * ```\n * \n * \\@description \n * \n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n * \n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n * \n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n * \n * \\@experimental\n */\nexport class NgPlural {\nprivate _switchValue: number;\nprivate _activeView: SwitchView;\nprivate _caseViews: {[k: string]: SwitchView} = {};\n/**\n * @param {?} _localization\n */\nconstructor(private _localization: NgLocalization) {}\n/**\n * @param {?} value\n * @return {?}\n */\nset ngPlural(value: number) {\n    this._switchValue = value;\n    this._updateView();\n  }\n/**\n * @param {?} value\n * @param {?} switchView\n * @return {?}\n */\naddCase(value: string, switchView: SwitchView): void { this._caseViews[value] = switchView; }\n/**\n * @return {?}\n */\n\nprivate _updateView(): void {\n    this._clearViews();\n\n    const /** @type {?} */ cases = Object.keys(this._caseViews);\n    const /** @type {?} */ key = getPluralCategory(this._switchValue, cases, this._localization);\n    this._activateView(this._caseViews[key]);\n  }\n/**\n * @return {?}\n */\n\nprivate _clearViews() {\n    if (this._activeView) this._activeView.destroy();\n  }\n/**\n * @param {?} view\n * @return {?}\n */\n\nprivate _activateView(view: SwitchView) {\n    if (view) {\n      this._activeView = view;\n      this._activeView.create();\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: '[ngPlural]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: NgLocalization, },\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"ngPlural\": [{ type: Input },],\n};\n}\n\nfunction NgPlural_tsickle_Closure_declarations() {\n/** @type {?} */\nNgPlural.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgPlural.ctorParameters;\n/** @type {?} */\nNgPlural.propDecorators;\n/** @type {?} */\nNgPlural.prototype._switchValue;\n/** @type {?} */\nNgPlural.prototype._activeView;\n/** @type {?} */\nNgPlural.prototype._caseViews;\n/** @type {?} */\nNgPlural.prototype._localization;\n}\n\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgPlural} when the\n *             given expression matches the plural expression according to CLDR rules.\n * \n * \\@howToUse \n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\n * </some-element>\n * ```\n * \n * See {\\@link NgPlural} for more details and example.\n * \n * \\@experimental\n */\nexport class NgPluralCase {\n/**\n * @param {?} value\n * @param {?} template\n * @param {?} viewContainer\n * @param {?} ngPlural\n */\nconstructor(\npublic value: string, template: TemplateRef<Object>,\n      viewContainer: ViewContainerRef,  ngPlural: NgPlural) {\n    const /** @type {?} */ isANumber: boolean = !isNaN(Number(value));\n    ngPlural.addCase(isANumber ? `=${value}` : value, new SwitchView(viewContainer, template));\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: '[ngPluralCase]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Attribute, args: ['ngPluralCase', ] }, ]},\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: NgPlural, decorators: [{ type: Host }, ]},\n];\n}\n\nfunction NgPluralCase_tsickle_Closure_declarations() {\n/** @type {?} */\nNgPluralCase.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgPluralCase.ctorParameters;\n/** @type {?} */\nNgPluralCase.prototype.value;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, DoCheck, Host, Input, TemplateRef, ViewContainerRef} from '@angular/core';\nexport class SwitchView {\nprivate _created = false;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _templateRef\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _templateRef: TemplateRef<Object>) {}\n/**\n * @return {?}\n */\ncreate(): void {\n    this._created = true;\n    this._viewContainerRef.createEmbeddedView(this._templateRef);\n  }\n/**\n * @return {?}\n */\ndestroy(): void {\n    this._created = false;\n    this._viewContainerRef.clear();\n  }\n/**\n * @param {?} created\n * @return {?}\n */\nenforceState(created: boolean) {\n    if (created && !this._created) {\n      this.create();\n    } else if (!created && this._created) {\n      this.destroy();\n    }\n  }\n}\n\nfunction SwitchView_tsickle_Closure_declarations() {\n/** @type {?} */\nSwitchView.prototype._created;\n/** @type {?} */\nSwitchView.prototype._viewContainerRef;\n/** @type {?} */\nSwitchView.prototype._templateRef;\n}\n\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch\n *             expression.\n * \n * \\@howToUse \n * ```\n *     <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n * \\@description \n * \n * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n * switch expression.\n * \n * In other words:\n * - you define a container element (where you place the directive with a switch expression on the\n * `[ngSwitch]=\"...\"` attribute)\n * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n * root elements.\n * \n * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n * be preserved at the location.\n * \n * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n * expression is evaluated.\n * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n * stamped out.\n * \n * \\@stable\n */\nexport class NgSwitch {\nprivate _defaultViews: SwitchView[];\nprivate _defaultUsed = false;\nprivate _caseCount = 0;\nprivate _lastCaseCheckIndex = 0;\nprivate _lastCasesMatched = false;\nprivate _ngSwitch: any;\n/**\n * @param {?} newValue\n * @return {?}\n */\nset ngSwitch(newValue: any) {\n    this._ngSwitch = newValue;\n    if (this._caseCount === 0) {\n      this._updateDefaultCases(true);\n    }\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_addCase(): number { return this._caseCount++; }\n/**\n * \\@internal\n * @param {?} view\n * @return {?}\n */\n_addDefault(view: SwitchView) {\n    if (!this._defaultViews) {\n      this._defaultViews = [];\n    }\n    this._defaultViews.push(view);\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_matchCase(value: any): boolean {\n    const /** @type {?} */ matched = value == this._ngSwitch;\n    this._lastCasesMatched = this._lastCasesMatched || matched;\n    this._lastCaseCheckIndex++;\n    if (this._lastCaseCheckIndex === this._caseCount) {\n      this._updateDefaultCases(!this._lastCasesMatched);\n      this._lastCaseCheckIndex = 0;\n      this._lastCasesMatched = false;\n    }\n    return matched;\n  }\n/**\n * @param {?} useDefault\n * @return {?}\n */\n\nprivate _updateDefaultCases(useDefault: boolean) {\n    if (this._defaultViews && useDefault !== this._defaultUsed) {\n      this._defaultUsed = useDefault;\n      for (let /** @type {?} */ i = 0; i < this._defaultViews.length; i++) {\n        const /** @type {?} */ defaultView = this._defaultViews[i];\n        defaultView.enforceState(useDefault);\n      }\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: '[ngSwitch]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"ngSwitch\": [{ type: Input },],\n};\n}\n\nfunction NgSwitch_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSwitch.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSwitch.ctorParameters;\n/** @type {?} */\nNgSwitch.propDecorators;\n/** @type {?} */\nNgSwitch.prototype._defaultViews;\n/** @type {?} */\nNgSwitch.prototype._defaultUsed;\n/** @type {?} */\nNgSwitch.prototype._caseCount;\n/** @type {?} */\nNgSwitch.prototype._lastCaseCheckIndex;\n/** @type {?} */\nNgSwitch.prototype._lastCasesMatched;\n/** @type {?} */\nNgSwitch.prototype._ngSwitch;\n}\n\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgSwitch} when the\n *             given expression evaluate to respectively the same/different value as the switch\n *             expression.\n * \n * \\@howToUse \n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * </container-element>\n * ```\n * \\@description \n * \n * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n * expression.\n * \n * If multiple match expressions match the switch expression value, all of them are displayed.\n * \n * See {\\@link NgSwitch} for more details and example.\n * \n * \\@stable\n */\nexport class NgSwitchCase implements DoCheck {\nprivate _view: SwitchView;\n\n  \n  ngSwitchCase: any;\n/**\n * @param {?} viewContainer\n * @param {?} templateRef\n * @param {?} ngSwitch\n */\nconstructor(\n      viewContainer: ViewContainerRef, templateRef: TemplateRef<Object>,\nprivate ngSwitch: NgSwitch) {\n    ngSwitch._addCase();\n    this._view = new SwitchView(viewContainer, templateRef);\n  }\n/**\n * @return {?}\n */\nngDoCheck() { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: '[ngSwitchCase]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: NgSwitch, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"ngSwitchCase\": [{ type: Input },],\n};\n}\n\nfunction NgSwitchCase_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSwitchCase.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSwitchCase.ctorParameters;\n/** @type {?} */\nNgSwitchCase.propDecorators;\n/** @type {?} */\nNgSwitchCase.prototype._view;\n/** @type {?} */\nNgSwitchCase.prototype.ngSwitchCase;\n/** @type {?} */\nNgSwitchCase.prototype.ngSwitch;\n}\n\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Creates a view that is added to the parent {\\@link NgSwitch} when no case expressions\n * match the\n *             switch expression.\n * \n * \\@howToUse \n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-other-element *ngSwitchDefault>...</some-other-element>\n * </container-element>\n * ```\n * \n * \\@description \n * \n * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n * expression.\n * \n * See {\\@link NgSwitch} for more details and example.\n * \n * \\@stable\n */\nexport class NgSwitchDefault {\n/**\n * @param {?} viewContainer\n * @param {?} templateRef\n * @param {?} ngSwitch\n */\nconstructor(\n      viewContainer: ViewContainerRef, templateRef: TemplateRef<Object>,\n       ngSwitch: NgSwitch) {\n    ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: '[ngSwitchDefault]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: NgSwitch, decorators: [{ type: Host }, ]},\n];\n}\n\nfunction NgSwitchDefault_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSwitchDefault.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSwitchDefault.ctorParameters;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, EmbeddedViewRef, Input, TemplateRef, ViewContainerRef} from '@angular/core';\n/**\n * Conditionally includes a template based on the value of an `expression`.\n * \n * `ngIf` evaluates the `expression` and then renders the `then` or `else` template in its place\n * when expression is truthy or falsy respectively. Typically the:\n *  - `then` template is the inline template of `ngIf` unless bound to a different value.\n *  - `else` template is blank unless it is bound.\n * \n * ## Most common usage\n * \n * The most common usage of the `ngIf` directive is to conditionally show the inline template as\n * seen in this example:\n * {\\@example common/ngIf/ts/module.ts region='NgIfSimple'}\n * \n * ## Showing an alternative template using `else`\n * \n * If it is necessary to display a template when the `expression` is falsy use the `else` template\n * binding as shown. Note that the `else` binding points to a `<ng-template>` labeled `#elseBlock`.\n * The template can be defined anywhere in the component view but is typically placed right after\n * `ngIf` for readability.\n * \n * {\\@example common/ngIf/ts/module.ts region='NgIfElse'}\n * \n * ## Using non-inlined `then` template\n * \n * Usually the `then` template is the inlined template of the `ngIf`, but it can be changed using\n * a binding (just like `else`). Because `then` and `else` are bindings, the template references can\n * change at runtime as shown in this example.\n * \n * {\\@example common/ngIf/ts/module.ts region='NgIfThenElse'}\n * \n * ## Storing conditional result in a variable\n * \n * A common pattern is that we need to show a set of properties from the same object. If the\n * object is undefined, then we have to use the safe-traversal-operator `?.` to guard against\n * dereferencing a `null` value. This is especially the case when waiting on async data such as\n * when using the `async` pipe as shown in following example:\n * \n * ```\n * Hello {{ (userStream|async)?.last }}, {{ (userStream|async)?.first }}!\n * ```\n * \n * There are several inefficiencies in the above example:\n *  - We create multiple subscriptions on `userStream`. One for each `async` pipe, or two in the\n *    example above.\n *  - We cannot display an alternative screen while waiting for the data to arrive asynchronously.\n *  - We have to use the safe-traversal-operator `?.` to access properties, which is cumbersome.\n *  - We have to place the `async` pipe in parenthesis.\n * \n * A better way to do this is to use `ngIf` and store the result of the condition in a local\n * variable as shown in the the example below:\n * \n * {\\@example common/ngIf/ts/module.ts region='NgIfAs'}\n * \n * Notice that:\n *  - We use only one `async` pipe and hence only one subscription gets created.\n *  - `ngIf` stores the result of the `userStream|async` in the local variable `user`.\n *  - The local `user` can then be bound repeatedly in a more efficient way.\n *  - No need to use the safe-traversal-operator `?.` to access properties as `ngIf` will only\n *    display the data if `userStream` returns a value.\n *  - We can display an alternative template while waiting for the data.\n * \n * ### Syntax\n * \n * Simple form:\n * - `<div *ngIf=\"condition\">...</div>`\n * - `<div template=\"ngIf condition\">...</div>`\n * - `<ng-template [ngIf]=\"condition\"><div>...</div></ng-template>`\n * \n * Form with an else block:\n * ```\n * <div *ngIf=\"condition; else elseBlock\">...</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n * \n * Form with a `then` and `else` block:\n * ```\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n * <ng-template #thenBlock>...</ng-template>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n * \n * Form with storing the value locally:\n * ```\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n * \n * \\@stable\n */\nexport class NgIf {\nprivate _context: NgIfContext = new NgIfContext();\nprivate _thenTemplateRef: TemplateRef<NgIfContext>|null = null;\nprivate _elseTemplateRef: TemplateRef<NgIfContext>|null = null;\nprivate _thenViewRef: EmbeddedViewRef<NgIfContext>|null = null;\nprivate _elseViewRef: EmbeddedViewRef<NgIfContext>|null = null;\n/**\n * @param {?} _viewContainer\n * @param {?} templateRef\n */\nconstructor(private _viewContainer: ViewContainerRef, templateRef: TemplateRef<NgIfContext>) {\n    this._thenTemplateRef = templateRef;\n  }\n/**\n * @param {?} condition\n * @return {?}\n */\nset ngIf(condition: any) {\n    this._context.$implicit = this._context.ngIf = condition;\n    this._updateView();\n  }\n/**\n * @param {?} templateRef\n * @return {?}\n */\nset ngIfThen(templateRef: TemplateRef<NgIfContext>) {\n    this._thenTemplateRef = templateRef;\n    this._thenViewRef = null;  // clear previous view if any.\n    this._updateView();\n  }\n/**\n * @param {?} templateRef\n * @return {?}\n */\nset ngIfElse(templateRef: TemplateRef<NgIfContext>) {\n    this._elseTemplateRef = templateRef;\n    this._elseViewRef = null;  // clear previous view if any.\n    this._updateView();\n  }\n/**\n * @return {?}\n */\n\nprivate _updateView() {\n    if (this._context.$implicit) {\n      if (!this._thenViewRef) {\n        this._viewContainer.clear();\n        this._elseViewRef = null;\n        if (this._thenTemplateRef) {\n          this._thenViewRef =\n              this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n        }\n      }\n    } else {\n      if (!this._elseViewRef) {\n        this._viewContainer.clear();\n        this._thenViewRef = null;\n        if (this._elseTemplateRef) {\n          this._elseViewRef =\n              this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n        }\n      }\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: '[ngIf]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"ngIf\": [{ type: Input },],\n\"ngIfThen\": [{ type: Input },],\n\"ngIfElse\": [{ type: Input },],\n};\n}\n\nfunction NgIf_tsickle_Closure_declarations() {\n/** @type {?} */\nNgIf.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgIf.ctorParameters;\n/** @type {?} */\nNgIf.propDecorators;\n/** @type {?} */\nNgIf.prototype._context;\n/** @type {?} */\nNgIf.prototype._thenTemplateRef;\n/** @type {?} */\nNgIf.prototype._elseTemplateRef;\n/** @type {?} */\nNgIf.prototype._thenViewRef;\n/** @type {?} */\nNgIf.prototype._elseViewRef;\n/** @type {?} */\nNgIf.prototype._viewContainer;\n}\n\n/**\n * \\@stable\n */\nexport class NgIfContext {\npublic $implicit: any = null;\npublic ngIf: any = null;\n}\n\nfunction NgIfContext_tsickle_Closure_declarations() {\n/** @type {?} */\nNgIfContext.prototype.$implicit;\n/** @type {?} */\nNgIfContext.prototype.ngIf;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, Directive, DoCheck, EmbeddedViewRef, Input, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDiffers, NgIterable, OnChanges, SimpleChanges, TemplateRef, TrackByFunction, ViewContainerRef, forwardRef, isDevMode} from '@angular/core';\n/**\n * \\@stable\n */\nexport class NgForOfContext<T> {\n/**\n * @param {?} $implicit\n * @param {?} ngForOf\n * @param {?} index\n * @param {?} count\n */\nconstructor(\npublic $implicit: T,\npublic ngForOf: NgIterable<T>,\npublic index: number,\npublic count: number) {}\n/**\n * @return {?}\n */\nget first(): boolean { return this.index === 0; }\n/**\n * @return {?}\n */\nget last(): boolean { return this.index === this.count - 1; }\n/**\n * @return {?}\n */\nget even(): boolean { return this.index % 2 === 0; }\n/**\n * @return {?}\n */\nget odd(): boolean { return !this.even; }\n}\n\nfunction NgForOfContext_tsickle_Closure_declarations() {\n/** @type {?} */\nNgForOfContext.prototype.$implicit;\n/** @type {?} */\nNgForOfContext.prototype.ngForOf;\n/** @type {?} */\nNgForOfContext.prototype.index;\n/** @type {?} */\nNgForOfContext.prototype.count;\n}\n\n/**\n * The `NgForOf` directive instantiates a template once per item from an iterable. The context\n * for each instantiated template inherits from the outer context with the given loop variable\n * set to the current item from the iterable.\n * \n * ### Local Variables\n * \n * `NgForOf` provides several exported values that can be aliased to local variables:\n * \n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\n * more complex then a property access, for example when using the async pipe (`userStreams |\n * async`).\n * - `index: number`: The index of the current item in the iterable.\n * - `first: boolean`: True when the item is the first item in the iterable.\n * - `last: boolean`: True when the item is the last item in the iterable.\n * - `even: boolean`: True when the item has an even index in the iterable.\n * - `odd: boolean`: True when the item has an odd index in the iterable.\n * \n * ```\n * <li *ngFor=\"let user of userObservable | async as users; index as i; first as isFirst\">\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\n * </li>\n * ```\n * \n * ### Change Propagation\n * \n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\n * \n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n * * Otherwise, the DOM element for that item will remain the same.\n * \n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n * those changes in the DOM. This has important implications for animations and any stateful\n * controls (such as `<input>` elements which accept user input) that are present. Inserted rows can\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\n * such as user input.\n * \n * It is possible for the identities of elements in the iterator to change while the data does not.\n * This can happen, for example, if the iterator produced from an RPC to the server, and that\n * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n * elements were deleted and all new elements inserted). This is an expensive operation and should\n * be avoided if possible.\n * \n * To customize the default tracking algorithm, `NgForOf` supports `trackBy` option.\n * `trackBy` takes a function which has two arguments: `index` and `item`.\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\n * \n * ### Syntax\n * \n * - `<li *ngFor=\"let item of items; index as i; trackBy: trackByFn\">...</li>`\n * - `<li template=\"ngFor let item of items; index as i; trackBy: trackByFn\">...</li>`\n * \n * With `<ng-template>` element:\n * \n * ```\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n *   <li>...</li>\n * </ng-template>\n * ```\n * \n * ### Example\n * \n * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n * example.\n * \n * \\@stable\n */\nexport class NgForOf<T> implements DoCheck, OnChanges {\n   ngForOf: NgIterable<T>;\n/**\n * @param {?} fn\n * @return {?}\n */\nset ngForTrackBy(fn: TrackByFunction<T>) {\n    if (isDevMode() && fn != null && typeof fn !== 'function') {\n      // TODO(vicb): use a log service once there is a public one available\n      if ( /** @type {?} */((<any>console)) && /** @type {?} */(( <any>console.warn))) {\n        console.warn(\n            `trackBy must be a function, but received ${JSON.stringify(fn)}. ` +\n            `See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.`);\n      }\n    }\n    this._trackByFn = fn;\n  }\n/**\n * @return {?}\n */\nget ngForTrackBy(): TrackByFunction<T> { return this._trackByFn; }\nprivate _differ: IterableDiffer<T>|null = null;\nprivate _trackByFn: TrackByFunction<T>;\n/**\n * @param {?} _viewContainer\n * @param {?} _template\n * @param {?} _differs\n */\nconstructor(\nprivate _viewContainer: ViewContainerRef,\nprivate _template: TemplateRef<NgForOfContext<T>>,\nprivate _differs: IterableDiffers) {}\n/**\n * @param {?} value\n * @return {?}\n */\nset ngForTemplate(value: TemplateRef<NgForOfContext<T>>) {\n    // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\n    // The current type is too restrictive; a template that just uses index, for example,\n    // should be acceptable.\n    if (value) {\n      this._template = value;\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if ('ngForOf' in changes) {\n      // React on ngForOf changes only once all inputs have been initialized\n      const /** @type {?} */ value = changes['ngForOf'].currentValue;\n      if (!this._differ && value) {\n        try {\n          this._differ = this._differs.find(value).create(this.ngForTrackBy);\n        } catch ( /** @type {?} */e) {\n          throw new Error(\n              `Cannot find a differ supporting object '${value}' of type '${getTypeNameForDebugging(value)}'. NgFor only supports binding to Iterables such as Arrays.`);\n        }\n      }\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n    if (this._differ) {\n      const /** @type {?} */ changes = this._differ.diff(this.ngForOf);\n      if (changes) this._applyChanges(changes);\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\n\nprivate _applyChanges(changes: IterableChanges<T>) {\n    const /** @type {?} */ insertTuples: RecordViewTuple<T>[] = [];\n    changes.forEachOperation(\n        (item: IterableChangeRecord<any>, adjustedPreviousIndex: number, currentIndex: number) => {\n          if (item.previousIndex == null) {\n            const /** @type {?} */ view = this._viewContainer.createEmbeddedView(\n                this._template, new NgForOfContext<T>( /** @type {?} */((null)), this.ngForOf, -1, -1), currentIndex);\n            const /** @type {?} */ tuple = new RecordViewTuple<T>(item, view);\n            insertTuples.push(tuple);\n          } else if (currentIndex == null) {\n            this._viewContainer.remove(adjustedPreviousIndex);\n          } else {\n            const /** @type {?} */ view = /** @type {?} */(( this._viewContainer.get(adjustedPreviousIndex)));\n            this._viewContainer.move(view, currentIndex);\n            const /** @type {?} */ tuple = new RecordViewTuple(item, /** @type {?} */(( <EmbeddedViewRef<NgForOfContext<T>>>view)));\n            insertTuples.push(tuple);\n          }\n        });\n\n    for (let /** @type {?} */ i = 0; i < insertTuples.length; i++) {\n      this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n    }\n\n    for (let /** @type {?} */ i = 0, /** @type {?} */ ilen = this._viewContainer.length; i < ilen; i++) {\n      const /** @type {?} */ viewRef = /** @type {?} */(( <EmbeddedViewRef<NgForOfContext<T>>>this._viewContainer.get(i)));\n      viewRef.context.index = i;\n      viewRef.context.count = ilen;\n    }\n\n    changes.forEachIdentityChange((record: any) => {\n      const /** @type {?} */ viewRef = /** @type {?} */((\n          <EmbeddedViewRef<NgForOfContext<T>>>this._viewContainer.get(record.currentIndex)));\n      viewRef.context.$implicit = record.item;\n    });\n  }\n/**\n * @param {?} view\n * @param {?} record\n * @return {?}\n */\n\nprivate _perViewChange(\n      view: EmbeddedViewRef<NgForOfContext<T>>, record: IterableChangeRecord<any>) {\n    view.context.$implicit = record.item;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: '[ngFor][ngForOf]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: IterableDiffers, },\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"ngForOf\": [{ type: Input },],\n\"ngForTrackBy\": [{ type: Input },],\n\"ngForTemplate\": [{ type: Input },],\n};\n}\n\nfunction NgForOf_tsickle_Closure_declarations() {\n/** @type {?} */\nNgForOf.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgForOf.ctorParameters;\n/** @type {?} */\nNgForOf.propDecorators;\n/** @type {?} */\nNgForOf.prototype.ngForOf;\n/** @type {?} */\nNgForOf.prototype._differ;\n/** @type {?} */\nNgForOf.prototype._trackByFn;\n/** @type {?} */\nNgForOf.prototype._viewContainer;\n/** @type {?} */\nNgForOf.prototype._template;\n/** @type {?} */\nNgForOf.prototype._differs;\n}\n\nclass RecordViewTuple<T> {\n/**\n * @param {?} record\n * @param {?} view\n */\nconstructor(public record: any,\npublic view: EmbeddedViewRef<NgForOfContext<T>>) {}\n}\n\nfunction RecordViewTuple_tsickle_Closure_declarations() {\n/** @type {?} */\nRecordViewTuple.prototype.record;\n/** @type {?} */\nRecordViewTuple.prototype.view;\n}\n\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentFactoryResolver, ComponentRef, Directive, Injector, Input, NgModuleFactory, NgModuleRef, OnChanges, OnDestroy, SimpleChanges, StaticProvider, Type, ViewContainerRef} from '@angular/core';\n/**\n * Instantiates a single {\\@link Component} type and inserts its Host View into current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n * \n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will get destroyed.\n * \n * ### Fine tune control\n * \n * You can control the component creation process by using the following optional attributes:\n * \n * * `ngComponentOutletInjector`: Optional custom {\\@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n * \n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if exists.\n * \n * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other\n * module, then load a component from that module.\n * \n * ### Syntax\n * \n * Simple\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n * \n * Customized injector/content\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n * \n * Customized ngModuleFactory\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModuleFactory: moduleFactory;\">\n * </ng-container>\n * ```\n * ## Example\n * \n * {\\@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n * \n * A more complete example with additional options:\n * \n * {\\@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n * A more complete example with ngModuleFactory:\n * \n * {\\@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}\n * \n * \\@experimental\n */\nexport class NgComponentOutlet implements OnChanges, OnDestroy {\n   ngComponentOutlet: Type<any>;\n   ngComponentOutletInjector: Injector;\n   ngComponentOutletContent: any[][];\n   ngComponentOutletNgModuleFactory: NgModuleFactory<any>;\nprivate _componentRef: ComponentRef<any>|null = null;\nprivate _moduleRef: NgModuleRef<any>|null = null;\n/**\n * @param {?} _viewContainerRef\n */\nconstructor(private _viewContainerRef: ViewContainerRef) {}\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    this._viewContainerRef.clear();\n    this._componentRef = null;\n\n    if (this.ngComponentOutlet) {\n      const /** @type {?} */ elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n\n      if (changes['ngComponentOutletNgModuleFactory']) {\n        if (this._moduleRef) this._moduleRef.destroy();\n\n        if (this.ngComponentOutletNgModuleFactory) {\n          const /** @type {?} */ parentModule = elInjector.get(NgModuleRef);\n          this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);\n        } else {\n          this._moduleRef = null;\n        }\n      }\n\n      const /** @type {?} */ componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :\n                                                         elInjector.get(ComponentFactoryResolver);\n\n      const /** @type {?} */ componentFactory =\n          componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);\n\n      this._componentRef = this._viewContainerRef.createComponent(\n          componentFactory, this._viewContainerRef.length, elInjector,\n          this.ngComponentOutletContent);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._moduleRef) this._moduleRef.destroy();\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: '[ngComponentOutlet]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"ngComponentOutlet\": [{ type: Input },],\n\"ngComponentOutletInjector\": [{ type: Input },],\n\"ngComponentOutletContent\": [{ type: Input },],\n\"ngComponentOutletNgModuleFactory\": [{ type: Input },],\n};\n}\n\nfunction NgComponentOutlet_tsickle_Closure_declarations() {\n/** @type {?} */\nNgComponentOutlet.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgComponentOutlet.ctorParameters;\n/** @type {?} */\nNgComponentOutlet.propDecorators;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutlet;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutletInjector;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutletContent;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutletNgModuleFactory;\n/** @type {?} */\nNgComponentOutlet.prototype._componentRef;\n/** @type {?} */\nNgComponentOutlet.prototype._moduleRef;\n/** @type {?} */\nNgComponentOutlet.prototype._viewContainerRef;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, DoCheck, ElementRef, Input, IterableChanges, IterableDiffer, IterableDiffers, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Renderer2, ɵisListLikeIterable as isListLikeIterable, ɵstringify as stringify} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Adds and removes CSS classes on an HTML element.\n * \n * \\@howToUse \n * ```\n *     <some-element [ngClass]=\"'first second'\">...</some-element>\n * \n *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n * \n *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n * \n *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n * \n *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n * \n * \\@description \n * \n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n * \n * \\@stable\n */\nexport class NgClass implements DoCheck {\nprivate _iterableDiffer: IterableDiffer<string>|null;\nprivate _keyValueDiffer: KeyValueDiffer<string, any>|null;\nprivate _initialClasses: string[] = [];\nprivate _rawClass: string[]|Set<string>|{[klass: string]: any};\n/**\n * @param {?} _iterableDiffers\n * @param {?} _keyValueDiffers\n * @param {?} _ngEl\n * @param {?} _renderer\n */\nconstructor(\nprivate _iterableDiffers: IterableDiffers,\nprivate _keyValueDiffers: KeyValueDiffers,\nprivate _ngEl: ElementRef,\nprivate _renderer: Renderer2) {}\n/**\n * @param {?} v\n * @return {?}\n */\nset klass(v: string) {\n    this._applyInitialClasses(true);\n    this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n    this._applyInitialClasses(false);\n    this._applyClasses(this._rawClass, false);\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset ngClass(v: string|string[]|Set<string>|{[klass: string]: any}) {\n    this._cleanupClasses(this._rawClass);\n\n    this._iterableDiffer = null;\n    this._keyValueDiffer = null;\n\n    this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n\n    if (this._rawClass) {\n      if (isListLikeIterable(this._rawClass)) {\n        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();\n      } else {\n        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();\n      }\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n    if (this._iterableDiffer) {\n      const /** @type {?} */ iterableChanges = this._iterableDiffer.diff( /** @type {?} */((this._rawClass as string[])));\n      if (iterableChanges) {\n        this._applyIterableChanges(iterableChanges);\n      }\n    } else if (this._keyValueDiffer) {\n      const /** @type {?} */ keyValueChanges = this._keyValueDiffer.diff( /** @type {?} */((this._rawClass as{[k: string]: any})));\n      if (keyValueChanges) {\n        this._applyKeyValueChanges(keyValueChanges);\n      }\n    }\n  }\n/**\n * @param {?} rawClassVal\n * @return {?}\n */\n\nprivate _cleanupClasses(rawClassVal: string[]|{[klass: string]: any}): void {\n    this._applyClasses(rawClassVal, true);\n    this._applyInitialClasses(false);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\n\nprivate _applyKeyValueChanges(changes: KeyValueChanges<string, any>): void {\n    changes.forEachAddedItem((record) => this._toggleClass(record.key, record.currentValue));\n    changes.forEachChangedItem((record) => this._toggleClass(record.key, record.currentValue));\n    changes.forEachRemovedItem((record) => {\n      if (record.previousValue) {\n        this._toggleClass(record.key, false);\n      }\n    });\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\n\nprivate _applyIterableChanges(changes: IterableChanges<string>): void {\n    changes.forEachAddedItem((record) => {\n      if (typeof record.item === 'string') {\n        this._toggleClass(record.item, true);\n      } else {\n        throw new Error(\n            `NgClass can only toggle CSS classes expressed as strings, got ${stringify(record.item)}`);\n      }\n    });\n\n    changes.forEachRemovedItem((record) => this._toggleClass(record.item, false));\n  }\n/**\n * @param {?} isCleanup\n * @return {?}\n */\n\nprivate _applyInitialClasses(isCleanup: boolean) {\n    this._initialClasses.forEach(klass => this._toggleClass(klass, !isCleanup));\n  }\n/**\n * @param {?} rawClassVal\n * @param {?} isCleanup\n * @return {?}\n */\n\nprivate _applyClasses(\n      rawClassVal: string[]|Set<string>|{[klass: string]: any}, isCleanup: boolean) {\n    if (rawClassVal) {\n      if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n        ( /** @type {?} */((<any>rawClassVal))).forEach((klass: string) => this._toggleClass(klass, !isCleanup));\n      } else {\n        Object.keys(rawClassVal).forEach(klass => {\n          if (rawClassVal[klass] != null) this._toggleClass(klass, !isCleanup);\n        });\n      }\n    }\n  }\n/**\n * @param {?} klass\n * @param {?} enabled\n * @return {?}\n */\n\nprivate _toggleClass(klass: string, enabled: boolean): void {\n    klass = klass.trim();\n    if (klass) {\n      klass.split(/\\s+/g).forEach(klass => {\n        if (enabled) {\n          this._renderer.addClass(this._ngEl.nativeElement, klass);\n        } else {\n          this._renderer.removeClass(this._ngEl.nativeElement, klass);\n        }\n      });\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: '[ngClass]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: IterableDiffers, },\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"klass\": [{ type: Input, args: ['class', ] },],\n\"ngClass\": [{ type: Input },],\n};\n}\n\nfunction NgClass_tsickle_Closure_declarations() {\n/** @type {?} */\nNgClass.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgClass.ctorParameters;\n/** @type {?} */\nNgClass.propDecorators;\n/** @type {?} */\nNgClass.prototype._iterableDiffer;\n/** @type {?} */\nNgClass.prototype._keyValueDiffer;\n/** @type {?} */\nNgClass.prototype._initialClasses;\n/** @type {?} */\nNgClass.prototype._rawClass;\n/** @type {?} */\nNgClass.prototype._iterableDiffers;\n/** @type {?} */\nNgClass.prototype._keyValueDiffers;\n/** @type {?} */\nNgClass.prototype._ngEl;\n/** @type {?} */\nNgClass.prototype._renderer;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?} cookieStr\n * @param {?} name\n * @return {?}\n */\nexport function parseCookieValue(cookieStr: string, name: string): string|null {\n  name = encodeURIComponent(name);\n  for (const /** @type {?} */ cookie of cookieStr.split(';')) {\n    const /** @type {?} */ eqIndex = cookie.indexOf('=');\n    const [cookieName, cookieValue]: string[] =\n        eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)];\n    if (cookieName.trim() === name) {\n      return decodeURIComponent(cookieValue);\n    }\n  }\n  return null;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {Plural, getLocalePluralCase} from './locale_data_api';\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class NgLocalization {\n  abstract getPluralCategory(value: any, locale?: string): string;\n}\n\nfunction NgLocalization_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} value\n * @param {?=} locale\n * @return {?}\n */\nNgLocalization.prototype.getPluralCategory = function(value, locale) {};\n}\n\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n * \n * \\@internal\n * @param {?} value\n * @param {?} cases\n * @param {?} ngLocalization\n * @param {?=} locale\n * @return {?}\n */\nexport function getPluralCategory(\n    value: number, cases: string[], ngLocalization: NgLocalization, locale?: string): string {\n  let /** @type {?} */ key = `=${value}`;\n\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n\n  key = ngLocalization.getPluralCategory(value, locale);\n\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n\n  if (cases.indexOf('other') > -1) {\n    return 'other';\n  }\n\n  throw new Error(`No plural message found for value \"${value}\"`);\n}\n/**\n * Returns the plural case based on the locale\n * \n * \\@experimental\n */\nexport class NgLocaleLocalization extends NgLocalization {\n/**\n * @param {?} locale\n */\nconstructor( protected locale: string) { super(); }\n/**\n * @param {?} value\n * @param {?=} locale\n * @return {?}\n */\ngetPluralCategory(value: any, locale?: string): string {\n    const /** @type {?} */ plural = getLocalePluralCase(locale || this.locale)(value);\n\n    switch (plural) {\n      case Plural.Zero:\n        return 'zero';\n      case Plural.One:\n        return 'one';\n      case Plural.Two:\n        return 'two';\n      case Plural.Few:\n        return 'few';\n      case Plural.Many:\n        return 'many';\n      default:\n        return 'other';\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction NgLocaleLocalization_tsickle_Closure_declarations() {\n/** @type {?} */\nNgLocaleLocalization.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgLocaleLocalization.ctorParameters;\n/** @type {?} */\nNgLocaleLocalization.prototype.locale;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CURRENCIES} from './currencies';\nimport localeEn from './locale_en';\nimport {LOCALE_DATA, LocaleDataIndex, ExtraLocaleDataIndex} from './locale_data';\nexport type NumberFormatStyle = number;\nexport let NumberFormatStyle: any = {};\nNumberFormatStyle.Decimal = 0;\nNumberFormatStyle.Percent = 1;\nNumberFormatStyle.Currency = 2;\nNumberFormatStyle.Scientific = 3;\nNumberFormatStyle[NumberFormatStyle.Decimal] = \"Decimal\";\nNumberFormatStyle[NumberFormatStyle.Percent] = \"Percent\";\nNumberFormatStyle[NumberFormatStyle.Currency] = \"Currency\";\nNumberFormatStyle[NumberFormatStyle.Scientific] = \"Scientific\";\n\nexport type Plural = number;\nexport let Plural: any = {};\nPlural.Zero = 0;\nPlural.One = 1;\nPlural.Two = 2;\nPlural.Few = 3;\nPlural.Many = 4;\nPlural.Other = 5;\nPlural[Plural.Zero] = \"Zero\";\nPlural[Plural.One] = \"One\";\nPlural[Plural.Two] = \"Two\";\nPlural[Plural.Few] = \"Few\";\nPlural[Plural.Many] = \"Many\";\nPlural[Plural.Other] = \"Other\";\n\nexport type FormStyle = number;\nexport let FormStyle: any = {};\nFormStyle.Format = 0;\nFormStyle.Standalone = 1;\nFormStyle[FormStyle.Format] = \"Format\";\nFormStyle[FormStyle.Standalone] = \"Standalone\";\n\nexport type TranslationWidth = number;\nexport let TranslationWidth: any = {};\nTranslationWidth.Narrow = 0;\nTranslationWidth.Abbreviated = 1;\nTranslationWidth.Wide = 2;\nTranslationWidth.Short = 3;\nTranslationWidth[TranslationWidth.Narrow] = \"Narrow\";\nTranslationWidth[TranslationWidth.Abbreviated] = \"Abbreviated\";\nTranslationWidth[TranslationWidth.Wide] = \"Wide\";\nTranslationWidth[TranslationWidth.Short] = \"Short\";\n\nexport type FormatWidth = number;\nexport let FormatWidth: any = {};\nFormatWidth.Short = 0;\nFormatWidth.Medium = 1;\nFormatWidth.Long = 2;\nFormatWidth.Full = 3;\nFormatWidth[FormatWidth.Short] = \"Short\";\nFormatWidth[FormatWidth.Medium] = \"Medium\";\nFormatWidth[FormatWidth.Long] = \"Long\";\nFormatWidth[FormatWidth.Full] = \"Full\";\n\nexport type NumberSymbol = number;\nexport let NumberSymbol: any = {};\nNumberSymbol.Decimal = 0;\nNumberSymbol.Group = 1;\nNumberSymbol.List = 2;\nNumberSymbol.PercentSign = 3;\nNumberSymbol.PlusSign = 4;\nNumberSymbol.MinusSign = 5;\nNumberSymbol.Exponential = 6;\nNumberSymbol.SuperscriptingExponent = 7;\nNumberSymbol.PerMille = 8;\nNumberSymbol.Infinity = 9;\nNumberSymbol.NaN = 10;\nNumberSymbol.TimeSeparator = 11;\nNumberSymbol.CurrencyDecimal = 12;\nNumberSymbol.CurrencyGroup = 13;\nNumberSymbol[NumberSymbol.Decimal] = \"Decimal\";\nNumberSymbol[NumberSymbol.Group] = \"Group\";\nNumberSymbol[NumberSymbol.List] = \"List\";\nNumberSymbol[NumberSymbol.PercentSign] = \"PercentSign\";\nNumberSymbol[NumberSymbol.PlusSign] = \"PlusSign\";\nNumberSymbol[NumberSymbol.MinusSign] = \"MinusSign\";\nNumberSymbol[NumberSymbol.Exponential] = \"Exponential\";\nNumberSymbol[NumberSymbol.SuperscriptingExponent] = \"SuperscriptingExponent\";\nNumberSymbol[NumberSymbol.PerMille] = \"PerMille\";\nNumberSymbol[NumberSymbol.Infinity] = \"Infinity\";\nNumberSymbol[NumberSymbol.NaN] = \"NaN\";\nNumberSymbol[NumberSymbol.TimeSeparator] = \"TimeSeparator\";\nNumberSymbol[NumberSymbol.CurrencyDecimal] = \"CurrencyDecimal\";\nNumberSymbol[NumberSymbol.CurrencyGroup] = \"CurrencyGroup\";\n\nexport type WeekDay = number;\nexport let WeekDay: any = {};\nWeekDay.Sunday = 0;\nWeekDay.Monday = 1;\nWeekDay.Tuesday = 2;\nWeekDay.Wednesday = 3;\nWeekDay.Thursday = 4;\nWeekDay.Friday = 5;\nWeekDay.Saturday = 6;\nWeekDay[WeekDay.Sunday] = \"Sunday\";\nWeekDay[WeekDay.Monday] = \"Monday\";\nWeekDay[WeekDay.Tuesday] = \"Tuesday\";\nWeekDay[WeekDay.Wednesday] = \"Wednesday\";\nWeekDay[WeekDay.Thursday] = \"Thursday\";\nWeekDay[WeekDay.Friday] = \"Friday\";\nWeekDay[WeekDay.Saturday] = \"Saturday\";\n\n/**\n * The locale id for the chosen locale (e.g `en-GB`).\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nexport function getLocaleId(locale: string): string {\n  return findLocaleData(locale)[LocaleDataIndex.LocaleId];\n}\n/**\n * Periods of the day (e.g. `[AM, PM]` for en-US).\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} formStyle\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleDayPeriods(\n    locale: string, formStyle: FormStyle, width: TranslationWidth): [string, string] {\n  const /** @type {?} */ data = findLocaleData(locale);\n  const /** @type {?} */ amPmData = /** @type {?} */(( <[\n    string, string\n  ][][]>[data[LocaleDataIndex.DayPeriodsFormat], data[LocaleDataIndex.DayPeriodsStandalone]]));\n  const /** @type {?} */ amPm = getLastDefinedValue(amPmData, formStyle);\n  return getLastDefinedValue(amPm, width);\n}\n/**\n * Days of the week for the Gregorian calendar (e.g. `[Sunday, Monday, ... Saturday]` for en-US).\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} formStyle\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleDayNames(\n    locale: string, formStyle: FormStyle, width: TranslationWidth): string[] {\n  const /** @type {?} */ data = findLocaleData(locale);\n  const /** @type {?} */ daysData = /** @type {?} */((\n      <string[][][]>[data[LocaleDataIndex.DaysFormat], data[LocaleDataIndex.DaysStandalone]]));\n  const /** @type {?} */ days = getLastDefinedValue(daysData, formStyle);\n  return getLastDefinedValue(days, width);\n}\n/**\n * Months of the year for the Gregorian calendar (e.g. `[January, February, ...]` for en-US).\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} formStyle\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleMonthNames(\n    locale: string, formStyle: FormStyle, width: TranslationWidth): string[] {\n  const /** @type {?} */ data = findLocaleData(locale);\n  const /** @type {?} */ monthsData = /** @type {?} */((\n      <string[][][]>[data[LocaleDataIndex.MonthsFormat], data[LocaleDataIndex.MonthsStandalone]]));\n  const /** @type {?} */ months = getLastDefinedValue(monthsData, formStyle);\n  return getLastDefinedValue(months, width);\n}\n/**\n * Eras for the Gregorian calendar (e.g. AD/BC).\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleEraNames(locale: string, width: TranslationWidth): [string, string] {\n  const /** @type {?} */ data = findLocaleData(locale);\n  const /** @type {?} */ erasData = /** @type {?} */(( <[string, string][]>data[LocaleDataIndex.Eras]));\n  return getLastDefinedValue(erasData, width);\n}\n/**\n * First day of the week for this locale, based on english days (Sunday = 0, Monday = 1, ...).\n * For example in french the value would be 1 because the first day of the week is Monday.\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nexport function getLocaleFirstDayOfWeek(locale: string): WeekDay {\n  const /** @type {?} */ data = findLocaleData(locale);\n  return data[LocaleDataIndex.FirstDayOfWeek];\n}\n/**\n * Range of days in the week that represent the week-end for this locale, based on english days\n * (Sunday = 0, Monday = 1, ...).\n * For example in english the value would be [6,0] for Saturday to Sunday.\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nexport function getLocaleWeekEndRange(locale: string): [WeekDay, WeekDay] {\n  const /** @type {?} */ data = findLocaleData(locale);\n  return data[LocaleDataIndex.WeekendRange];\n}\n/**\n * Date format that depends on the locale.\n * \n * There are four basic date formats:\n * - `full` should contain long-weekday (EEEE), year (y), long-month (MMMM), day (d).\n * \n *  For example, English uses `EEEE, MMMM d, y`, corresponding to a date like\n *  \"Tuesday, September 14, 1999\".\n * \n * - `long` should contain year, long-month, day.\n * \n *  For example, `MMMM d, y`, corresponding to a date like \"September 14, 1999\".\n * \n * - `medium` should contain year, abbreviated-month (MMM), day.\n * \n *  For example, `MMM d, y`, corresponding to a date like \"Sep 14, 1999\".\n *  For languages that do not use abbreviated months, use the numeric month (MM/M). For example,\n *  `y/MM/dd`, corresponding to a date like \"1999/09/14\".\n * \n * - `short` should contain year, numeric-month (MM/M), and day.\n * \n *  For example, `M/d/yy`, corresponding to a date like \"9/14/99\".\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleDateFormat(locale: string, width: FormatWidth): string {\n  const /** @type {?} */ data = findLocaleData(locale);\n  return data[LocaleDataIndex.DateFormat][width];\n}\n/**\n * Time format that depends on the locale.\n * \n * The standard formats include four basic time formats:\n * - `full` should contain hour (h/H), minute (mm), second (ss), and zone (zzzz).\n * - `long` should contain hour, minute, second, and zone (z)\n * - `medium` should contain hour, minute, second.\n * - `short` should contain hour, minute.\n * \n * Note: The patterns depend on whether the main country using your language uses 12-hour time or\n * not:\n * - For 12-hour time, use a pattern like `hh:mm a` using h to mean a 12-hour clock cycle running\n * 1 through 12 (midnight plus 1 minute is 12:01), or using K to mean a 12-hour clock cycle\n * running 0 through 11 (midnight plus 1 minute is 0:01).\n * - For 24-hour time, use a pattern like `HH:mm` using H to mean a 24-hour clock cycle running 0\n * through 23 (midnight plus 1 minute is 0:01), or using k to mean a 24-hour clock cycle running\n * 1 through 24 (midnight plus 1 minute is 24:01).\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleTimeFormat(locale: string, width: FormatWidth): string {\n  const /** @type {?} */ data = findLocaleData(locale);\n  return data[LocaleDataIndex.TimeFormat][width];\n}\n/**\n * Date-time format that depends on the locale.\n * \n * The date-time pattern shows how to combine separate patterns for date (represented by {1})\n * and time (represented by {0}) into a single pattern. It usually doesn't need to be changed.\n * What you want to pay attention to are:\n * - possibly removing a space for languages that don't use it, such as many East Asian languages\n * - possibly adding a comma, other punctuation, or a combining word\n * \n * For example:\n * - English uses `{1} 'at' {0}` or `{1}, {0}` (depending on date style), while Japanese uses\n *  `{1}{0}`.\n * - An English formatted date-time using the combining pattern `{1}, {0}` could be\n *  `Dec 10, 2010, 3:59:49 PM`. Notice the comma and space between the date portion and the time\n *  portion.\n * \n * There are four formats (`full`, `long`, `medium`, `short`); the determination of which to use\n * is normally based on the date style. For example, if the date has a full month and weekday\n * name, the full combining pattern will be used to combine that with a time. If the date has\n * numeric month, the short version of the combining pattern will be used to combine that with a\n * time. English uses `{1} 'at' {0}` for full and long styles, and `{1}, {0}` for medium and short\n * styles.\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleDateTimeFormat(locale: string, width: FormatWidth): string {\n  const /** @type {?} */ data = findLocaleData(locale);\n  const /** @type {?} */ dateTimeFormatData = /** @type {?} */(( <string[]>data[LocaleDataIndex.DateTimeFormat]));\n  return getLastDefinedValue(dateTimeFormatData, width);\n}\n/**\n * Number symbol that can be used to replace placeholders in number formats.\n * See {\\@link NumberSymbol} for more information.\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} symbol\n * @return {?}\n */\nexport function getLocaleNumberSymbol(locale: string, symbol: NumberSymbol): string {\n  const /** @type {?} */ data = findLocaleData(locale);\n  const /** @type {?} */ res = data[LocaleDataIndex.NumberSymbols][symbol];\n  if (typeof res === 'undefined') {\n    if (symbol === NumberSymbol.CurrencyDecimal) {\n      return data[LocaleDataIndex.NumberSymbols][NumberSymbol.Decimal];\n    } else if (symbol === NumberSymbol.CurrencyGroup) {\n      return data[LocaleDataIndex.NumberSymbols][NumberSymbol.Decimal];\n    }\n  }\n  return res;\n}\n/**\n * Number format that depends on the locale.\n * \n * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`\n * when used to format the number 12345.678 could result in \"12'345,67\". That would happen if the\n * grouping separator for your language is an apostrophe, and the decimal separator is a comma.\n * \n * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders;\n * they stand for the decimal separator, and so on, and are NOT real characters.\n * You must NOT \"translate\" the placeholders; for example, don't change `.` to `,` even though in\n * your language the decimal point is written with a comma. The symbols should be replaced by the\n * local equivalents, using the Number Symbols for your language.\n * \n * Here are the special characters used in number patterns:\n * \n * | Symbol | Meaning |\n * |--------|---------|\n * | . | Replaced automatically by the character used for the decimal point. |\n * | , | Replaced by the \"grouping\" (thousands) separator. |\n * | 0 | Replaced by a digit (or zero if there aren't enough digits). |\n * | # | Replaced by a digit (or nothing if there aren't enough). |\n * | ¤ | This will be replaced by a currency symbol, such as $ or USD. |\n * | % | This marks a percent format. The % symbol may change position, but must be retained. |\n * | E | This marks a scientific format. The E symbol may change position, but must be retained. |\n * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |\n * \n * You can find more information\n * [on the CLDR website](http://cldr.unicode.org/translation/number-patterns)\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} type\n * @return {?}\n */\nexport function getLocaleNumberFormat(locale: string, type: NumberFormatStyle): string {\n  const /** @type {?} */ data = findLocaleData(locale);\n  return data[LocaleDataIndex.NumberFormats][type];\n}\n/**\n * The symbol used to represent the currency for the main country using this locale (e.g. $ for\n * the locale en-US).\n * The symbol will be `null` if the main country cannot be determined.\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nexport function getLocaleCurrencySymbol(locale: string): string|null {\n  const /** @type {?} */ data = findLocaleData(locale);\n  return data[LocaleDataIndex.CurrencySymbol] || null;\n}\n/**\n * The name of the currency for the main country using this locale (e.g. USD for the locale\n * en-US).\n * The name will be `null` if the main country cannot be determined.\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nexport function getLocaleCurrencyName(locale: string): string|null {\n  const /** @type {?} */ data = findLocaleData(locale);\n  return data[LocaleDataIndex.CurrencyName] || null;\n}\n/**\n * The locale plural function used by ICU expressions to determine the plural case to use.\n * See {\\@link NgPlural} for more information.\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nexport function getLocalePluralCase(locale: string): (value: number) => Plural {\n  const /** @type {?} */ data = findLocaleData(locale);\n  return data[LocaleDataIndex.PluralCase];\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction checkFullData(data: any) {\n  if (!data[LocaleDataIndex.ExtraData]) {\n    throw new Error(\n        `Missing extra locale data for the locale \"${data[LocaleDataIndex.LocaleId]}\". Use \"registerLocaleData\" to load new data. See the \"I18n guide\" on angular.io to know more.`);\n  }\n}\n/**\n * Rules used to determine which day period to use (See `dayPeriods` below).\n * The rules can either be an array or a single value. If it's an array, consider it as \"from\"\n * and \"to\". If it's a single value then it means that the period is only valid at this exact\n * value.\n * There is always the same number of rules as the number of day periods, which means that the\n * first rule is applied to the first day period and so on.\n * You should fallback to AM/PM when there are no rules available.\n * \n * Note: this is only available if you load the full locale data.\n * See the {\\@linkDocs guide/i18n#i18n-pipes \"I18n guide\"} to know how to import additional locale\n * data.\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nexport function getLocaleExtraDayPeriodRules(locale: string): (Time | [Time, Time])[] {\n  const /** @type {?} */ data = findLocaleData(locale);\n  checkFullData(data);\n  const /** @type {?} */ rules = data[LocaleDataIndex.ExtraData][ExtraLocaleDataIndex.ExtraDayPeriodsRules] || [];\n  return rules.map((rule: string | [string, string]) => {\n    if (typeof rule === 'string') {\n      return extractTime(rule);\n    }\n    return [extractTime(rule[0]), extractTime(rule[1])];\n  });\n}\n/**\n * Day Periods indicate roughly how the day is broken up in different languages (e.g. morning,\n * noon, afternoon, midnight, ...).\n * You should use the function {\\@link getLocaleExtraDayPeriodRules} to determine which period to\n * use.\n * You should fallback to AM/PM when there are no day periods available.\n * \n * Note: this is only available if you load the full locale data.\n * See the {\\@linkDocs guide/i18n#i18n-pipes \"I18n guide\"} to know how to import additional locale\n * data.\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} formStyle\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleExtraDayPeriods(\n    locale: string, formStyle: FormStyle, width: TranslationWidth): string[] {\n  const /** @type {?} */ data = findLocaleData(locale);\n  checkFullData(data);\n  const /** @type {?} */ dayPeriodsData = /** @type {?} */(( <string[][][]>[\n    data[LocaleDataIndex.ExtraData][ExtraLocaleDataIndex.ExtraDayPeriodFormats],\n    data[LocaleDataIndex.ExtraData][ExtraLocaleDataIndex.ExtraDayPeriodStandalone]\n  ]));\n  const /** @type {?} */ dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];\n  return getLastDefinedValue(dayPeriods, width) || [];\n}\n/**\n * Returns the first value that is defined in an array, going backwards.\n * \n * To avoid repeating the same data (e.g. when \"format\" and \"standalone\" are the same) we only\n * add the first one to the locale data arrays, the other ones are only defined when different.\n * We use this function to retrieve the first defined value.\n * \n * \\@experimental i18n support is experimental.\n * @template T\n * @param {?} data\n * @param {?} index\n * @return {?}\n */\nfunction getLastDefinedValue<T>(data: T[], index: number): T {\n  for (let /** @type {?} */ i = index; i > -1; i--) {\n    if (typeof data[i] !== 'undefined') {\n      return data[i];\n    }\n  }\n  throw new Error('Locale data API: locale data undefined');\n}\n\n/**\n * A representation of the time with hours and minutes\n *\n * @experimental i18n support is experimental.\n */\nexport type Time = {\n  hours: number,\n  minutes: number\n};\n/**\n * Extract the hours and minutes from a string like \"15:45\"\n * @param {?} time\n * @return {?}\n */\nfunction extractTime(time: string): Time {\n  const [h, m] = time.split(':');\n  return {hours: +h, minutes: +m};\n}\n/**\n * Finds the locale data for a locale id\n * \n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nexport function findLocaleData(locale: string): any {\n  const /** @type {?} */ normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n\n  let /** @type {?} */ match = LOCALE_DATA[normalizedLocale];\n  if (match) {\n    return match;\n  }\n\n  // let's try to find a parent locale\n  const /** @type {?} */ parentLocale = normalizedLocale.split('-')[0];\n  match = LOCALE_DATA[parentLocale];\n\n  if (match) {\n    return match;\n  }\n\n  if (parentLocale === 'en') {\n    return localeEn;\n  }\n\n  throw new Error(`Missing locale data for the locale \"${locale}\".`);\n}\n/**\n * Return the currency symbol for a given currency code, or the code if no symbol available\n * (e.g.: $, US$, or USD)\n * \n * \\@internal\n * @param {?} code\n * @param {?} format\n * @return {?}\n */\nexport function findCurrencySymbol(code: string, format: 'wide' | 'narrow') {\n  const /** @type {?} */ currency = CURRENCIES[code] || {};\n  const /** @type {?} */ symbol = currency[0] || code;\n  return format === 'wide' ? symbol : currency[1] || symbol;\n}","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const /** @type {?} */ LOCALE_DATA: {[localeId: string]: any} = {};\n/**\n * Register global data to be used internally by Angular. See the\n * {\\@linkDocs guide/i18n#i18n-pipes \"I18n guide\"} to know how to import additional locale data.\n * \n * \\@experimental i18n support is experimental.\n * @param {?} data\n * @param {?=} extraData\n * @return {?}\n */\nexport function registerLocaleData(data: any, extraData?: any) {\n  const /** @type {?} */ localeId = data[LocaleDataIndex.LocaleId].toLowerCase().replace(/_/g, '-');\n  LOCALE_DATA[localeId] = data;\n  if (extraData) {\n    LOCALE_DATA[localeId][LocaleDataIndex.ExtraData] = extraData;\n  }\n}\n\n/**\n * Index of each type of locale data from the locale data array\n */\nexport const enum LocaleDataIndex {\n  LocaleId = 0,\n  DayPeriodsFormat,\n  DayPeriodsStandalone,\n  DaysFormat,\n  DaysStandalone,\n  MonthsFormat,\n  MonthsStandalone,\n  Eras,\n  FirstDayOfWeek,\n  WeekendRange,\n  DateFormat,\n  TimeFormat,\n  DateTimeFormat,\n  NumberSymbols,\n  NumberFormats,\n  CurrencySymbol,\n  CurrencyName,\n  PluralCase,\n  ExtraData\n}\n\n/**\n * Index of each type of locale data from the extra locale data array\n */\nexport const enum ExtraLocaleDataIndex {\n  ExtraDayPeriodFormats = 0,\n  ExtraDayPeriodStandalone,\n  ExtraDayPeriodsRules\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// THIS CODE IS GENERATED - DO NOT MODIFY\n// See angular/tools/gulp-tasks/cldr/extract.js\n\nexport default [\n  'en',\n  [\n    ['a', 'p'],\n    ['AM', 'PM'],\n  ],\n  [\n    ['AM', 'PM'],\n    ,\n  ],\n  [\n    ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n  ],\n  ,\n  [\n    ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n    ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    [\n      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n      'October', 'November', 'December'\n    ]\n  ],\n  , [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n  ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n  ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],\n  [\n    '{1}, {0}',\n    ,\n    '{1} \\'at\\' {0}',\n  ],\n  ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n  ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar',\n  function(n: number):\n      number {\n        let /** @type {?} */ i = Math.floor(Math.abs(n)), /** @type {?} */ v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0) return 1;\n        return 5;\n      }\n];\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * \\@experimental\n */\nexport const /** @type {?} */ CURRENCIES: {[code: string]: (string | undefined)[]} = {\n  'AOA': [, 'Kz'],\n  'ARS': [, '$'],\n  'AUD': ['A$', '$'],\n  'BAM': [, 'KM'],\n  'BBD': [, '$'],\n  'BDT': [, '৳'],\n  'BMD': [, '$'],\n  'BND': [, '$'],\n  'BOB': [, 'Bs'],\n  'BRL': ['R$'],\n  'BSD': [, '$'],\n  'BWP': [, 'P'],\n  'BYN': [, 'р.'],\n  'BZD': [, '$'],\n  'CAD': ['CA$', '$'],\n  'CLP': [, '$'],\n  'CNY': ['CN¥', '¥'],\n  'COP': [, '$'],\n  'CRC': [, '₡'],\n  'CUC': [, '$'],\n  'CUP': [, '$'],\n  'CZK': [, 'Kč'],\n  'DKK': [, 'kr'],\n  'DOP': [, '$'],\n  'EGP': [, 'E£'],\n  'ESP': [, '₧'],\n  'EUR': ['€'],\n  'FJD': [, '$'],\n  'FKP': [, '£'],\n  'GBP': ['£'],\n  'GEL': [, '₾'],\n  'GIP': [, '£'],\n  'GNF': [, 'FG'],\n  'GTQ': [, 'Q'],\n  'GYD': [, '$'],\n  'HKD': ['HK$', '$'],\n  'HNL': [, 'L'],\n  'HRK': [, 'kn'],\n  'HUF': [, 'Ft'],\n  'IDR': [, 'Rp'],\n  'ILS': ['₪'],\n  'INR': ['₹'],\n  'ISK': [, 'kr'],\n  'JMD': [, '$'],\n  'JPY': ['¥'],\n  'KHR': [, '៛'],\n  'KMF': [, 'CF'],\n  'KPW': [, '₩'],\n  'KRW': ['₩'],\n  'KYD': [, '$'],\n  'KZT': [, '₸'],\n  'LAK': [, '₭'],\n  'LBP': [, 'L£'],\n  'LKR': [, 'Rs'],\n  'LRD': [, '$'],\n  'LTL': [, 'Lt'],\n  'LVL': [, 'Ls'],\n  'MGA': [, 'Ar'],\n  'MMK': [, 'K'],\n  'MNT': [, '₮'],\n  'MUR': [, 'Rs'],\n  'MXN': ['MX$', '$'],\n  'MYR': [, 'RM'],\n  'NAD': [, '$'],\n  'NGN': [, '₦'],\n  'NIO': [, 'C$'],\n  'NOK': [, 'kr'],\n  'NPR': [, 'Rs'],\n  'NZD': ['NZ$', '$'],\n  'PHP': [, '₱'],\n  'PKR': [, 'Rs'],\n  'PLN': [, 'zł'],\n  'PYG': [, '₲'],\n  'RON': [, 'lei'],\n  'RUB': [, '₽'],\n  'RUR': [, 'р.'],\n  'RWF': [, 'RF'],\n  'SBD': [, '$'],\n  'SEK': [, 'kr'],\n  'SGD': [, '$'],\n  'SHP': [, '£'],\n  'SRD': [, '$'],\n  'SSP': [, '£'],\n  'STD': [, 'Db'],\n  'SYP': [, '£'],\n  'THB': [, '฿'],\n  'TOP': [, 'T$'],\n  'TRY': [, '₺'],\n  'TTD': [, '$'],\n  'TWD': ['NT$', '$'],\n  'UAH': [, '₴'],\n  'USD': ['$'],\n  'UYU': [, '$'],\n  'VEF': [, 'Bs'],\n  'VND': ['₫'],\n  'XAF': ['FCFA'],\n  'XCD': ['EC$', '$'],\n  'XOF': ['CFA'],\n  'XPF': ['CFPF'],\n  'ZAR': [, 'R'],\n  'ZMW': [, 'ZK'],\n};\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {PlatformLocation,LOCATION_INITIALIZED,LocationChangeEvent,LocationChangeListener} from './platform_location';\nexport {LocationStrategy,APP_BASE_HREF} from './location_strategy';\nexport {HashLocationStrategy} from './hash_location_strategy';\nexport {PathLocationStrategy} from './path_location_strategy';\nexport {PopStateEvent,Location} from './location';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Optional} from '@angular/core';\n\n\nimport {Location} from './location';\nimport {APP_BASE_HREF, LocationStrategy} from './location_strategy';\nimport {LocationChangeListener, PlatformLocation} from './platform_location';\n/**\n * \\@whatItDoes Use URL for storing application location data.\n * \\@description \n * `PathLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n * {\\@link Location} service to represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n * \n * If you're using `PathLocationStrategy`, you must provide a {\\@link APP_BASE_HREF}\n * or add a base element to the document. This URL prefix that will be preserved\n * when generating and recognizing URLs.\n * \n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n * \n * Similarly, if you add `<base href='/my/app'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n * \n * ### Example\n * \n * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n * \n * \\@stable\n */\nexport class PathLocationStrategy extends LocationStrategy {\nprivate _baseHref: string;\n/**\n * @param {?} _platformLocation\n * @param {?=} href\n */\nconstructor(\nprivate _platformLocation: PlatformLocation,\n        href?: string) {\n    super();\n\n    if (href == null) {\n      href = this._platformLocation.getBaseHrefFromDOM();\n    }\n\n    if (href == null) {\n      throw new Error(\n          `No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.`);\n    }\n\n    this._baseHref = href;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener): void {\n    this._platformLocation.onPopState(fn);\n    this._platformLocation.onHashChange(fn);\n  }\n/**\n * @return {?}\n */\ngetBaseHref(): string { return this._baseHref; }\n/**\n * @param {?} internal\n * @return {?}\n */\nprepareExternalUrl(internal: string): string {\n    return Location.joinWithSlash(this._baseHref, internal);\n  }\n/**\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash: boolean = false): string {\n    const /** @type {?} */ pathname = this._platformLocation.pathname +\n        Location.normalizeQueryParams(this._platformLocation.search);\n    const /** @type {?} */ hash = this._platformLocation.hash;\n    return hash && includeHash ? `${pathname}${hash}` : pathname;\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\npushState(state: any, title: string, url: string, queryParams: string) {\n    const /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n    this._platformLocation.pushState(state, title, externalUrl);\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\nreplaceState(state: any, title: string, url: string, queryParams: string) {\n    const /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n    this._platformLocation.replaceState(state, title, externalUrl);\n  }\n/**\n * @return {?}\n */\nforward(): void { this._platformLocation.forward(); }\n/**\n * @return {?}\n */\nback(): void { this._platformLocation.back(); }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: PlatformLocation, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF, ] }, ]},\n];\n}\n\nfunction PathLocationStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nPathLocationStrategy.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPathLocationStrategy.ctorParameters;\n/** @type {?} */\nPathLocationStrategy.prototype._baseHref;\n/** @type {?} */\nPathLocationStrategy.prototype._platformLocation;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Optional} from '@angular/core';\n\n\nimport {Location} from './location';\nimport {APP_BASE_HREF, LocationStrategy} from './location_strategy';\nimport {LocationChangeListener, PlatformLocation} from './platform_location';\n/**\n * \\@whatItDoes Use URL hash for storing application location data.\n * \\@description \n * `HashLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n * {\\@link Location} service to represent its state in the\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n * of the browser's URL.\n * \n * For instance, if you call `location.go('/foo')`, the browser's URL will become\n * `example.com#/foo`.\n * \n * ### Example\n * \n * {\\@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n * \n * \\@stable\n */\nexport class HashLocationStrategy extends LocationStrategy {\nprivate _baseHref: string = '';\n/**\n * @param {?} _platformLocation\n * @param {?=} _baseHref\n */\nconstructor(\nprivate _platformLocation: PlatformLocation,\n        _baseHref?: string) {\n    super();\n    if (_baseHref != null) {\n      this._baseHref = _baseHref;\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener): void {\n    this._platformLocation.onPopState(fn);\n    this._platformLocation.onHashChange(fn);\n  }\n/**\n * @return {?}\n */\ngetBaseHref(): string { return this._baseHref; }\n/**\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash: boolean = false): string {\n    // the hash value is always prefixed with a `#`\n    // and if it is empty then it will stay empty\n    let /** @type {?} */ path = this._platformLocation.hash;\n    if (path == null) path = '#';\n\n    return path.length > 0 ? path.substring(1) : path;\n  }\n/**\n * @param {?} internal\n * @return {?}\n */\nprepareExternalUrl(internal: string): string {\n    const /** @type {?} */ url = Location.joinWithSlash(this._baseHref, internal);\n    return url.length > 0 ? ('#' + url) : url;\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} path\n * @param {?} queryParams\n * @return {?}\n */\npushState(state: any, title: string, path: string, queryParams: string) {\n    let /** @type {?} */ url: string|null =\n        this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n    if (url.length == 0) {\n      url = this._platformLocation.pathname;\n    }\n    this._platformLocation.pushState(state, title, url);\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} path\n * @param {?} queryParams\n * @return {?}\n */\nreplaceState(state: any, title: string, path: string, queryParams: string) {\n    let /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n    if (url.length == 0) {\n      url = this._platformLocation.pathname;\n    }\n    this._platformLocation.replaceState(state, title, url);\n  }\n/**\n * @return {?}\n */\nforward(): void { this._platformLocation.forward(); }\n/**\n * @return {?}\n */\nback(): void { this._platformLocation.back(); }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: PlatformLocation, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF, ] }, ]},\n];\n}\n\nfunction HashLocationStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nHashLocationStrategy.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHashLocationStrategy.ctorParameters;\n/** @type {?} */\nHashLocationStrategy.prototype._baseHref;\n/** @type {?} */\nHashLocationStrategy.prototype._platformLocation;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, Injectable} from '@angular/core';\n\nimport {LocationStrategy} from './location_strategy';\n/**\n * \\@experimental\n * @record\n */\nexport function PopStateEvent() {}\n\n\nfunction PopStateEvent_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nPopStateEvent.prototype.pop;\n/** @type {?|undefined} */\nPopStateEvent.prototype.type;\n/** @type {?|undefined} */\nPopStateEvent.prototype.url;\n}\n\n\n/** @experimental */\nexport interface PopStateEvent {\n  pop?: boolean;\n  type?: string;\n  url?: string;\n}\n/**\n * \\@whatItDoes `Location` is a service that applications can use to interact with a browser's URL.\n * \\@description \n * Depending on which {\\@link LocationStrategy} is used, `Location` will either persist\n * to the URL's path or the URL's hash segment.\n * \n * Note: it's better to use {\\@link Router#navigate} service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n * \n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n * \n * ### Example\n * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n * \\@stable\n */\nexport class Location {\n/**\n * \\@internal\n */\n_subject: EventEmitter<any> = new EventEmitter();\n/**\n * \\@internal\n */\n_baseHref: string;\n/**\n * \\@internal\n */\n_platformStrategy: LocationStrategy;\n/**\n * @param {?} platformStrategy\n */\nconstructor(platformStrategy: LocationStrategy) {\n    this._platformStrategy = platformStrategy;\n    const /** @type {?} */ browserBaseHref = this._platformStrategy.getBaseHref();\n    this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n    this._platformStrategy.onPopState((ev) => {\n      this._subject.emit({\n        'url': this.path(true),\n        'pop': true,\n        'type': ev.type,\n      });\n    });\n  }\n/**\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash: boolean = false): string {\n    return this.normalize(this._platformStrategy.path(includeHash));\n  }\n/**\n * Normalizes the given path and compares to the current normalized path.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\nisCurrentPathEqualTo(path: string, query: string = ''): boolean {\n    return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n  }\n/**\n * Given a string representing a URL, returns the normalized URL path without leading or\n * trailing slashes.\n * @param {?} url\n * @return {?}\n */\nnormalize(url: string): string {\n    return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n  }\n/**\n * Given a string representing a URL, returns the platform-specific external URL path.\n * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n * @param {?} url\n * @return {?}\n */\nprepareExternalUrl(url: string): string {\n    if (url && url[0] !== '/') {\n      url = '/' + url;\n    }\n    return this._platformStrategy.prepareExternalUrl(url);\n  }\n/**\n * Changes the browsers URL to the normalized version of the given URL, and pushes a\n * new item onto the platform's history.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\ngo(path: string, query: string = ''): void {\n    this._platformStrategy.pushState(null, '', path, query);\n  }\n/**\n * Changes the browsers URL to the normalized version of the given URL, and replaces\n * the top item on the platform's history stack.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\nreplaceState(path: string, query: string = ''): void {\n    this._platformStrategy.replaceState(null, '', path, query);\n  }\n/**\n * Navigates forward in the platform's history.\n * @return {?}\n */\nforward(): void { this._platformStrategy.forward(); }\n/**\n * Navigates back in the platform's history.\n * @return {?}\n */\nback(): void { this._platformStrategy.back(); }\n/**\n * Subscribe to the platform's `popState` events.\n * @param {?} onNext\n * @param {?=} onThrow\n * @param {?=} onReturn\n * @return {?}\n */\nsubscribe(\n      onNext: (value: PopStateEvent) => void, onThrow?: ((exception: any) => void)|null,\n      onReturn?: (() => void)|null): Object {\n    return this._subject.subscribe({next: onNext, error: onThrow, complete: onReturn});\n  }\n/**\n * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n * is.\n * @param {?} params\n * @return {?}\n */\n\npublic static normalizeQueryParams(params: string): string {\n    return params && params[0] !== '?' ? '?' + params : params;\n  }\n/**\n * Given 2 parts of a url, join them with a slash if needed.\n * @param {?} start\n * @param {?} end\n * @return {?}\n */\n\npublic static joinWithSlash(start: string, end: string): string {\n    if (start.length == 0) {\n      return end;\n    }\n    if (end.length == 0) {\n      return start;\n    }\n    let /** @type {?} */ slashes = 0;\n    if (start.endsWith('/')) {\n      slashes++;\n    }\n    if (end.startsWith('/')) {\n      slashes++;\n    }\n    if (slashes == 2) {\n      return start + end.substring(1);\n    }\n    if (slashes == 1) {\n      return start + end;\n    }\n    return start + '/' + end;\n  }\n/**\n * If url has a trailing slash, remove it, otherwise return url as is. This\n * method looks for the first occurence of either #, ?, or the end of the\n * line as `/` characters after any of these should not be replaced.\n * @param {?} url\n * @return {?}\n */\n\npublic static stripTrailingSlash(url: string): string {\n    const /** @type {?} */ match = url.match(/#|\\?|$/);\n    const /** @type {?} */ pathEndIdx = match && match.index || url.length;\n    const /** @type {?} */ droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\n    return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: LocationStrategy, },\n];\n}\n\nfunction Location_tsickle_Closure_declarations() {\n/** @type {?} */\nLocation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocation.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nLocation.prototype._subject;\n/**\n * \\@internal\n * @type {?}\n */\nLocation.prototype._baseHref;\n/**\n * \\@internal\n * @type {?}\n */\nLocation.prototype._platformStrategy;\n}\n\n/**\n * @param {?} baseHref\n * @param {?} url\n * @return {?}\n */\nfunction _stripBaseHref(baseHref: string, url: string): string {\n  return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction _stripIndexHtml(url: string): string {\n  return url.replace(/\\/index.html$/, '');\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {LocationChangeListener} from './platform_location';\n/**\n * `LocationStrategy` is responsible for representing and reading route state\n * from the browser's URL. Angular provides two strategies:\n * {\\@link HashLocationStrategy} and {\\@link PathLocationStrategy}.\n * \n * This is used under the hood of the {\\@link Location} service.\n * \n * Applications should use the {\\@link Router} or {\\@link Location} services to\n * interact with application route state.\n * \n * For instance, {\\@link HashLocationStrategy} produces URLs like\n * `http://example.com#/foo`, and {\\@link PathLocationStrategy} produces\n * `http://example.com/foo` as an equivalent URL.\n * \n * See these two classes for more.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class LocationStrategy {\n  abstract path(includeHash?: boolean): string;\n  abstract prepareExternalUrl(internal: string): string;\n  abstract pushState(state: any, title: string, url: string, queryParams: string): void;\n  abstract replaceState(state: any, title: string, url: string, queryParams: string): void;\n  abstract forward(): void;\n  abstract back(): void;\n  abstract onPopState(fn: LocationChangeListener): void;\n  abstract getBaseHref(): string;\n}\n\nfunction LocationStrategy_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?=} includeHash\n * @return {?}\n */\nLocationStrategy.prototype.path = function(includeHash) {};\n\n/**\n * @abstract\n * @param {?} internal\n * @return {?}\n */\nLocationStrategy.prototype.prepareExternalUrl = function(internal) {};\n\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\nLocationStrategy.prototype.pushState = function(state, title, url, queryParams) {};\n\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\nLocationStrategy.prototype.replaceState = function(state, title, url, queryParams) {};\n\n/**\n * @abstract\n * @return {?}\n */\nLocationStrategy.prototype.forward = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nLocationStrategy.prototype.back = function() {};\n\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nLocationStrategy.prototype.onPopState = function(fn) {};\n\n/**\n * @abstract\n * @return {?}\n */\nLocationStrategy.prototype.getBaseHref = function() {};\n}\n\n/**\n * The `APP_BASE_HREF` token represents the base href to be used with the\n * {\\@link PathLocationStrategy}.\n * \n * If you're using {\\@link PathLocationStrategy}, you must provide a provider to a string\n * representing the URL prefix that should be preserved when generating and recognizing\n * URLs.\n * \n * ### Example\n * \n * ```typescript\n * import {Component, NgModule} from '\\@angular/core';\n * import {APP_BASE_HREF} from '\\@angular/common';\n * \n * \\@NgModule({ \n *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n * })\n * class AppModule {}\n * ```\n * \n * \\@stable\n */\nexport const /** @type {?} */ APP_BASE_HREF = new InjectionToken<string>('appBaseHref');\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {\\@link Location}.\n * \n * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n * agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms that angular supports. For example, `\\@angular/platform-browser` provides an\n * implementation specific to the browser environment, while `\\@angular/platform-webworker` provides\n * one suitable for use with web workers.\n * \n * The `PlatformLocation` class is used directly by all implementations of {\\@link LocationStrategy}\n * when they need to interact with the DOM apis like pushState, popState, etc...\n * \n * {\\@link LocationStrategy} in turn is used by the {\\@link Location} service which is used directly\n * by the {\\@link Router} in order to navigate between routes. Since all interactions between {\\@link\n * Router} /\n * {\\@link Location} / {\\@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n * class they are all platform independent.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class PlatformLocation {\n  abstract getBaseHrefFromDOM(): string;\n  abstract onPopState(fn: LocationChangeListener): void;\n  abstract onHashChange(fn: LocationChangeListener): void;\n\n  abstract get pathname(): string;\n  abstract get search(): string;\n  abstract get hash(): string;\n\n  abstract replaceState(state: any, title: string, url: string): void;\n\n  abstract pushState(state: any, title: string, url: string): void;\n\n  abstract forward(): void;\n\n  abstract back(): void;\n}\n\nfunction PlatformLocation_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @return {?}\n */\nPlatformLocation.prototype.getBaseHrefFromDOM = function() {};\n\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nPlatformLocation.prototype.onPopState = function(fn) {};\n\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nPlatformLocation.prototype.onHashChange = function(fn) {};\n\n/**\n * @abstract\n * @return {?}\n */\nPlatformLocation.prototype.pathname = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nPlatformLocation.prototype.search = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nPlatformLocation.prototype.hash = function() {};\n\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\nPlatformLocation.prototype.replaceState = function(state, title, url) {};\n\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\nPlatformLocation.prototype.pushState = function(state, title, url) {};\n\n/**\n * @abstract\n * @return {?}\n */\nPlatformLocation.prototype.forward = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nPlatformLocation.prototype.back = function() {};\n}\n\n/**\n * \\@whatItDoes indicates when a location is initialized\n * \\@experimental\n */\nexport const /** @type {?} */ LOCATION_INITIALIZED = new InjectionToken<Promise<any>>('Location Initialized');\n/**\n * A serializable version of the event from onPopState or onHashChange\n * \n * \\@experimental\n * @record\n */\nexport function LocationChangeEvent() {}\n\n\nfunction LocationChangeEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nLocationChangeEvent.prototype.type;\n}\n\n\n/**\n * A serializable version of the event from onPopState or onHashChange\n *\n * @experimental\n */\nexport interface LocationChangeEvent { type: string; }\n/**\n * \\@experimental\n * @record\n */\nexport function LocationChangeListener() {}\n\n\nfunction LocationChangeListener_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(e: LocationChangeEvent): any;\n*/\n}\n\n\n/**\n * @experimental\n */\nexport interface LocationChangeListener { (e: LocationChangeEvent): any; }\n"],"names":["formatNumber","DATE_FORMATS","DATE_FORMATS_SPLIT","timeZoneGetter","isDate","stringify","isListLikeIterable"],"mappings":";;A2CAA;;;;;;;;;;;AAaA,AACA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,AAAA,MAAA,gBAAA,CAAA;CAUC;AAQD,AAuEA;;;;AAIA,AA7EO,MAAM,oBAAA,GAAuB,IAAI,cAAA,CAA4B,sBAAE,CAAsB,CAAC;;;;;;;AAoF7F,AAAA,SAAA,mBAAA,GAAA,GAAwC;AAGxC,AAYA;;;;AAIA,AAAA,SAAA,sBAAA,GAAA,GAA2C,AAG3C,AAIC;;ADnKD;;;;;;;;;;;AAaA,AAEA;;;;;;;;;;;;;;;;;;;AAmBA,AAAA,MAAA,gBAAA,CAAA;CAIC;AAOD,AA8DA;;;;;;;;;;;;;;;;;;;;;;AAsBA,AAlEO,MAAM,aAAA,GAAgB,IAAI,cAAA,CAAsB,aAAE,CAAa,CAAC;;AD/DvE;;;;;;;;;;;AAaA,AAEA,AACA;;;;AAIA,AAAA,SAAA,aAAA,GAAA,GAAkC;AAGlC,AAgBA;;;;;;;;;;;;;;;;;;;;;AAqBA,AAAA,MAAA,QAAA,CAAA;;;;IAgBA,WAAA,CA3BG,gBAA6B,EA2BhC;;;;QAZA,IAAA,CAAA,QArBG,GAA6B,IAAI,YAAA,EAAa,CAAE;QAkC/C,IAAI,CA3BC,iBAAC,GAAmB,gBAAA,CAAiB;QA4B1C,uBA3BM,eAAA,GAAkB,IAAA,CAAK,iBAAC,CAAiB,WAAC,EAAW,CAAE;QA4B7D,IAAI,CA3BC,SAAC,GAAW,QAAA,CAAS,kBAAC,CAAkB,eAAC,CAAe,eAAC,CAAe,CAAC,CAAC;QA4B/E,IAAI,CA3BC,iBAAC,CAAiB,UAAC,CAAU,CAAC,EAAC,KA2BxC;YACM,IAAI,CA3BC,QAAC,CAAQ,IAAC,CAAI;gBA4BjB,KAAK,EA3BE,IAAA,CAAK,IAAC,CAAI,IAAC,CAAI;gBA4BtB,KAAG,EA3BI,IAAA;gBA4BX,MAAA,EA3BY,EAAA,CAAG,IAAC;aA4Bb,CA3BC,CAAC;SA4BJ,CA3BC,CAAC;KA4BJ;;;;;IAKH,IAzBG,CAAI,WAyBP,GAzB8B,KAAA,EAyB9B;QACI,OAzBO,IAAA,CAAK,SAAC,CAAS,IAAC,CAAI,iBAAC,CAAiB,IAAC,CAAI,WAAC,CAAW,CAAC,CAAC;KA0BjE;;;;;;;IAOH,oBA3BG,CAAoB,IAAM,EAAQ,KA2BrC,GA3BqD,EAAA,EA2BrD;QACI,OA3BO,IAAA,CAAK,IAAC,EAAI,IAAK,IAAA,CAAK,SAAC,CAAS,IAAC,GAAM,QAAA,CAAS,oBAAC,CAAoB,KAAC,CAAK,CAAC,CAAC;KA4BnF;;;;;;;IAOH,SA5BG,CAAS,GAAK,EA4BjB;QACI,OA5BO,QAAA,CAAS,kBAAC,CAAkB,cAAC,CAAc,IAAC,CAAI,SAAC,EAAU,eAAA,CAAgB,GAAC,CAAG,CAAC,CAAC,CAAC;KA6B1F;;;;;;;;;IASH,kBA7BG,CAAkB,GAAK,EA6B1B;QACI,IAAI,GA7BC,IAAM,GAAA,CAAI,CAAC,CAAC,KAAK,GAAA,EAAK;YA8BzB,GAAG,GA7BG,GAAA,GAAM,GAAA,CAAI;SA8BjB;QACD,OA7BO,IAAA,CAAK,iBAAC,CAAiB,kBAAC,CAAkB,GAAC,CAAG,CAAC;KA8BvD;;;;;;;;IAQH,EA9BG,CAAE,IAAM,EAAQ,KA8BnB,GA9BmC,EAAA,EA8BnC;QACI,IAAI,CA9BC,iBAAC,CAAiB,SAAC,CAAS,IAAC,EAAK,EAAA,EAAI,IAAA,EAAM,KAAA,CAAM,CAAC;KA+BzD;;;;;;;;IAQH,YAhCG,CAAY,IAAM,EAAQ,KAgC7B,GAhC6C,EAAA,EAgC7C;QACI,IAAI,CAhCC,iBAAC,CAAiB,YAAC,CAAY,IAAC,EAAK,EAAA,EAAI,IAAA,EAAM,KAAA,CAAM,CAAC;KAiC5D;;;;;IAKH,OAhCG,GAgCH,EAhCoB,IAAA,CAAK,iBAAC,CAAiB,OAAC,EAAO,CAAE,EAAC;;;;;IAqCtD,IAhCG,GAgCH,EAhCiB,IAAA,CAAK,iBAAC,CAAiB,IAAC,EAAI,CAAE,EAAC;;;;;;;;IAwChD,SAnCG,CAoCG,MAnCkC,EAAM,OAAsC,EAoC9E,QAnCyB,EAiC/B;QAGI,OAnCO,IAAA,CAAK,QAAC,CAAQ,SAAC,CAAS,EAAC,IAAC,EAAK,MAAA,EAAQ,KAAA,EAAO,OAAA,EAAS,QAAA,EAAU,QAAA,EAAS,CAAC,CAAC;KAoCpF;;;;;;;IA7BM,OAAO,oBAAA,CAAqB,MAAQ,EAA7C;QAsCI,OArCO,MAAA,IAAU,MAAA,CAAO,CAAC,CAAC,KAAK,GAAA,GAAM,GAAA,GAAM,MAAA,GAAS,MAAA,CAAO;KAsC5D;;;;;;;IAhCM,OAAO,aAAA,CAAc,KAAO,EAAQ,GAAK,EAAlD;QAkCE,IAAA,KAjCO,CAAK,MAAC,IAAS,CAAA,EAAG;YAyCrB,OAxCO,GAAA,CAAI;SAyCZ;QACD,IAAI,GAxCC,CAAG,MAAC,IAAS,CAAA,EAAG;YAkCvB,OAjCW,KAAA,CAAM;SAyCd;QACD,qBAxCI,OAAA,GAAU,CAAA,CAAE;QAyChB,IAAI,KAxCC,CAAK,QAAC,CAAQ,GAAC,CAAG,EAAE;YAkC3B,OAAA,EAjCY,CAAE;SAyCX;QACD,IAAI,GAxCC,CAAG,UAAC,CAAU,GAAC,CAAG,EAAE;YAyCvB,OAAO,EAxCC,CAAE;SAyCX;QACD,IAAI,OAxCC,IAAU,CAAA,EAAG;YAyChB,OAxCO,KAAA,GAAQ,GAAA,CAAI,SAAC,CAAS,CAAC,CAAC,CAAC;SAyCjC;QACD,IAAI,OAxCC,IAAU,CAAA,EAAG;YAyChB,OAxCO,KAAA,GAAQ,GAAA,CAAI;SAyCpB;QACD,OAxCO,KAAA,GAAQ,GAAA,GAAM,GAAA,CAAI;KAyC1B;;;;;;;;IAjCM,OAAO,kBAAA,CAAmB,GAAK,EAAxC;QA2CI,uBA1CM,KAAA,GAAQ,GAAA,CAAI,KAAC,CAAK,QAAC,CAAQ,CAAC;QA2ClC,uBA1CM,UAAA,GAAa,KAAA,IAAS,KAAA,CAAM,KAAC,IAAQ,GAAA,CAAI,MAAC,CAAM;QA2CtD,uBA1CM,eAAA,GAAkB,UAAA,IAAa,GAAE,CAAG,UAAC,GAAY,CAAA,CAAE,KAAK,GAAA,GAAM,CAAA,GAAI,CAAA,CAAE,CAAC;QA2C3E,OA1CO,GAAA,CAAI,KAAC,CAAK,CAAC,EAAE,eAAA,CAAgB,GAAG,GAAA,CAAI,KAAC,CAAK,UAAC,CAAU,CAAC;KA2C9D;;AAzCI,QAAP,CAAA,UAAO,GAA+C;IA2CtD,EA1CE,IAAA,EAAM,UAAA,EA7IN;CAwLD,CA1CC;;AAEK,QAAP,CAAA,cAAO,GAA4F,MAAM;IA2CzG,EAAC,IA1CC,EAAK,gBAAA,GAAiB;CA2CvB,CA1CC;AA6CF,AAyBA;;;;;AAKA,SAAA,cAAA,CA/EwB,QAAU,EAAQ,GAAK,EA+E/C;IACE,OA/EO,QAAA,IAAY,GAAA,CAAI,UAAC,CAAU,QAAC,CAAQ,GAAG,GAAA,CAAI,SAAC,CAAS,QAAC,CAAQ,MAAC,CAAM,GAAG,GAAA,CAAI;CAgFpF;;;;;AAKD,SAAA,eAAA,CAlFyB,GAAK,EAkF9B;IACE,OAlFO,GAAA,CAAI,OAAC,CAAO,eAAC,EAAgB,EAAA,CAAG,CAAC;CAmFzC;;AD9QD;;;;;;;;;;;AAaA,AAGA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;AAiBA,AAAA,MAAA,oBADkC,SAAQ,gBAAA,CAC1C;;;;;IAMA,WAAA,CAJc,iBAAmB,EAM7B,SALiD,EAGrD;QAGI,KAAK,EALC,CAAE;QAFE,IAAd,CAAA,iBAAc,GAAA,iBAAA,CAAmB;QAFvB,IAAV,CAAA,SAAU,GAAoB,EAAA,CAAG;QAU7B,IAAI,SALC,IAAY,IAAA,EAAM;YAMrB,IAAI,CALC,SAAC,GAAW,SAAA,CAAU;SAM5B;KACF;;;;;IAKH,UARG,CAAU,EAAI,EAQjB;QACI,IAAI,CARC,iBAAC,CAAiB,UAAC,CAAU,EAAC,CAAE,CAAC;QAStC,IAAI,CARC,iBAAC,CAAiB,YAAC,CAAY,EAAC,CAAE,CAAC;KASzC;;;;IAIH,WAVG,GAUH,EAV0B,OAAO,IAAA,CAAK,SAAC,CAAS,EAAC;;;;;IAejD,IAbG,CAAI,WAaP,GAb8B,KAAA,EAa9B;;;QAGI,qBAbI,IAAA,GAAO,IAAA,CAAK,iBAAC,CAAiB,IAAC,CAAI;QAcvC,IAAI,IAbC,IAAO,IAAA;YAAM,IAAA,GAAO,GAAA,CAAI;QAe7B,OAbO,IAAA,CAAK,MAAC,GAAQ,CAAA,GAAI,IAAA,CAAK,SAAC,CAAS,CAAC,CAAC,GAAG,IAAA,CAAK;KAcnD;;;;;IAKH,kBAhBG,CAAkB,QAAU,EAgB/B;QACI,uBAhBM,GAAA,GAAM,QAAA,CAAS,aAAC,CAAa,IAAC,CAAI,SAAC,EAAU,QAAA,CAAS,CAAC;QAiB7D,OAhBO,GAAA,CAAI,MAAC,GAAQ,CAAA,IAAI,GAAE,GAAK,GAAA,IAAO,GAAA,CAAI;KAiB3C;;;;;;;;IAQH,SAtBG,CAAS,KAAO,EAAK,KAAO,EAAQ,IAAM,EAAQ,WAAa,EAsBlE;QACI,qBAtBI,GAAA,GAuBA,IAAI,CAtBC,kBAAC,CAAkB,IAAC,GAAM,QAAA,CAAS,oBAAC,CAAoB,WAAC,CAAW,CAAC,CAAC;QAuB/E,IAAI,GAtBC,CAAG,MAAC,IAAS,CAAA,EAAG;YAuBnB,GAAG,GAtBG,IAAA,CAAK,iBAAC,CAAiB,QAAC,CAAQ;SAuBvC;QAPH,IAAA,CAdO,iBAAC,CAAiB,SAAC,CAAS,KAAC,EAAM,KAAA,EAAO,GAAA,CAAI,CAAC;KAuBrD;;;;;;;;IAQH,YA5BG,CAAY,KAAO,EAAK,KAAO,EAAQ,IAAM,EAAQ,WAAa,EA4BrE;QACI,qBA5BI,GAAA,GAAM,IAAA,CAAK,kBAAC,CAAkB,IAAC,GAAM,QAAA,CAAS,oBAAC,CAAoB,WAAC,CAAW,CAAC,CAAC;QA6BrF,IAAI,GA5BC,CAAG,MAAC,IAAS,CAAA,EAAG;YA6BnB,GAAG,GA5BG,IAAA,CAAK,iBAAC,CAAiB,QAAC,CAAQ;SA6BvC;QACD,IAAI,CA5BC,iBAAC,CAAiB,YAAC,CAAY,KAAC,EAAM,KAAA,EAAO,GAAA,CAAI,CAAC;KA6BxD;;;;IAIH,OA9BG,GA8BH,EA9BoB,IAAA,CAAK,iBAAC,CAAiB,OAAC,EAAO,CAAE,EAAC;;;;IAkCtD,IAhCG,GAgCH,EAhCiB,IAAA,CAAK,iBAAC,CAAiB,IAAC,EAAI,CAAE,EAAC;;AACzC,oBAAP,CAAA,UAAO,GAA+C;IAiCtD,EAhCE,IAAA,EAAM,UAAA,EAtDN;CAuFD,CAhCC;;AAEK,oBAAP,CAAA,cAAO,GAA4F,MAAM;IAiCzG,EAAC,IAhCC,EAAK,gBAAA,GAAiB;IAiCxB,EAAC,IAhCC,EAAK,SAAA,EAAW,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,QAAA,EAtD/B,EAAA,EAAA,IAAA,EAAA,MAAA,EAAY,IAAA,EAAA,CAAA,aAAO,EAAA,EAAA,EAAA,EAAA;CAuF1B,CAhCC,AAmCF,AAYC;;AD7ID;;;;;;;;;;;AAaA,AAGA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,AAAA,MAAA,oBADkC,SAAQ,gBAAA,CAC1C;;;;;IAMA,WAAA,CAHc,iBAAmB,EAKzB,IAJwC,EAEhD;QAGI,KAAE,EAJI,CAAE;QAFE,IAAd,CAAA,iBAAc,GAAA,iBAAA,CAAmB;QAQ7B,IAAI,IAJC,IAAO,IAAA,EAAM;YAKhB,IAAI,GAJG,IAAA,CAAK,iBAAC,CAAiB,kBAAC,EAAkB,CAAE;SAKpD;QAED,IAAI,IAJC,IAAO,IAAA,EAAM;YAKhB,MAJM,IAAI,KAAA,CAKZ,CADJ,2GAAA,CACI,CAJoH,CAAC;SAKpH;QAED,IAAI,CAJC,SAAC,GAAW,IAAA,CAAK;KAKvB;;;;;IAKH,UAPG,CAAU,EAAI,EAOjB;QACI,IAAI,CAPC,iBAAC,CAAiB,UAAC,CAAU,EAAC,CAAE,CAAC;QAQtC,IAAA,CAPK,iBAAC,CAAiB,YAAC,CAAY,EAAC,CAAE,CAAC;KAQzC;;;;IAIH,WATG,GASH,EAT0B,OAAO,IAAA,CAAK,SAAC,CAAS,EAAC;;;;;IAcjD,kBAZG,CAAkB,QAAU,EAY/B;QACI,OAZO,QAAA,CAAS,aAAC,CAAa,IAAC,CAAI,SAAC,EAAU,QAAA,CAAS,CAAC;KAazD;;;;;IAKH,IAfG,CAAI,WAeP,GAf8B,KAAA,EAe9B;QACI,uBAfM,QAAA,GAAW,IAAA,CAAK,iBAAC,CAAiB,QAAC;YAgBrC,QAAK,CAfI,oBAAC,CAAoB,IAAC,CAAI,iBAAC,CAAiB,MAAC,CAAM,CAAC;QAgBjE,uBAfM,IAAA,GAAO,IAAA,CAAK,iBAAC,CAAiB,IAAC,CAAI;QAgBzC,OAfO,IAAA,IAAQ,WAAA,GAAc,CAejC,EAfiC,QAAI,CAerC,EAf6C,IAAG,CAehD,CAfoD,GAAI,QAAA,CAAS;KAgB9D;;;;;;;;IAQH,SArBG,CAAS,KAAO,EAAK,KAAO,EAAQ,GAAK,EAAQ,WAAa,EAqBjE;QACI,uBArBM,WAAA,GAAc,IAAA,CAAK,kBAAC,CAAkB,GAAC,GAAK,QAAA,CAAS,oBAAC,CAAoB,WAAC,CAAW,CAAC,CAAC;QAsB9F,IAAI,CArBC,iBAAC,CAAiB,SAAC,CAAS,KAAC,EAAM,KAAA,EAAO,WAAA,CAAY,CAAC;KAsB7D;;;;;;;;IAQH,YA3BG,CAAY,KAAO,EAAK,KAAO,EAAQ,GAAK,EAAQ,WAAa,EA2BpE;QACI,uBA3BM,WAAA,GAAc,IAAA,CAAK,kBAAC,CAAkB,GAAC,GAAK,QAAA,CAAS,oBAAC,CAAoB,WAAC,CAAW,CAAC,CAAC;QA4B9F,IAAI,CA3BC,iBAAC,CAAiB,YAAC,CAAY,KAAC,EAAM,KAAA,EAAO,WAAA,CAAY,CAAC;KA4BhE;;;;IAIH,OA7BG,GA6BH,EA7BoB,IAAA,CAAK,iBAAC,CAAiB,OAAC,EAAO,CAAE,EAAC;;;;IAiCtD,IA/BG,GA+BH,EA/BiB,IAAA,CAAK,iBAAC,CAAiB,IAAC,EAAI,CAAE,EAAC;;AACzC,oBAAP,CAAA,UAAO,GAA+C;IAgCtD,EA/BE,IAAA,EAAM,UAAA,EArDN;CAqFD,CA/BC;;AAEK,oBAAP,CAAA,cAAO,GAA4F,MAAM;IAgCzG,EAAC,IA/BC,EAAK,gBAAA,GAAiB;IAgCxB,EAAC,IA/BC,EAAK,SAAA,EAAW,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,QAAA,EApD/B,EAAA,EAAA,IAAA,EAAA,MAAA,EAAY,IAAA,EAAA,CAAA,aAAO,EAAA,EAAA,EAAA,EAAA;CAoF1B,CA/BC,AAkCF,AAYC;;ADpJD;;;;;;;;;;GAWG,AAEH,AACA,AACA,AACA,AACA,AAAkD;;ADjBlD;;;;;;;;;;IASA,AAGO,MAAM,UAAA,GAAuD;IAFlE,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,CAAA,IAAE,EAAK,GAAA,CAAI;IAFlB,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,CAAA,IAAE,CAAI;IAFb,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,CAAA,KAAE,EAAM,GAAA,CAAI;IAFnB,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,CAAA,KAAE,EAAM,GAAA,CAAI;IAFnB,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,CAAA,GAAE,CAAG;IAFZ,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,CAAA,GAAE,CAAG;IAFZ,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,CAAA,KAAE,EAAM,GAAA,CAAI;IAFnB,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,CAAA,GAAE,CAAG;IAFZ,KAAK,EAGE,CAAA,GAAE,CAAG;IAFZ,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,CAAA,GAAE,CAAG;IAFZ,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,CAAA,GAAE,CAAG;IAFZ,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,CAAA,KAAE,EAAM,GAAA,CAAI;IAFnB,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,CAAA,KAAE,EAAM,GAAA,CAAI;IAFnB,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,KAAA,CAAM;IAFhB,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,CAAA,KAAE,EAAM,GAAA,CAAI;IAFnB,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,CAAA,GAAE,CAAG;IAFZ,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;IAFf,KAAK,EAGE,CAAA,GAAE,CAAG;IAFZ,KAAK,EAGE,CAAA,MAAE,CAAM;IAFf,KAAK,EAGE,CAAA,KAAE,EAAM,GAAA,CAAI;IAFnB,KAAK,EAGE,CAAA,KAAE,CAAK;IAFd,KAAK,EAGE,CAAA,MAAE,CAAM;IAFf,KAAK,EAGE,GAAG,GAAA,CAAI;IAFd,KAAK,EAGE,GAAG,IAAA,CAAK;CAFhB,CAGC;;ADlHF;;;;;;;;;;;;;AAgBA,eALe;IAMb,IAAI;IACJ;QACE,CAAC,GALC,EAAI,GAAA,CAAI;QAMV,CAAC,IALC,EAAK,IAAA,CAAK;KAMb;IACD;QACE,CAAC,IALC,EAAK,IAAA,CAAK;;KAOb;IACD;QACE,CAAC,GALC,EAAI,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAI,EAAE,CAAA,KAAE,EAAM,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,CAAM;QAMtF,CAAC,QALC,EAAS,QAAA,EAAU,SAAA,EAAW,WAAA,EAAa,UAAA,EAAY,QAAA,EAAU,UAAA,CAAW;QAM9E,CAAC,IALC,EAAK,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,IAAA,CAAK;KAM3C;;IAED;QACE,CAAC,GALC,EAAI,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAI;QAM5D,CAAC,KALC,EAAM,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,CAAM;QAMpF;YACE,SAAS,EALE,UAAA,EAAY,OAAA,EAAS,OAAA,EAAS,KAAA,EAAO,MAAA,EAAQ,MAAA,EAAQ,QAAA,EAAU,WAAA;YAM1E,SAAS,EALE,UAAA,EAAY,UAAA;SAMxB;KACF;;IAJC,CAAA,CAAE,GAAC,EAAI,GAAA,CAAI,EAAE,CAAA,IAAE,EAAK,IAAA,CAAK,EAAE,CAAA,eAAE,EAAgB,aAAA,CAAc,CAAC,EAAE,CAAA,EAAG,CAAA,CAAE,EAAE,CAAA,CAAE;IAMzE,CAAC,QALC,EAAS,UAAA,EAAY,WAAA,EAAa,iBAAA,CAAkB;IAMtD,CAAC,QALC,EAAS,WAAA,EAAa,aAAA,EAAe,gBAAA,CAAiB;IAMxD;QACE,UAAU;;QAEV,gBAAgB;KACjB;IACD,CAAC,GALC,EAAI,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,KAAA,EAAO,GAAA,CAAI;IAM9D,CAAC,WALC,EAAY,QAAA,EAAU,WAAA,EAAa,KAAA,CAAM,EAAE,GAAA,EAAK,WAAA;IAMlD,UAAS,CALG,EAKd;QAEQ,qBALI,CAAA,GAAI,IAAA,CAAK,KAAC,CAAK,IAAC,CAAI,GAAC,CAAG,CAAC,CAAC,CAAC,mBAAE,CAAA,GAAI,CAAA,CAAE,QAAC,EAAQ,CAAE,OAAC,CAAO,WAAC,EAAY,EAAA,CAAG,CAAC,MAAC,CAAM;QAMlF,IAAI,CALC,KAAK,CAAA,IAAK,CAAA,KAAM,CAAA;YAAG,OAAO,CAAA,CAAE;QAMjC,OALO,CAAA,CAAE;KAMV;CACN,CALC;;ADnDF;;;;;;;;;;IASA,AAEO,MAAM,WAAA,GAAyC,EAAA,CAAG;;;;;;;;;;AAQzD,AAAA,SAAA,kBAAA,CAAmC,IAAM,EAAK,SAAY,EAA1D;IACE,uBAAM,QAAA,GAAW,IAAA,CAAnB,CAAA,gBAAiD,CAAC,WAAC,EAAW,CAAE,OAAC,CAAO,IAAC,EAAK,GAAA,CAAI,CAAC;IACjF,WAAW,CAAC,QAAC,CAAQ,GAAG,IAAA,CAAK;IAC7B,IAAI,SAAC,EAAU;QACb,WAAW,CAAC,QAAC,CAAQ,CAAzB,EAAA,iBAAoD,GAAG,SAAA,CAAU;KAC9D;CACF;;ADzBD;;;;;;;;;;;AAaA,AACA,AACA,AAEA,AAAO,IAAI,iBAAiB,GAAQ,EAAE,CAAC;AACvC,iBAAiB,CAAC,OAAO,GAAG,CAAC,CAAC;AAC9B,iBAAiB,CAAC,OAAO,GAAG,CAAC,CAAC;AAC9B,iBAAiB,CAAC,QAAQ,GAAG,CAAC,CAAC;AAC/B,iBAAiB,CAAC,UAAU,GAAG,CAAC,CAAC;AACjC,iBAAiB,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;AACzD,iBAAiB,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;AACzD,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;AAC3D,iBAAiB,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,YAAY,CAAC;AAG/D,AAAO,IAAI,MAAM,GAAQ,EAAE,CAAC;AAC5B,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;AAChB,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;AACf,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;AACf,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;AACf,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;AAChB,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;AACjB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAC7B,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC3B,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC3B,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC3B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAC7B,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;AAG/B,AAAO,IAAI,SAAS,GAAQ,EAAE,CAAC;AAC/B,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;AACrB,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;AACzB,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;AACvC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,YAAY,CAAC;AAG/C,AAAO,IAAI,gBAAgB,GAAQ,EAAE,CAAC;AACtC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5B,gBAAgB,CAAC,WAAW,GAAG,CAAC,CAAC;AACjC,gBAAgB,CAAC,IAAI,GAAG,CAAC,CAAC;AAC1B,gBAAgB,CAAC,KAAK,GAAG,CAAC,CAAC;AAC3B,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;AACrD,gBAAgB,CAAC,gBAAgB,CAAC,WAAW,CAAC,GAAG,aAAa,CAAC;AAC/D,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACjD,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;AAGnD,AAAO,IAAI,WAAW,GAAQ,EAAE,CAAC;AACjC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC;AACtB,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;AACvB,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC;AACrB,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC;AACrB,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;AACzC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;AAC3C,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACvC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAGvC,AAAO,IAAI,YAAY,GAAQ,EAAE,CAAC;AAClC,YAAY,CAAC,OAAO,GAAG,CAAC,CAAC;AACzB,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC;AACvB,YAAY,CAAC,IAAI,GAAG,CAAC,CAAC;AACtB,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC;AAC7B,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC;AAC1B,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC;AAC3B,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC;AAC7B,YAAY,CAAC,sBAAsB,GAAG,CAAC,CAAC;AACxC,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC;AAC1B,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC;AAC1B,YAAY,CAAC,GAAG,GAAG,EAAE,CAAC;AACtB,YAAY,CAAC,aAAa,GAAG,EAAE,CAAC;AAChC,YAAY,CAAC,eAAe,GAAG,EAAE,CAAC;AAClC,YAAY,CAAC,aAAa,GAAG,EAAE,CAAC;AAChC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;AAC/C,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;AAC3C,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACzC,YAAY,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,aAAa,CAAC;AACvD,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;AACjD,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;AACnD,YAAY,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,aAAa,CAAC;AACvD,YAAY,CAAC,YAAY,CAAC,sBAAsB,CAAC,GAAG,wBAAwB,CAAC;AAC7E,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;AACjD,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;AACjD,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACvC,YAAY,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,eAAe,CAAC;AAC3D,YAAY,CAAC,YAAY,CAAC,eAAe,CAAC,GAAG,iBAAiB,CAAC;AAC/D,YAAY,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,eAAe,CAAC;AAG3D,AAAO,IAAI,OAAO,GAAQ,EAAE,CAAC;AAC7B,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AACnB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AACnB,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC;AACpB,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC;AACtB,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;AACrB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AACnB,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;AACrB,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;AACnC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;AACnC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;AACrC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;AACzC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;AACvC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;AACnC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;;;;;;;;AASvC,AAAA,SAAA,WAAA,CAqB4B,MAAQ,EArBpC;IACE,OAqBO,cAAA,CAAe,MAAC,CAAM,CArB/B,CAAA,gBAqByD,CAAC;CApBzD;;;;;;;;;;AAUD,AAAA,SAAA,mBAAA,CACI,MAkBQ,EAAQ,SAAW,EAAW,KAAO,EAnBjD;IAEE,uBAkBM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IAjBpC,uBAkBM,QAAA,IAEA,CAAC,IAAC,CApBV,CAAA,wBAoB+C,EAAE,IAAA,CApBjD,CAAA,4BAoB2F,CAAC,CAAA,CAAC;IAjB3F,uBAkBM,IAAA,GAAO,mBAAA,CAAoB,QAAC,EAAS,SAAA,CAAU,CAAC;IAjBtD,OAkBO,mBAAA,CAAoB,IAAC,EAAK,KAAA,CAAM,CAAC;CAjBzC;;;;;;;;;;AAUD,AAAA,SAAA,iBAAA,CACI,MAeQ,EAAQ,SAAW,EAAW,KAAO,EAhBjD;IAEE,uBAeM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IAdpC,uBAeM,QAAA,IACY,CAAC,IAAC,CAhBtB,CAAA,kBAgBqD,EAAE,IAAA,CAhBvD,CAAA,sBAgB2F,CAAC,CAAA,CAAC;IAd3F,uBAeM,IAAA,GAAO,mBAAA,CAAoB,QAAC,EAAS,SAAA,CAAU,CAAC;IAdtD,OAeO,mBAAA,CAAoB,IAAC,EAAK,KAAA,CAAM,CAAC;CAdzC;;;;;;;;;;AAUD,AAAA,SAAA,mBAAA,CACI,MAYQ,EAAQ,SAAW,EAAW,KAAO,EAbjD;IAEE,uBAYM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IAXpC,uBAYM,UAAA,IACY,CAAC,IAAC,CAbtB,CAAA,oBAauD,EAAE,IAAA,CAbzD,CAAA,wBAa+F,CAAC,CAAA,CAAC;IAX/F,uBAYM,MAAA,GAAS,mBAAA,CAAoB,UAAC,EAAW,SAAA,CAAU,CAAC;IAX1D,OAYO,mBAAA,CAAoB,MAAC,EAAO,KAAA,CAAM,CAAC;CAX3C;;;;;;;;;AASD,AAAA,SAAA,iBAAA,CAUkC,MAAQ,EAAQ,KAAO,EAVzD;IACE,uBAUM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IATpC,uBAUM,QAAA,IAA+B,IAAC,CAVxC,CAAA,YAUiE,CAAA,CAAC;IAThE,OAUO,mBAAA,CAAoB,QAAC,EAAS,KAAA,CAAM,CAAC;CAT7C;;;;;;;;;AASD,AAAA,SAAA,uBAAA,CASwC,MAAQ,EAThD;IACE,uBASM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IARpC,OASO,IAAA,CATT,CAAA,sBAS6C,CAAC;CAR7C;;;;;;;;;;AAUD,AAAA,SAAA,qBAAA,CAQsC,MAAQ,EAR9C;IACE,uBAQM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IAPpC,OAQO,IAAA,CART,CAAA,oBAQ2C,CAAC;CAP3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BD,AAAA,SAAA,mBAAA,CAMoC,MAAQ,EAAQ,KAAO,EAN3D;IACE,uBAMM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IALpC,OAMO,IAAA,CANT,EAAA,kBAMyC,CAAC,KAAC,CAAK,CAAC;CALhD;;;;;;;;;;;;;;;;;;;;;;;;AAwBD,AAAA,SAAA,mBAAA,CAIoC,MAAQ,EAAQ,KAAO,EAJ3D;IACE,uBAIM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IAHpC,OAIO,IAAA,CAJT,EAAA,kBAIyC,CAAC,KAAC,CAAK,CAAC;CAHhD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BD,AAAA,SAAA,uBAAA,CAEwC,MAAQ,EAAQ,KAAO,EAF/D;IACE,uBAEM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IADpC,uBAEM,kBAAA,IAA+B,IAAC,CAFxC,EAAA,sBAE2E,CAAA,CAAC;IAD1E,OAEO,mBAAA,CAAoB,kBAAC,EAAmB,KAAA,CAAM,CAAC;CADvD;;;;;;;;;;AAUD,AAAA,SAAA,qBAAA,CAAsC,MAAQ,EAAQ,MAAQ,EAA9D;IACE,uBAAM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IACpC,uBAAM,GAAA,GAAM,IAAA,CAAd,EAAA,qBAAiD,CAAC,MAAC,CAAM,CAAC;IACxD,IAAI,OAAO,GAAA,KAAQ,WAAA,EAAa;QAC9B,IAAI,MAAC,KAAU,YAAA,CAAa,eAAC,EAAgB;YAC3C,OAAO,IAAA,CAAb,EAAA,qBAAgD,CAAC,YAAC,CAAY,OAAC,CAAO,CAAC;SAClE;aAAM,IAAA,MAAK,KAAU,YAAA,CAAa,aAAC,EAAc;YAChD,OAAO,IAAA,CAAb,EAAA,qBAAgD,CAAC,YAAC,CAAY,OAAC,CAAO,CAAC;SAClE;KACF;IACD,OAAO,GAAA,CAAI;CACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCD,AAAA,SAAA,qBAAA,CAFsC,MAAQ,EAAQ,IAAM,EAE5D;IACE,uBAFM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IAGpC,OAFO,IAAA,CAET,EAAA,qBAF4C,CAAC,IAAC,CAAI,CAAC;CAGlD;;;;;;;;;;AAUD,AAAA,SAAA,uBAAA,CAHwC,MAAQ,EAGhD;IACE,uBAHM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IAIpC,OAHO,IAAA,CAGT,EAAA,sBAH6C,IAAI,IAAA,CAAK;CAIrD;;;;;;;;;;AAUD,AAAA,SAAA,qBAAA,CAJsC,MAAQ,EAI9C;IACE,uBAJM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IAKpC,OAJO,IAAA,CAIT,EAAA,oBAJ2C,IAAI,IAAA,CAAK;CAKnD;;;;;;;;;AASD,AAAA,SAAA,mBAAA,CALoC,MAAQ,EAK5C;IACE,uBALM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IAMpC,OALO,IAAA,CAKT,EAAA,kBALyC,CAAC;CAMzC;;;;;AAKD,SAAA,aAAA,CARuB,IAAM,EAQ7B;IACE,IAAI,CARC,IAAC,CAQR,EAAA,iBARsC,EAAE;QASpC,MARM,IAAI,KAAA,CASN,CADR,0CAAA,EACqD,IARC,CAOtD,CAAA,gBAPmF,CAOnF,8FAAA,CAPoF,CAAgG,CAAC;KASlL;CACF;;;;;;;;;;;;;;;;;;AAkBD,AAAA,SAAA,4BAAA,CAT6C,MAAQ,EASrD;IACE,uBATM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IAUpC,aAAa,CATC,IAAC,CAAI,CAAC;IAUpB,uBATM,KAAA,GAAQ,IAAA,CAShB,EAAA,iBAT+C,CAS/C,CAAA,4BAT0F,IAAI,EAAA,CAAG;IAU/F,OATO,KAAA,CAAM,GAAC,CAAG,CAAC,IAA+B,KASnD;QACI,IAAI,OATO,IAAA,KAAS,QAAA,EAAU;YAU5B,OATO,WAAA,CAAY,IAAC,CAAI,CAAC;SAU1B;QACD,OATO,CAAA,WAAE,CAAW,IAAC,CAAI,CAAC,CAAC,CAAC,EAAE,WAAA,CAAY,IAAC,CAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAUrD,CATC,CAAC;CAUJ;;;;;;;;;;;;;;;;;;AAkBD,AAAA,SAAA,wBAAA,CACI,MAZQ,EAAQ,SAAW,EAAW,KAAO,EAWjD;IAEE,uBAZM,IAAA,GAAO,cAAA,CAAe,MAAC,CAAM,CAAC;IAapC,aAAa,CAZC,IAAC,CAAI,CAAC;IAapB,uBAZM,cAAA,IAA+B;QAanC,IAAI,CAAR,EAAA,iBAZmC,CAYnC,CAAA,6BAZ+E;QAa3E,IAAI,CAAR,EAAA,iBAZmC,CAYnC,CAAA,gCAZkF;KAa9E,CAAC,CAZD;IAaF,uBAZM,UAAA,GAAa,mBAAA,CAAoB,cAAC,EAAe,SAAA,CAAU,IAAI,EAAA,CAAG;IAaxE,OAZO,mBAAA,CAAoB,UAAC,EAAW,KAAA,CAAM,IAAI,EAAA,CAAG;CAarD;;;;;;;;;;;;;;AAcD,SAAA,mBAAA,CAf+B,IAAS,EAAG,KAAO,EAelD;IACE,KAAK,qBAfI,CAAA,GAAI,KAAA,EAAO,CAAA,GAAI,CAAA,CAAE,EAAE,CAAA,EAAE,EAAG;QAgB/B,IAAI,OAfO,IAAA,CAAK,CAAC,CAAC,KAAK,WAAA,EAAa;YAgBlC,OAfO,IAAA,CAAK,CAAC,CAAC,CAAC;SAgBhB;KACF;IACD,MAfM,IAAI,KAAA,CAAM,wCAAC,CAAwC,CAAC;CAgB3D;;;;;;AAgBD,SAAA,WAAA,CAhBqB,IAAM,EAgB3B;IACE,MAhBM,CAAA,CAAE,EAAE,CAAA,CAAE,GAAG,IAAA,CAAK,KAAC,CAAK,GAAC,CAAG,CAAC;IAiB/B,OAhBO,EAAA,KAAE,EAAM,CAAA,CAAE,EAAE,OAAA,EAAS,CAAA,CAAE,EAAC,CAAC;CAiBjC;;;;;;;;AAQD,AAAA,SAAA,cAAA,CAjB+B,MAAQ,EAiBvC;IACE,uBAjBM,gBAAA,GAAmB,MAAA,CAAO,WAAC,EAAW,CAAE,OAAC,CAAO,IAAC,EAAK,GAAA,CAAI,CAAC;IAmBjE,qBAjBI,KAAA,GAAQ,WAAA,CAAY,gBAAC,CAAgB,CAAC;IAkB1C,IAAI,KAjBC,EAAM;QAkBT,OAjBO,KAAA,CAAM;KAkBd;;IAGD,uBAjBM,YAAA,GAAe,gBAAA,CAAiB,KAAC,CAAK,GAAC,CAAG,CAAC,CAAC,CAAC,CAAC;IAkBpD,KAAK,GAjBG,WAAA,CAAY,YAAC,CAAY,CAAC;IAmBlC,IAAI,KAjBC,EAAM;QAkBT,OAjBO,KAAA,CAAM;KAkBd;IAED,IAAI,YAjBC,KAAgB,IAAA,EAAM;QAkBzB,OAjBO,QAAA,CAAS;KAkBjB;IAED,MAjBM,IAAI,KAAA,CAAM,CAiBlB,oCAAA,EAjBmB,MAAuC,CAiB1D,EAAA,CAjBgE,CAAI,CAAC;CAkBpE;;;;;;;;;;AAUD,AAAA,SAAA,kBAAA,CAnBmC,IAAM,EAAQ,MAAiB,EAmBlE;IACE,uBAnBM,QAAA,GAAW,UAAA,CAAW,IAAC,CAAI,IAAI,EAAA,CAAG;IAoBxC,uBAnBM,MAAA,GAAS,QAAA,CAAS,CAAC,CAAC,IAAI,IAAA,CAAK;IAoBnC,OAnBO,MAAA,KAAW,MAAA,GAAS,MAAA,GAAS,QAAA,CAAS,CAAC,CAAC,IAAI,MAAA,CAAO;CAoB3D;;AD5iBD;;;;;;;;;;;AAaA,AACA,AACA;;;;AAIA,AAAA,MAAA,cAAA,CAAA;CAHC;AAOD,AAWA;;;;;;;;;;;;AAYA,AAAA,SAAA,iBAAA,CACI,KApBO,EAAQ,KAAc,EAAG,cAAgB,EAAgB,MAAS,EAmB7E;IAEE,qBApBI,GAAA,GAAM,CAoBZ,CAAA,EApBY,KAAK,CAoBjB,CApBsB,CAAE;IAsBtB,IAAI,KApBC,CAAK,OAAC,CAAO,GAAC,CAAG,GAAG,CAAA,CAAE,EAAE;QAqB3B,OApBO,GAAA,CAAI;KAqBD;IAEZ,GAAG,GApBG,cAAA,CAAe,iBAAC,CAAiB,KAAC,EAAM,MAAA,CAAO,CAAC;IAsBtD,IAAI,KApBC,CAAK,OAAC,CAAO,GAAC,CAAG,GAAG,CAAA,CAAE,EAAE;QAqB3B,OApBO,GAAA,CAAI;KAqBZ;IAED,IAAI,KApBC,CAAK,OAAC,CAAO,OAAC,CAAO,GAAG,CAAA,CAAE,EAAE;QAqB/B,OApBO,OAAA,CAAQ;KAqBhB;IAED,MApBM,IAAI,KAAA,CAAM,CAoBlB,mCAAA,EApBmB,KAAsC,CAoBzD,CAAA,CApB8D,CAAG,CAAC;CAqBjE;;;;;;AAMD,AAAA,MAAA,oBAlBkC,SAAQ,cAAA,CAkB1C;;;;IAIA,WAAA,CArB2C,MAAQ,EAqBnD;QArB6D,KAAA,EAAM,CAAE;QAA1B,IAA3C,CAAA,MAA2C,GAAA,MAAA,CAAQ;KAAmB;;;;;;IA2BtE,iBAzBG,CAAiB,KAAO,EAAK,MAAS,EAyBzC;QACI,uBAzBM,MAAA,GAAS,mBAAA,CAAoB,MAAC,IAAS,IAAA,CAAK,MAAC,CAAM,CAAC,KAAC,CAAK,CAAC;QA2BjE,QAAQ,MAzBC;YA0BP,KAzBK,MAAA,CAAO,IAAC;gBA0BX,OAzBO,MAAA,CAAO;YA0BhB,KAzBK,MAAA,CAAO,GAAC;gBA0BX,OAzBO,KAAA,CAAM;YA0Bf,KAzBK,MAAA,CAAO,GAAC;gBA0BX,OAzBO,KAAA,CAAM;YA0Bf,KAzBK,MAAA,CAAO,GAAC;gBA0BX,OAzBO,KAAA,CAAM;YA0Bf,KAzBK,MAAA,CAAO,IAAC;gBA0BX,OAzBO,MAAA,CAAO;YA0BhB;gBACE,OAzBO,OAAA,CAAQ;SA0BlB;KACF;;AAxBI,oBAAP,CAAA,UAAO,GAA+C;IA0BtD,EAzBE,IAAA,EAAM,UAAA,EAvBN;CAiDD,CAzBC;;AAEK,oBAAP,CAAA,cAAO,GAA4F,MAAM;IA0BzG,EAAC,IAzBC,EAAK,SAAA,EAAW,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,MAAA,EAzBvB,IAAA,EAAA,CAAA,SAAO,EAAA,EAAA,EAAA,EAAA;CAmDtB,CAzBC,AA4BF,AAUC;;ADtHD;;;;;;;;;;;;;;;;;IAgBA,AAbA,SAAA,gBAAA,CAKiC,SAAW,EAAQ,IAAM,EAL1D;IAcE,IAAI,GARG,kBAAA,CAAmB,IAAC,CAAI,CAAC;IAShC,KAAK,uBARM,MAAA,IAAU,SAAA,CAAU,KAAC,CAAK,GAAC,CAAG,EAAE;QASzC,uBARM,OAAA,GAAU,MAAA,CAAO,OAAC,CAAO,GAAC,CAAG,CAAC;QASpC,MARM,CAAA,UAAE,EAAW,WAAA,CAAY,GAS3B,OAAO,IARI,CAAA,CAAE,GAAG,CAAA,MAAE,EAAO,EAAA,CAAG,GAAG,CAAA,MAAE,CAAM,KAAC,CAAK,CAAC,EAAE,OAAA,CAAQ,EAAE,MAAA,CAAO,KAAC,CAAK,OAAC,GAAS,CAAA,CAAE,CAAC,CAAC;QASzF,IAAI,UARC,CAAU,IAAC,EAAI,KAAM,IAAA,EAAM;YAS9B,OARO,kBAAA,CAAmB,WAAC,CAAW,CAAC;SASxC;KACF;IACD,OARO,IAAA,CAAK;CASb;;AD3BD;;;;;;;;;;;AAaA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,AAAA,MAAA,OAAA,CAAA;;;;;;;IAWA,WAAA,CAPc,gBAAkB,EAAyB,gBAAkB,EAC7D,KAAO,EAAoB,SAAW,EAMpD;QAPc,IAAd,CAAA,gBAAc,GAAA,gBAAA,CAAkB;QAAyB,IAAzD,CAAA,gBAAyD,GAAA,gBAAA,CAAkB;QAC7D,IAAd,CAAA,KAAc,GAAA,KAAA,CAAO;QAAoB,IAAzC,CAAA,SAAyC,GAAA,SAAA,CAAW;QAL1C,IAAV,CAAA,eAAU,GAA4B,EAAA,CAAG;KAKsB;;;;;IAe/D,IAZM,KAAA,CAAM,CAAG,EAYf;QACI,IAAI,CAZC,oBAAC,CAAoB,IAAC,CAAI,CAAC;QAahC,IAAI,CAZC,eAAC,GAAiB,OAAO,CAAA,KAAM,QAAA,GAAW,CAAA,CAAE,KAAC,CAAK,KAAC,CAAK,GAAG,EAAA,CAAG;QAanE,IAAI,CAZC,oBAAC,CAAoB,KAAC,CAAK,CAAC;QAajC,IAAI,CAZC,aAAC,CAAa,IAAC,CAAI,SAAC,EAAU,KAAA,CAAM,CAAC;KAa3C;;;;;IAKH,IAdM,OAAA,CAAQ,CAAqD,EAcnE;QACI,IAAA,CAdK,eAAC,CAAe,IAAC,CAAI,SAAC,CAAS,CAAC;QAgBrC,IAAI,CAdC,eAAC,GAAiB,IAAA,CAAK;QAe5B,IAAI,CAdC,eAAC,GAAiB,IAAA,CAAK;QAgB5B,IAAI,CAdC,SAAC,GAAW,OAAO,CAAA,KAAM,QAAA,GAAW,CAAA,CAAE,KAAC,CAAK,KAAC,CAAK,GAAG,CAAA,CAAE;QAgB5D,IAAI,IAdC,CAAI,SAAC,EAAU;YAelB,IAAAM,mBAdK,CAAkB,IAAC,CAAI,SAAC,CAAS,EAAE;gBAetC,IAAI,CAdC,eAAC,GAAiB,IAAA,CAAK,gBAAC,CAAgB,IAAC,CAAI,IAAC,CAAI,SAAC,CAAS,CAAC,MAAC,EAAM,CAAE;aAe5E;iBAdM;gBAeL,IAAI,CAdC,eAAC,GAAiB,IAAA,CAAK,gBAAC,CAAgB,IAAC,CAAI,IAAC,CAAI,SAAC,CAAS,CAAC,MAAC,EAAM,CAAE;aAe5E;SACF;KACF;;;;IAIH,SAhBG,GAgBH;QACI,IAAA,IAhBK,CAAI,eAAC,EAAgB;YAiBxB,uBAhBM,eAAA,GAAkB,IAAA,CAAK,eAAC,CAAe,IAAC,mBAAI,IAAC,CAAI,SAAoB,EAAE,CAAC;YAiB9E,IAAI,eAhBC,EAAgB;gBAiBnB,IAAI,CAhBC,qBAAC,CAAqB,eAAC,CAAe,CAAC;aAiB7C;SACF;aAhBM,IAAA,IAAK,CAAI,eAAC,EAAgB;YAiB/B,uBAhBM,eAAA,GAAkB,IAAA,CAAK,eAAC,CAAe,IAAC,mBAAI,IAAC,CAAI,SAA8B,EAAC,CAAC;YAiBvF,IAAI,eAhBC,EAAgB;gBAiBnB,IAAA,CAhBK,qBAAC,CAAqB,eAAC,CAAe,CAAC;aAiB7C;SACH;KACD;;;;;IAdO,eAAA,CAAgB,WAA4C,EAAtE;QAqBI,IAAI,CApBC,aAAC,CAAa,WAAC,EAAY,IAAA,CAAK,CAAC;QAqBtC,IAAI,CApBC,oBAAC,CAAoB,KAAC,CAAK,CAAC;KAqBlC;;;;;IAlBO,qBAAA,CAAsB,OAAqC,EAArE;QAyBI,OAAA,CAxBQ,gBAAC,CAAgB,CAAC,MAAC,KAAU,IAAA,CAAK,YAAC,CAAY,MAAC,CAAM,GAAC,EAAI,MAAA,CAAO,YAAC,CAAY,CAAC,CAAC;QAyBzF,OAAO,CAxBC,kBAAC,CAAkB,CAAC,MAAC,KAAU,IAAA,CAAK,YAAC,CAAY,MAAC,CAAM,GAAC,EAAI,MAAA,CAAO,YAAC,CAAY,CAAC,CAAC;QAyB3F,OAAM,CAxBE,kBAAC,CAAkB,CAAC,MAAC,KAwBjC;YACM,IAAI,MAxBC,CAAM,aAAC,EAAc;gBAyBxB,IAAC,CAxBI,YAAC,CAAY,MAAC,CAAM,GAAC,EAAI,KAAA,CAAM,CAAC;aAyBtC;SACF,CAxBC,CAAC;KAyBJ;;;;;IAtBO,qBAAA,CAAsB,OAAgC,EAAhE;QA6BI,OAAO,CA5BC,gBAAC,CAAgB,CAAC,MAAC,KA4B/B;YACM,IAAI,OA5BO,MAAA,CAAO,IAAC,KAAQ,QAAA,EAAU;gBA6BnC,IAAI,CA5BC,YAAC,CAAY,MAAC,CAAM,IAAC,EAAK,IAAA,CAAK,CAAC;aA6BtC;iBA5BM;gBA6BL,MA5BM,IAAI,KAAA,CA6BN,CADZ,8DAAA,EACuBD,UA5BuD,CAAS,MAAC,CAAM,IAAC,CAAI,CA2BnG,CA3BoG,CAAE,CAAC;aA6BhG;SACF,CA5BC,CAAC;QA8BH,OAAM,CA5BE,kBAAC,CAAkB,CAAC,MAAC,KAAU,IAAA,CAAK,YAAC,CAAY,MAAC,CAAM,IAAC,EAAK,KAAA,CAAM,CAAC,CAAC;KA6B/E;;;;;IA1BO,oBAAA,CAAqB,SAAW,EAA1C;QAiCI,IAAI,CAhCC,eAAC,CAAe,OAAC,CAAO,KAAC,IAAQ,IAAA,CAAK,YAAC,CAAY,KAAC,EAAM,CAAA,SAAE,CAAS,CAAC,CAAC;KAiC7E;;;;;;IA9BO,aAAA,CAsCJ,WArCwD,EAAE,SAAW,EAD3E;QAyBE,IAAA,WAvBO,EAAY;YAsCf,IAAI,KArCC,CAAK,OAAC,CAAO,WAAC,CAAW,IAAI,WAAA,YAAuB,GAAA,EAAK;gBAsC5D,EArCM,WAAC,GAAY,OAAC,CAAO,CAAC,KAAO,KAAW,IAAA,CAAK,YAAC,CAAY,KAAC,EAAM,CAAA,SAAE,CAAS,CAAC,CAAC;aAsCrF;iBArCM;gBAsCL,MAAM,CArCC,IAAC,CAAI,WAAC,CAAW,CAAC,OAAC,CAAO,KAAC,IAqC1C;oBACU,IAAI,WArCC,CAAW,KAAC,CAAK,IAAI,IAAA;wBAAM,IAAA,CAAK,YAAC,CAAY,KAAC,EAAM,CAAA,SAAE,CAAS,CAAC;iBAsCtE,CArCC,CAAC;aAsCJ;SACF;KACF;;;;;;IAnCO,YAAA,CAAa,KAAO,EAAQ,OAAS,EAA/C;QA2CI,KAAK,GA1CG,KAAA,CAAM,IAAC,EAAI,CAAE;QA2CrB,IAAI,KA1CC,EAAM;YA2CT,KAAK,CA1CC,KAAC,CAAK,MAAC,CAAM,CAAC,OAAC,CAAO,KAAC,IA0CnC;gBACQ,IAAI,OA1CC,EAAQ;oBA2CX,IAAI,CA1CC,SAAC,CAAS,QAAC,CAAQ,IAAC,CAAI,KAAC,CAAK,aAAC,EAAc,KAAA,CAAM,CAAC;iBA2C1D;qBA1CM;oBA2CL,IAAI,CA1CC,SAAC,CAAS,WAAC,CAAW,IAAC,CAAI,KAAC,CAAK,aAAC,EAAc,KAAA,CAAM,CAAC;iBA2C7D;aACF,CA1CC,CAAC;SA2CJ;KACF;;AAzCI,OAAP,CAAA,UAAO,GAA+C;IA2CtD,EA1CE,IAAA,EAAM,SAAA,EA7GN,IAAA,EAAA,CAAA,EAAU,QAAC,EAAS,WAAA,EAAY,EAAA,EAAA;CAwJjC,CA1CC;;AAEK,OAAP,CAAA,cAAO,GAA4F,MAAM;IA2CzG,EAAC,IA1CC,EAAK,eAAA,GAAgB;IA2CvB,EAAC,IA1CC,EAAK,eAAA,GAAgB;IA2CvB,EAAC,IA1CC,EAAK,UAAA,GAAW;IA2ClB,EAAC,IA1CC,EAAK,SAAA,GAAU;CA2ChB,CA1CC;AACK,OAAP,CAAA,cAAO,GAAoE;IA2C3E,OAAO,EA1CE,CAAA,EAAG,IAAA,EAAM,KAAA,EA5Gd,IAAA,EAAA,CAAA,OAAM,EAAA,EAAA,EAAA;IAuJV,SAAS,EA1CE,CAAA,EAAG,IAAA,EAAM,KAAA,EArGhB,EAAA;CAgJH,CA1CC,AA6CF,AA0BC;;ADtOD;;;;;;;;;;;AAaA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,AAAA,MAAA,iBAAA,CAAA;;;;IAUA,WAAA,CAFsB,iBAAmB,EAEzC;QAFsB,IAAtB,CAAA,iBAAsB,GAAA,iBAAA,CAAmB;QAH/B,IAAV,CAAA,aAAU,GAAwC,IAAA,CAAK;QAC7C,IAAV,CAAA,UAAU,GAAoC,IAAA,CAAK;KAEQ;;;;;IAO3D,WALG,CAAW,OAAS,EAKvB;QACI,IAAI,CALC,iBAAC,CAAiB,KAAC,EAAK,CAAE;QAM/B,IAAI,CALC,aAAC,GAAe,IAAA,CAAK;QAO1B,IAAI,IALC,CAAI,iBAAC,EAAkB;YAM1B,uBALM,UAAA,GAAa,IAAA,CAAK,yBAAC,IAA4B,IAAA,CAAK,iBAAC,CAAiB,cAAC,CAAc;YAO3F,IAAI,OALC,CAAO,kCAAC,CAAkC,EAAE;gBAM/C,IAAE,IALG,CAAI,UAAC;oBAAW,IAAA,CAAK,UAAC,CAAU,OAAC,EAAO,CAAE;gBAO/C,IAAE,IALG,CAAI,gCAAC,EAAiC;oBAM3C,uBALQ,YAAA,GAAe,UAAA,CAAW,GAAC,CAAG,WAAC,CAAW,CAAC;oBAMjD,IAAI,CALC,UAAC,GAAY,IAAA,CAAK,gCAAC,CAAgC,MAAC,CAAM,YAAC,CAAY,QAAC,CAAQ,CAAC;iBAMvF;qBALM;oBAML,IAAI,CALC,UAAC,GAAY,IAAA,CAAK;iBAMxB;aACF;YAED,uBALM,wBAAA,GAA2B,IAAA,CAAK,UAAC,GAAY,IAAA,CAAK,UAAC,CAAU,wBAAC;gBAMvB,UAAgB,CALC,GAAC,CAAG,wBAAC,CAAwB,CAAC;YAO5F,uBALM,gBAAA,GAMN,wBAAA,CAL6B,uBAAC,CAAuB,IAAC,CAAI,iBAAC,CAAiB,CAAC;YAO7E,IAAI,CALC,aAAC,GAAe,IAAA,CAAK,iBAAC,CAAiB,eAAC,CAMzC,gBAAQ,EALU,IAAA,CAAK,iBAAC,CAAiB,MAAC,EAAO,UAAA,EAMlD,IAAK,CALC,wBAAC,CAAwB,CAAC;SAMrC;KACD;;;;IAIH,WAPG,GAOH;QACI,IAAI,IAPC,CAAI,UAAC;YAAW,IAAA,CAAK,UAAC,CAAU,OAAC,EAAO,CAAE;KAQhD;;AANI,iBAAP,CAAA,UAAO,GAA+C;IAQtD,EAPE,IAAA,EAAM,SAAA,EA9CN,IAAA,EAAA,CAAA,EAAU,QAAC,EAAS,qBAAA,EAAsB,EAAA,EAAA;CAsD3C,CAPC;;AAEK,iBAAP,CAAA,cAAO,GAA4F,MAAM;IAQzG,EAAC,IAPC,EAAK,gBAAA,GAAiB;CALvB,CAMC;AACK,iBAAP,CAAA,cAAO,GAAoE;IAQ3E,mBAAmB,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAnD1B,EAAA;IA2DJ,2BAA2B,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAnDlC,EAAA;IA2DJ,0BAA0B,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAnDjC,EAAA;IA2DJ,kCAAkC,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAnDzC,EAAA;CA2DH,CAPC,AAUF,AAwBC;;AD7JD;;;;;;;;;;;AAaA,AACA;;;AAGA,AAAA,MAAA,cAAA,CAAA;;;;;;;IAOA,WAAA,CATa,SAAW,EAAU,OAAsB,EAAS,KAAO,EAC3D,KAAO,EAQpB;QATa,IAAb,CAAA,SAAa,GAAA,SAAA,CAAW;QAAU,IAAlC,CAAA,OAAkC,GAAA,OAAA,CAAsB;QAAS,IAAjE,CAAA,KAAiE,GAAA,KAAA,CAAO;QAC3D,IAAb,CAAA,KAAa,GAAA,KAAA,CAAO;KAAQ;;;;IAgB5B,IAdM,KAAA,GAcN,EAdyB,OAAO,IAAA,CAAK,KAAC,KAAS,CAAA,CAAE,EAAC;;;;IAkBlD,IAhBM,IAAA,GAgBN,EAhBwB,OAAO,IAAA,CAAK,KAAC,KAAS,IAAA,CAAK,KAAC,GAAO,CAAA,CAAE,EAAC;;;;IAoB9D,IAlBM,IAAA,GAkBN,EAlBwB,OAAO,IAAA,CAAK,KAAC,GAAO,CAAA,KAAM,CAAA,CAAE,EAAC;;;;IAsBrD,IApBM,GAAA,GAoBN,EApBuB,OAAO,CAAA,IAAE,CAAI,IAAC,CAAI,EAAC;CACzC;AAsBD,AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA,AAAA,MAAA,OAAA,CAAA;;;;;;IA4BA,WAAA,CArCc,cAAgB,EAA0B,SAAyC,EACnF,QAAU,EAoCxB;QArCc,IAAd,CAAA,cAAc,GAAA,cAAA,CAAgB;QAA0B,IAAxD,CAAA,SAAwD,GAAA,SAAA,CAAyC;QACnF,IAAd,CAAA,QAAc,GAAA,QAAA,CAAU;QALd,IAAV,CAAA,OAAU,GAAkC,IAAA,CAAK;KAKR;;;;;IAczC,IAjCM,YAAA,CAAa,EAAsB,EAiCzC;QACI,IAAI,SAjCC,EAAS,IAAK,EAAA,IAAM,IAAA,IAAQ,OAAO,EAAA,KAAO,UAAA,EAAY;;YAmCzD,IAAQ,CAjCC,OAAC,MAAe,OAAC,CAAO,IAAC,CAAA,EAAK;gBAkCrC,OAAO,CAjCC,IAAC,CAkCP,CADV,yCAAA,EACsB,IAjCmC,CAAI,SAAC,CAAS,EAAC,CAAE,CAgC1E,EAAA,CAhC2E;oBAkC/D,CAAZ,sHAAA,CAA2B,CAjC0G,CAAC;aAkC/H;SACF;QACD,IAAI,CAjCC,UAAC,GAAY,EAAA,CAAG;KAkCtB;;;;IAIH,IAnCM,YAAA,GAmCN,EAnC2C,OAAO,IAAA,CAAK,UAAC,CAAU,EAAC;;;;;IAmDnE,IAzCM,aAAA,CAAc,KAAqC,EAyCzD;;;;QAII,IAAI,KAzCC,EAAM;YA0CT,IAAI,CAzCC,SAAC,GAAW,KAAA,CAAM;SA0CxB;KACF;;;;;IAKH,WA5CG,CAAW,OAAS,EA4CvB;QACI,IAAI,SA5CC,IAAY,OAAA,EAAS;;YA8CxB,uBA5CM,KAAA,GAAQ,OAAA,CAAQ,SAAC,CAAS,CAAC,YAAC,CAAY;YA6C9C,IAAI,CA5CC,IAAC,CAAI,OAAC,IAAU,KAAA,EAAO;gBA6C5B,IA5CM;oBA6CF,IAAI,CA5CC,OAAC,GAAS,IAAA,CAAK,QAAC,CAAQ,IAAC,CAAI,KAAC,CAAK,CAAC,MAAC,CAAM,IAAC,CAAI,YAAC,CAAY,CAAC;iBA6CpE;gBA5CC,OAAA,CAAQ,EAAE;oBA6CV,MA5CM,IAAI,KAAA,CA6CR,CADZ,wCAAA,EACoD,KA5CM,CA2C1D,WAAA,EA3C+D,uBAAc,CAAuB,KAAC,CAAK,CA2C1G,2DAAA,CA3C2G,CAA6D,CAAC;iBA6ChK;aACF;SACH;KACD;;;;IAIH,SA9CG,GA8CH;QACI,IAAI,IA9CC,CAAI,OAAC,EAAQ;YA+ChB,uBA9CM,OAAA,GAAU,IAAA,CAAK,OAAC,CAAO,IAAC,CAAI,IAAC,CAAI,OAAC,CAAO,CAAC;YA+ChD,IAAI,OA9CC;gBAAQ,IAAA,CAAK,aAAC,CAAa,OAAC,CAAO,CAAC;SA+C1C;KACF;;;;;IA5CO,aAAA,CAAc,OAA2B,EAAnD;QAmDI,uBAlDM,YAAA,GAAqC,EAAA,CAAG;QAmD9C,OAAO,CAlDC,gBAAC,CAmDL,CAAC,IAlD+B,EAAE,qBAAuB,EAAQ,YAAc,KAiDvF;YAZE,IAAA,IApCa,CAAI,aAAC,IAAgB,IAAA,EAAM;gBAmD9B,uBAlDM,IAAA,GAAO,IAAA,CAAK,cAAC,CAAc,kBAAC,CAqCxC,IAAA,CApCe,SAAC,EAAU,IAAI,cAAA,oBAAiB,IAAE,IAAO,IAAA,CAAK,OAAC,EAAQ,CAAA,CAAE,EAAE,CAAA,CAAE,CAAC,EAAE,YAAA,CAAa,CAAC;gBAmDvF,uBAlDM,KAAA,GAAQ,IAAI,eAAA,CAAkB,IAAE,EAAK,IAAA,CAAK,CAAC;gBAqC3D,YAAA,CApCuB,IAAC,CAAI,KAAC,CAAK,CAAC;aAmD1B;iBAlDM,IAAA,YAAK,IAAe,IAAA,EAAM;gBAqCpC,IAAS,CApCC,cAAC,CAAc,MAAC,CAAM,qBAAC,CAAqB,CAAC;aAqCrD;iBApCQ;gBAqCf,uBApCgB,IAAA,KAAO,IAAA,CAAK,cAAC,CAAc,GAAC,CAAG,qBAAC,CAAqB,EAAA,CAAG;gBAmD9D,IAAI,CAlDC,cAAC,CAAc,IAAC,CAAI,IAAC,EAAK,YAAA,CAAa,CAAC;gBAmD7C,uBAlDM,KAAA,GAAQ,IAAI,eAAA,CAAgB,IAAC,oBAAyC,IAAC,EAAI,CAAC;gBAmDlF,YAAY,CAlDC,IAAC,CAAI,KAAC,CAAK,CAAC;aAmD1B;SACF,CAlDC,CAAC;QAoDP,KAAK,qBAlDI,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,YAAA,CAAa,MAAC,EAAO,CAAA,EAAE,EAAG;YAmD5C,IAAI,CAlDC,cAAC,CAAc,YAAC,CAAY,CAAC,CAAC,CAAC,IAAC,EAAK,YAAA,CAAa,CAAC,CAAC,CAAC,MAAC,CAAM,CAAC;SAmDnE;QAED,KAAK,qBAlDI,CAAA,GAAI,CAAA,mBAAG,IAAA,GAAO,IAAA,CAAK,cAAC,CAAc,MAAC,EAAO,CAAA,GAAI,IAAA,EAAM,CAAA,EAAE,EAAG;YAmDhE,uBAlDM,OAAA,IAA8C,IAAC,CAAI,cAAC,CAAc,GAAC,CAAG,CAAC,CAAC,CAAA,CAAC;YAmD/E,OAAO,CAlDC,OAAC,CAAO,KAAC,GAAO,CAAA,CAAE;YAmD1B,OAAO,CAlDC,OAAC,CAAO,KAAC,GAAO,IAAA,CAAK;SAmD9B;QAED,OAAO,CAlDC,qBAAC,CAAqB,CAAC,MAAQ,KAkD3C;YACM,uBAlDM,OAAA,IACkC,IAAC,CAAI,cAAC,CAAc,GAAC,CAAG,MAAC,CAAM,YAAC,CAAY,CAAA,CAAC;YAmDrF,OAAO,CAlDC,OAAC,CAAO,SAAC,GAAW,MAAA,CAAO,IAAC,CAAI;SAmDzC,CAlDC,CAAC;KAmDJ;;;;;;IAhDO,cAAA,CAwDJ,IAvDwC,EAAE,MAAiC,EADjF;QAyDI,IAAI,CAvDC,OAAC,CAAO,SAAC,GAAW,MAAA,CAAO,IAAC,CAAI;KAwDtC;;AAtDI,OAAP,CAAA,UAAO,GAA+C;IAwDtD,EAvDE,IAAA,EAAM,SAAA,EAlGN,IAAA,EAAA,CAAA,EAAU,QAAC,EAAS,kBAAA,EAAmB,EAAA,EAAA;CA0JxC,CAvDC;;AAEK,OAAP,CAAA,cAAO,GAA4F,MAAM;IAwDzG,EAAC,IAvDC,EAAK,gBAAA,GAAiB;IAwDxB,EAAC,IAvDC,EAAK,WAAA,GAAY;IAwDnB,EAAC,IAvDC,EAAK,eAAA,GAAgB;CAwDtB,CAvDC;AACK,OAAP,CAAA,cAAO,GAAoE;IAwD3E,SAAS,EAvDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAzGhB,EAAA;IAiKJ,cAAc,EAvDE,CAAA,EAAG,IAAA,EAAM,KAAA,EAzGrB,EAAA;IAiKJ,eAAe,EAvDE,CAAA,EAAG,IAAA,EAAM,KAAA,EApFtB,EAAA;CA4IH,CAvDC;AA0DF,AAwBA,MAAA,eAAA,CAAA;;;;;IAKA,WAAA,CAjGqB,MAAQ,EAAY,IAAwC,EAiGjF;QAjGqB,IAArB,CAAA,MAAqB,GAAA,MAAA,CAAQ;QAAY,IAAzC,CAAA,IAAyC,GAAA,IAAA,CAAwC;KAAE;CAClF;AAoGD,AAOA;;;;AAIA,AAAA,SAAA,uBAAA,CA7GwC,IAAM,EA6G9C;IACE,OA7GO,IAAA,CAAK,MAAC,CAAM,IAAI,OAAO,IAAA,CAAK;CA8GpC;;ADxTD;;;;;;;;;;;AAaA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA,AAAA,MAAA,IAAA,CAAA;;;;;IAUA,WAAA,CALsB,cAAgB,EAAkB,WAAqC,EAK7F;QALsB,IAAtB,CAAA,cAAsB,GAAA,cAAA,CAAgB;QAN5B,IAAV,CAAA,QAAU,GAAwB,IAAI,WAAA,EAAY,CAAE;QAC1C,IAAV,CAAA,gBAAU,GAAkD,IAAA,CAAK;QACvD,IAAV,CAAA,gBAAU,GAAkD,IAAA,CAAK;QACvD,IAAV,CAAA,YAAU,GAAkD,IAAA,CAAK;QACvD,IAAV,CAAA,YAAU,GAAkD,IAAA,CAAK;QAQ7D,IAAI,CALC,gBAAC,GAAkB,WAAA,CAAY;KAMrC;;;;;IAKH,IAPM,IAAA,CAAK,SAAW,EAOtB;QACI,IAAI,CAPC,QAAC,CAAQ,SAAC,GAAW,IAAA,CAAK,QAAC,CAAQ,IAAC,GAAM,SAAA,CAAU;QAQzD,IAAI,CAPC,WAAC,EAAW,CAAE;KAQpB;;;;;IAKH,IATM,QAAA,CAAS,WAAqC,EASpD;QACI,IAAI,CATC,gBAAC,GAAkB,WAAA,CAAY;QAUpC,IAAA,CATK,YAAC,GAAc,IAAA,CAAK;QAUzB,IAAI,CATC,WAAC,EAAW,CAAE;KAUpB;;;;;IAKH,IAXM,QAAA,CAAS,WAAqC,EAWpD;QACI,IAAI,CAXC,gBAAC,GAAkB,WAAA,CAAY;QAYpC,IAAI,CAXC,YAAC,GAAc,IAAA,CAAK;QAYzB,IAAI,CAXC,WAAC,EAAW,CAAE;KAYpB;;;;IATO,WAAA,GAAV;QAeI,IAAI,IAdC,CAAI,QAAC,CAAQ,SAAC,EAAU;YAe3B,IAAI,CAdC,IAAC,CAAI,YAAC,EAAa;gBAetB,IAAE,CAdG,cAAC,CAAc,KAAC,EAAK,CAAE;gBAe5B,IAAA,CAdK,YAAC,GAAc,IAAA,CAAK;gBAe3B,IAAA,IAdO,CAAI,gBAAC,EAAiB;oBAe/B,IAAA,CAdW,YAAC;wBAeF,IAAI,CAdC,cAAC,CAAc,kBAAC,CAAkB,IAAC,CAAI,gBAAC,EAAiB,IAAA,CAAK,QAAC,CAAQ,CAAC;iBAvCzF;aAuDK;SACF;aAdM;YAeL,IAAI,CAdC,IAAC,CAAI,YAAC,EAAa;gBAetB,IAAI,CAdC,cAAC,CAAc,KAAC,EAAK,CAAE;gBAe5B,IAAI,CAdC,YAAC,GAAc,IAAA,CAAK;gBAezB,IAAI,IAdC,CAAI,gBAAC,EAAiB;oBAezB,IAAI,CAdC,YAAC;wBAeF,IAlDV,CAoCe,cAAC,CAAc,kBAAC,CAAkB,IAAC,CAAI,gBAAC,EAAiB,IAAA,CAAK,QAAC,CAAQ,CAAC;iBAelF;aACF;SACF;KAZH;;AAAK,IAAP,CAAA,UAAO,GAA+C;IAetD,EAdE,IAAA,EAAM,SAAA,EAtDN,IAAA,EAAA,CAAA,EAAU,QAAC,EAAS,QAAA,EAAS,EAAA,EAAA;CAqE9B,CAdC;;AAEK,IAAP,CAAA,cAAO,GAA4F,MAAM;IAezG,EAAC,IAdC,EAAK,gBAAA,GAAiB;IAexB,EAAC,IAdC,EAAK,WAAA,GAAY;CAElB,CADC;AACK,IAAP,CAAA,cAAO,GAAoE;IAe3E,MAAM,EAdE,CAAA,EAAG,IAAA,EAAM,KAAA,EAlDb,EAAA;IAiEJ,UAAU,EAdE,CAAA,EAAG,IAAA,EAAM,KAAA,EA7CjB,EAAA;IA4DJ,UAAU,EAdE,CAAA,EAAG,IAAA,EAAM,KAAA,EAvCjB,EAAA;CAsDH,CAdC;AAiBF,AAwBA;;;AAGA,AAAA,MAAA,WAAA,CAAA;IAAA,WAAA,GAAA;QAlDS,IAAT,CAAA,SAAS,GAAiB,IAAA,CAAK;QACtB,IAAT,CAAA,IAAS,GAAY,IAAA,CAAK;KACzB;CAAA,AAqDD,AAKC;;AD5ND;;;;;;;;;;;AAaA,AACA,AAAA,MAAA,UAAA,CAAA;;;;;IAMA,WAAA,CANc,iBAAmB,EAA0B,YAAiC,EAM5F;QANc,IAAd,CAAA,iBAAc,GAAA,iBAAA,CAAmB;QAA0B,IAA3D,CAAA,YAA2D,GAAA,YAAA,CAAiC;QAHlF,IAAV,CAAA,QAAU,GAAW,KAAA,CAAM;KAGmE;;;;IAY9F,MAVG,GAUH;QACI,IAAI,CAVC,QAAC,GAAU,IAAA,CAAK;QAWrB,IAAI,CAVC,iBAAC,CAAiB,kBAAC,CAAkB,IAAC,CAAI,YAAC,CAAY,CAAC;KAW9D;;;;IAIH,OAZG,GAYH;QACI,IAAI,CAZC,QAAC,GAAU,KAAA,CAAM;QAatB,IAAI,CAZC,iBAAC,CAAiB,KAAC,EAAK,CAAE;KAahC;;;;;IAKH,YAfG,CAAY,OAAS,EAexB;QACI,IAAI,OAfC,IAAU,CAAA,IAAE,CAAI,QAAC,EAAS;YAgB7B,IAAI,CAfC,MAAC,EAAM,CAAE;SAgBf;aAfM,IAAA,CAAK,OAAC,IAAU,IAAA,CAAK,QAAC,EAAS;YAgBpC,IAAI,CAfC,OAAC,EAAO,CAAE;SAgBhB;KACF;CAdF;AAiBD,AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,AAAA,MAAA,QAAA,CAAA;IAAA,WAAA,GAAA;QArBU,IAAV,CAAA,YAAU,GAAe,KAAA,CAAM;QACrB,IAAV,CAAA,UAAU,GAAa,CAAA,CAAE;QACf,IAAV,CAAA,mBAAU,GAAsB,CAAA,CAAE;QACxB,IAAV,CAAA,iBAAU,GAAoB,KAAA,CAAM;KA4CnC;;;;;IAfD,IAzBM,QAAA,CAAS,QAAU,EAyBzB;QACI,IAAI,CAzBC,SAAC,GAAW,QAAA,CAAS;QA0B1B,IAAE,IAzBG,CAAI,UAAC,KAAc,CAAA,EAAG;YA0BzB,IAAI,CAzBC,mBAAC,CAAmB,IAAC,CAAI,CAAC;SA0BjC;KACD;;;;;IAKH,QA3BG,GA2BH,EA3BuB,OAAO,IAAA,CAAK,UAAC,EAAU,CAAE,EAAC;;;;;;IAiCjD,WA9BG,CAAW,IAAM,EA8BpB;QACI,IAAI,CA9BC,IAAC,CAAI,aAAC,EAAc;YA+BvB,IAAI,CA9BC,aAAC,GAAe,EAAA,CAAG;SA+BzB;QACD,IAAI,CA9BC,aAAC,CAAa,IAAC,CAAI,IAAC,CAAI,CAAC;KA+B/B;;;;;;IAMH,UAjCG,CAAU,KAAO,EAiCpB;QACI,uBAjCM,OAAA,GAAU,KAAA,IAAS,IAAA,CAAK,SAAC,CAAS;QAkCxC,IAAI,CAjCC,iBAAC,GAAmB,IAAA,CAAK,iBAAC,IAAoB,OAAA,CAAQ;QAkC3D,IAAI,CAjCC,mBAAC,EAAmB,CAAE;QAkC3B,IAAI,IAjCC,CAAI,mBAAC,KAAuB,IAAA,CAAK,UAAC,EAAW;YAkChD,IAAI,CAjCC,mBAAC,CAAmB,CAAC,IAAC,CAAI,iBAAC,CAAiB,CAAC;YAkClD,IAAI,CAjCC,mBAAC,GAAqB,CAAA,CAAE;YAkC7B,IAAI,CAjCC,iBAAC,GAAmB,KAAA,CAAM;SAkChC;QACD,OAjCO,OAAA,CAAQ;KAkChB;;;;;IA/BO,mBAAA,CAAoB,UAAY,EAA1C;QAsCI,IAAI,IArCC,CAAI,aAAC,IAAgB,UAAA,KAAe,IAAA,CAAK,YAAC,EAAa;YAsC1D,IAAI,CArCC,YAAC,GAAc,UAAA,CAAW;YAsC/B,KAAK,qBArCI,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,IAAA,CAAK,aAAC,CAAa,MAAC,EAAO,CAAA,EAAE,EAAG;gBAsClD,uBArCM,WAAA,GAAc,IAAA,CAAK,aAAC,CAAa,CAAC,CAAC,CAAC;gBAsC1C,WAAW,CArCC,YAAC,CAAY,UAAC,CAAU,CAAC;aAsCtC;SARkC;KAUtC;;AApCI,QAAP,CAAA,UAAO,GAA+C;IAsCtD,EArCE,IAAA,EAAM,SAAA,EAnDN,IAAA,EAAA,CAAA,EAAU,QAAC,EAAS,YAAA,EAAa,EAAA,EAAA;CAyFlC,CArCC;;AAEK,QAAP,CAAA,cAAO,GAA4F,MAAM,EAsCxG,CArCC;AACK,QAAP,CAAA,cAAO,GAAoE;IAsC3E,UATc,EA5BF,CAAA,EAAG,IAAA,EAAM,KAAA,EAhDjB,EAAA;CAsFH,CArCC;AAwCF,AAwBA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,AAAA,MAAA,YAAA,CAAA;;;;;;IAUA,WAAA,CACM,aAzEe,EAAkB,WAAgC,EACjD,QAAU,EAuEhC;QAvEsB,IAAtB,CAAA,QAAsB,GAAA,QAAA,CAAU;QA0E5B,QAAQ,CAzEC,QAAC,EAAQ,CAAE;QA0EpB,IAAI,CAzEC,KAAC,GAAO,IAAI,UAAA,CAAW,aAAC,EAAc,WAAA,CAAY,CAAC;KA0EzD;;;;IAIH,SAlEG,GAkEH,EA3EgB,IAAA,CAAK,KAAC,CAAK,YAAC,CAAY,IAAC,CAAI,QAAC,CAAQ,UAAC,CAAU,IAAC,CAAI,YAAC,CAAY,CAAC,CAAC,EAAC;;AAU/E,YAAP,CAAA,UAAO,GAA+C;IAmEtD,EAlEE,IAAA,EAAM,SAAA,EAzBN,IAAA,EAAA,CAAA,EAAU,QAAC,EAAS,gBAAA,EAAiB,EAAA,EAAA;CA4FtC,CAlEC;;AAEK,YAAP,CAAA,cAAO,GAA4F,MAAM;IAmEzG,EAAC,IAlEC,EAAK,gBAAA,GAAiB;IAmExB,EAAC,IAlEC,EAAK,WAAA,GAAY;IAmEnB,EAAC,IAlEC,EAAK,QAAA,EA1GO,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAoFN,EAAA,EAAA;CAyFP,CAlEC;AACK,YAAP,CAAA,cAAO,GAAoE;IAmE3E,cAAc,EAlEE,CAAA,EAAG,IAAA,EAAM,KAAA,EA9BrB,EAAA;CAiGH,CAlEC;AAqEF,AAkBA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,AAAA,MAAA,eAAA,CAAA;;;;;;IAMA,WAAA,CACM,aA7Ge,EAAkB,WAAgC,EA8GhE,QA7GiB,EA2GxB;QAGI,QAAQ,CA7GC,WAAC,CAAW,IAAI,UAAA,CAAW,aAAC,EAAc,WAAA,CAAY,CAAC,CAAC;KA8GlE;;AAvFI,eAAP,CAAA,UAAO,GAA+C;IAyFtD,EAxFE,IAAA,EAAM,SAAA,EA7BN,IAAA,EAAA,CAAA,EAAU,QAAC,EAAS,mBAAA,EAAoB,EAAA,EAAA;CAsHzC,CAxFC;;AAEK,eAAP,CAAA,cAAO,GAA4F,MAAM;IAyFzG,EAAC,IAxFC,EAAK,gBAAA,GAAiB;IAyFxB,EAAC,IAxFC,EAAK,WAAA,GAAY;IAyFnB,EAAC,IAxFC,EAAK,QAAA,EAtJO,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAuHN,EAAA,EAAA;CAwHP,CAxFC,AA2FF,AAQC;;ADvUD;;;;;;;;;;;AAaA,AAEA,AAEA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,AAAA,MAAA,QAAA,CAAA;;;;IAOA,WAAA,CAJsB,aAAe,EAIrC;QAJsB,IAAtB,CAAA,aAAsB,GAAA,aAAA,CAAe;QAF3B,IAAV,CAAA,UAAU,GAAwC,EAAA,CAAG;KAEA;;;;;IASrD,IANM,QAAA,CAAS,KAAO,EAMtB;QACI,IAAI,CANC,YAAC,GAAc,KAAA,CAAM;QAO1B,IAAI,CANC,WAAC,EAAW,CAAE;KAOpB;;;;;;IAMH,OAVG,CAAO,KAAO,EAAQ,UAAY,EAUrC,EAVyD,IAAA,CAAK,UAAC,CAAU,KAAC,CAAK,GAAG,UAAA,CAAW,EAAC;;;;IAEpF,WAAA,GAAV;QAcI,IAAI,CAbC,WAAC,EAAW,CAAE;QAenB,uBAbM,KAAA,GAAQ,MAAA,CAAO,IAAC,CAAI,IAAC,CAAI,UAAC,CAAU,CAAC;QAc3C,uBAbM,GAAA,GAAM,iBAAA,CAAkB,IAAC,CAAI,YAAC,EAAa,KAAA,EAAO,IAAA,CAAK,aAAC,CAAa,CAAC;QAc5E,IAAI,CAbC,aAAC,CAAa,IAAC,CAAI,UAAC,CAAU,GAAC,CAAG,CAAC,CAAC;KAc1C;;;;IAXO,WAAA,GAAV;QAiBI,IAAI,IAhBC,CAAI,WAAC;YAAY,IAAA,CAAK,WAAC,CAAW,OAAC,EAAO,CAAE;KAiBlD;;;;;IAdO,aAAA,CAAc,IAAM,EAA9B;QAqBI,IAAI,IApBC,EAAK;YAqBR,IAAI,CApBC,WAAC,GAAa,IAAA,CAAK;YAqBxB,IAAI,CApBC,WAAC,CAAW,MAAC,EAAM,CAAE;SAqB3B;KACF;;AAnBI,QAAP,CAAA,UAAO,GAA+C;IAqBtD,EApBE,IAAA,EAAM,SAAA,EAnCN,IAAA,EAAA,CAAA,EAAU,QAAC,EAAS,YAAA,EAAa,EAAA,EAAA;CAwDlC,CApBC;;AAEK,QAAP,CAAA,cAAO,GAA4F,MAAM;IAqBzG,EAAC,IApBC,EAAK,cAAA,GAAe;CAqBrB,CApBC;AACK,QAAP,CAAA,cAAO,GAAoE;IAqB3E,UAAU,EApBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAlCjB,EAAA;CAuDH,CApBC;AAuBF,AAoBA;;;;;;;;;;;;;;;;;;AAkBA,AAAA,MAAA,YAAA,CAAA;;;;;;;IAOA,WAAA,CAtDwC,KAAO,EAAQ,QAA6B,EAwD9E,aAvDe,EAAkB,QAAkB,EAqDzD;QAtDwC,IAAxC,CAAA,KAAwC,GAAA,KAAA,CAAO;QAyD3C,uBAvDM,SAAA,GAAqB,CAAA,KAAE,CAAK,MAAC,CAAM,KAAC,CAAK,CAAC,CAAC;QAwDjD,QAAQ,CAvDC,OAAC,CAAO,SAAC,GAAW,CAuDjC,CAAA,EAvDiC,KAAK,CAuDtC,CAvD2C,GAAI,KAAA,EAAO,IAAI,UAAA,CAAW,aAAC,EAAc,QAAA,CAAS,CAAC,CAAC;KAwD5F;;AA5CI,YAAP,CAAA,UAAO,GAA+C;IA8CtD,EA7CE,IAAA,EAAM,SAAA,EAnBN,IAAA,EAAA,CAAA,EAAU,QAAC,EAAS,gBAAA,EAAiB,EAAA,EAAA;CAiEtC,CA7CC;;AAEK,YAAP,CAAA,cAAO,GAA4F,MAAM;IA8CzG,EAAC,IA7CC,EAAK,SAAA,EAAW,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,SAAA,EApB/B,IAAA,EAAA,CAAA,cAAU,EAAA,EAAA,EAAA,EAAA;IAkElB,EAAC,IA7CC,EAAK,WAAA,GAAY;IA8CnB,EAAC,IA7CC,EAAK,gBAAA,GAAiB;IA8CxB,EAAC,IA7CC,EAAK,QAAA,EA/EO,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAyD2B,EAAA,EAAA;CAoExC,CA7CC,AAgDF,AAUC;;ADzLD;;;;;;;;;;;AAaA,AACA;;;;;;;;;;;;;;;;;;;;;;AAsBA,AAAA,MAAA,OAAA,CAAA;;;;;;IAQA,WAAA,CANc,QAAU,EAAyB,KAAO,EAAoB,SAAW,EAMvF;QANc,IAAd,CAAA,QAAc,GAAA,QAAA,CAAU;QAAyB,IAAjD,CAAA,KAAiD,GAAA,KAAA,CAAO;QAAoB,IAA5E,CAAA,SAA4E,GAAA,SAAA,CAAW;KAAW;;;;;IAclG,IAXM,OAAA,CAAQ,CAA0B,EAWxC;QACI,IAAI,CAXC,QAAC,GAAU,CAAA,CAAE;QAYlB,IAAE,CAXG,IAAC,CAAI,OAAC,IAAU,CAAA,EAAG;YAYxB,IAAA,CAXO,OAAC,GAAS,IAAA,CAAK,QAAC,CAAQ,IAAC,CAAI,CAAC,CAAC,CAAC,MAAC,EAAM,CAAE;SAY/C;KACF;;;;IAIH,SAbG,GAaH;QACI,IAAI,IAbC,CAAI,OAAC,EAAQ;YAchB,uBAbM,OAAA,GAAU,IAAA,CAAK,OAAC,CAAO,IAAC,CAAI,IAAC,CAAI,QAAC,CAAQ,CAAC;YAcjD,IAAI,OAbC,EAAQ;gBAcX,IAAI,CAbC,aAAC,CAAa,OAAC,CAAO,CAAC;aAc7B;SACF;KACF;;;;;IAXO,aAAA,CAAc,OAA+C,EAAvE;QAkBI,OAAO,CAjBC,kBAAC,CAAkB,CAAC,MAAC,KAAU,IAAA,CAAK,SAAC,CAAS,MAAC,CAAM,GAAC,EAAI,IAAA,CAAK,CAAC,CAAC;QAkBzE,OAAO,CAjBC,gBAAC,CAAgB,CAAC,MAAC,KAAU,IAAA,CAAK,SAAC,CAAS,MAAC,CAAM,GAAC,EAAI,MAAA,CAAO,YAAC,CAAY,CAAC,CAAC;QAkBtF,OAAO,CAjBC,kBAAC,CAAkB,CAAC,MAAC,KAAU,IAAA,CAAK,SAAC,CAAS,MAAC,CAAM,GAAC,EAAI,MAAA,CAAO,YAAC,CAAY,CAAC,CAAC;KAkBzF;;;;;;IAfO,SAAA,CAAU,WAAa,EAAQ,KAA2B,EAApE;QAuBI,MAtBM,CAAA,IAAE,EAAK,IAAA,CAAK,GAAG,WAAA,CAAY,KAAC,CAAK,GAAC,CAAG,CAAC;QAuB5C,KAAK,GAtBG,KAAA,IAAS,IAAA,IAAQ,IAAA,GAAO,CAsBpC,EAtBoC,KAAI,CAsBxC,EAtB6C,IAAG,CAsBhD,CAtBoD,GAAI,KAAA,CAAM;QAwB1D,IAAI,CAtBC,SAAC,CAAS,QAAC,CAAQ,IAAC,CAAI,KAAC,CAAK,aAAC,EAAc,IAAA,oBAAM,KAAS,EAAO,CAAC;KAuB1E;;AArBI,OAAP,CAAA,UAAO,GAA+C;IAuBtD,EAtBE,IAAA,EAAM,SAAA,EAtCN,IAAA,EAAA,CAAA,EAAU,QAAC,EAAS,WAAA,EAAY,EAAA,EAAA;CA6DjC,CAtBC;;AAEK,OAAP,CAAA,cAAO,GAA4F,MAAM;IAuBzG,EAAC,IAtBC,EAAK,eAAA,GAAgB;IAuBvB,EAAC,IAtBC,EAAK,UAAA,GAAW;IAuBlB,EAAC,IAtBC,EAAK,SAAA,GAAU;CAuBhB,CAtBC;AACK,OAAP,CAAA,cAAO,GAAoE;IAuB3E,SAAS,EAtBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAvChB,EAAA;CA8DH,CAtBC,AAyBF,AAoBC;;AD7HD;;;;;;;;;;;AAaA,AACA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,AAAA,MAAA,gBAAA,CAAA;;;;IAOA,WAAA,CAHsB,iBAAmB,EAGzC;QAHsB,IAAtB,CAAA,iBAAsB,GAAA,iBAAA,CAAmB;KAAkB;;;;;IAQ3D,WANG,CAAW,OAAS,EAMvB;QACI,uBANM,YAAA,GAAe,IAAA,CAAK,mBAAC,CAAmB,OAAC,CAAO,CAAC;QAQvD,IAAI,YANC,EAAa;YAOhB,IAAI,IANC,CAAI,QAAC,EAAS;gBAOjB,IAAA,CANK,iBAAC,CAAiB,MAAC,CAAM,IAAC,CAAI,iBAAC,CAAiB,OAAC,CAAO,IAAC,CAAI,QAAC,CAAQ,CAAC,CAAC;aAO/E;YAEA,IAAI,IANC,CAAI,gBAAC,EAAiB;gBAOzB,IAAA,CANK,QAAC,GAAU,IAAA,CAAK,iBAAC,CAAiB,kBAAC,CAO1C,IAAA,CANW,gBAAC,EAAiB,IAAA,CAAK,uBAAC,CAAuB,CAAC;aAO7D;SACC;aANM;YAOL,IAAI,IANC,CAAI,QAAC,IAAW,IAAA,CAAK,uBAAC,EAAwB;gBAOjD,IAAI,CANC,sBAAC,CAAsB,IAAC,CAAI,uBAAC,CAAuB,CAAC;aAO3D;SACF;KACF;;;;;;;;;;;;;IAMO,mBAAA,CAAoB,OAAS,EAAvC;QASI,uBARM,SAAA,GAAY,OAAA,CAAQ,yBAAC,CAAyB,CAAC;QASrD,OARO,CAAA,CAAE,OAAC,CAAO,kBAAC,CAAkB,KAAI,SAAE,IAAY,IAAA,CAAK,uBAAC,CAAuB,SAAC,CAAS,CAAC,CAAC;KAShG;;;;;IANO,uBAAA,CAAwB,SAAW,EAA7C;QAaI,uBAZM,WAAA,GAAc,MAAA,CAAO,IAAC,CAAI,SAAC,CAAS,aAAC,IAAgB,EAAA,CAAG,CAAC;QAa/D,uBAZM,WAAA,GAAc,MAAA,CAAO,IAAC,CAAI,SAAC,CAAS,YAAC,IAAe,EAAA,CAAG,CAAC;QAc9D,IAAI,WAZC,CAAW,MAAC,KAAU,WAAA,CAAY,MAAC,EAAO;YAa7C,KAAI,qBAZK,QAAA,IAAY,WAAA,EAAa;gBAahC,IAAI,WAZC,CAAW,OAAC,CAAO,QAAC,CAAQ,KAAK,CAAA,CAAE,EAAE;oBAa5C,OAZW,IAAA,CAAK;iBAalB;aACG;YACD,OAZO,KAAA,CAAM;SAad;aAZM;YAaL,OAZO,IAAA,CAAK;SAab;KACF;;;;;IAVO,sBAAA,CAAuB,GAAK,EAAtC;QAiBI,KAAK,qBAhBI,QAAA,IAAY,MAAA,CAAO,IAAC,CAAI,GAAC,CAAG,EAAE;YAiBrC,EAhBM,IAAC,CAAI,QAAC,CAAQ,OAAC,GAAQ,QAAC,CAAQ,GAAG,EAAM,IAAC,CAAI,uBAAC,GAAwB,QAAC,CAAQ,CAAC;SAiBxF;KACF;;AAfI,gBAAP,CAAA,UAAO,GAA+C;IAiBtD,EAhBE,IAAA,EAAM,SAAA,EAlEN,IAAA,EAAA,CAAA,EAAU,QAAC,EAAS,oBAAA,EAAqB,EAAA,EAAA;CAmF1C,CAhBC;;AAEK,gBAAP,CAAA,cAAO,GAA4F,MAAM;IAiBzG,EAAC,IAhBC,EAAK,gBAAA,GAAiB;CAiBvB,CAhBC;AACK,gBAAP,CAAA,cAAO,GAAoE;IAiB3E,yBAAyB,EAhBE,CAAA,EAAG,IAAA,EAAM,KAAA,EArEhC,EAAA;IAsFJ,kBAAkB,EAhBE,CAAA,EAAG,IAAA,EAAM,KAAA,EApEzB,EAAA;CAqFH,CAhBC,AAmBF,AAkBC;;ADlJD;;;;AAeA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAEA,AAeA;;;;AAIA,AAFO,MAAM,iBAAA,GAAgC;IAG3C,OAAO;IACP,iBAAiB;IACjB,OAAO;IACP,IAAI;IACJ,gBAAgB;IAChB,OAAO;IACP,QAAQ;IACR,YAAY;IACZ,eAAe;IACf,QAAQ;IACR,YAAY;CACb,CAFC;;ADrDF;;;;;;;;;;;AAaA,AAEA,MALM,aAAA,GAAkE,EAAA,CAAG;AAM3E,MALM,kBAAA,GAMF,mMAAmM,CALC;AAOxM,IAAI,SAAS,GAAQ,EAAE,CAAC;AACxB,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;AACpB,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC;AACvB,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC;AACnB,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC;AACvB,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;AACrC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;AAC3C,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACnC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;AAG3C,IAAI,QAAQ,GAAQ,EAAE,CAAC;AACvB,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC;AACtB,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC;AACnB,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC;AAClB,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC;AACnB,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC;AACrB,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC;AACrB,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC;AAC1B,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;AACjB,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;AACzC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;AACnC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACjC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;AACnC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;AACvC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;AACvC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,cAAc,CAAC;AACjD,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAG/B,IAAI,eAAe,GAAQ,EAAE,CAAC;AAC9B,eAAe,CAAC,UAAU,GAAG,CAAC,CAAC;AAC/B,eAAe,CAAC,IAAI,GAAG,CAAC,CAAC;AACzB,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC;AAC3B,eAAe,CAAC,IAAI,GAAG,CAAC,CAAC;AACzB,eAAe,CAAC,eAAe,CAAC,UAAU,CAAC,GAAG,YAAY,CAAC;AAC3D,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAC/C,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;AACnD,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;;;;;;;;;;;AAY/C,AAAA,SAAA,UAAA,CAzB2B,IAAM,EAAM,MAAQ,EAAQ,MAAQ,EAAQ,QAAW,EAyBlF;IACE,uBAzBM,WAAA,GAAc,cAAA,CAAe,MAAC,EAAO,MAAA,CAAO,CAAC;IA0BnD,MAAM,GAzBG,WAAA,IAAe,MAAA,CAAO;IA2B/B,qBAzBI,KAAA,GAAkB,EAAA,CAAG;IA0BzB,qBAzBI,KAAA,CAAM;IA0BV,OAAO,MAzBC,EAAO;QA0Bb,KAAK,GAzBG,kBAAA,CAAmB,IAAC,CAAI,MAAC,CAAM,CAAC;QA0BxC,IAAI,KAzBC,EAAM;YA0BT,KAAK,GAzBG,KAAA,CAAM,MAAC,CAAM,KAAC,CAAK,KAAC,CAAK,CAAC,CAAC,CAAC,CAAC;YA0BrC,uBAzBM,IAAA,GAAO,KAAA,CAAM,GAAC,EAAG,CAAE;YA0BzB,IAAI,CAzBC,IAAC,EAAK;gBA0BT,MAAM;aACP;YACD,MAAM,GAzBG,IAAA,CAAK;SA0Bf;aAzBM;YA0BL,KAAK,CAzBC,IAAC,CAAI,MAAC,CAAM,CAAC;YA0BnB,MAAM;SACP;KACF;IAED,qBAzBI,kBAAA,GAAqB,IAAA,CAAK,iBAAC,EAAiB,CAAE;IA0BlD,IAAI,QAzBC,EAAS;QA0BZ,kBAAkB,GAzBG,gBAAA,CAAiB,QAAC,EAAS,kBAAA,CAAmB,CAAC;QA0BpE,IAAI,GAzBG,sBAAA,CAAuB,IAAC,EAAK,QAAA,EAAU,IAAA,CAAK,CAAC;KA0BrD;IAED,qBAzBI,IAAA,GAAO,EAAA,CAAG;IA0Bd,KAAK,CAzBC,OAAC,CAAO,KAAC,IAyBjB;QACI,uBAzBM,aAAA,GAAgB,gBAAA,CAAiB,KAAC,CAAK,CAAC;QA0B9C,IAAI,IAzBI,aAAA;YA0BJ,aAAa,CAzBC,IAAC,EAAK,MAAA,EAAQ,kBAAA,CAAmB;YA0B/C,KAAK,KAzBK,MAAA,GAAS,IAAA,GAAO,KAAA,CAAM,OAAC,CAAO,UAAC,EAAW,EAAA,CAAG,CAAC,OAAC,CAAO,KAAC,EAAM,IAAA,CAAK,CAAC;KA0BlF,CAzBC,CAAC;IA2BH,OAzBO,IAAA,CAAK;CA0Bb;;;;;;AAMD,SAAA,cAAA,CA7BwB,MAAQ,EAAQ,MAAQ,EA6BhD;IACE,uBA7BM,QAAA,GAAW,WAAA,CAAY,MAAC,CAAM,CAAC;IA8BrC,aAAa,CA7BC,QAAC,CAAQ,GAAG,aAAA,CAAc,QAAC,CAAQ,IAAI,EAAA,CAAG;IA+BxD,IAAI,aA7BC,CAAa,QAAC,CAAQ,CAAC,MAAC,CAAM,EAAE;QA8BnC,OA7BO,aAAA,CAAc,QAAC,CAAQ,CAAC,MAAC,CAAM,CAAC;KA8BxC;IAED,qBA7BI,WAAA,GAAc,EAAA,CAAG;IA8BrB,QAAQ,MA7BC;QA8BP,KA7BK,WAAA;YA8BH,WAAW,GA7BG,mBAAA,CAAoB,MAAC,EAAO,WAAA,CAAY,KAAC,CAAK,CAAC;YA8B7D,MAAM;QACR,KA7BK,YAAA;YA8BH,WAAW,GA7BG,mBAAA,CAAoB,MAAC,EAAO,WAAA,CAAY,MAAC,CAAM,CAAC;YA8B9D,MAAM;QACR,KA7BK,UAAA;YA8BH,WAAW,GA7BG,mBAAA,CAAoB,MAAC,EAAO,WAAA,CAAY,IAAC,CAAI,CAAC;YA8B5D,MAAM;QACR,KA7BK,UAAA;YA8BH,WAAW,GA7BG,mBAAA,CAAoB,MAAC,EAAO,WAAA,CAAY,IAAC,CAAI,CAAC;YA8B5D,MAAM;QACR,KA7BK,WAAA;YA8BH,WAAW,GA7BG,mBAAA,CAAoB,MAAC,EAAO,WAAA,CAAY,KAAC,CAAK,CAAC;YA8B7D,MAAM;QACR,KA7BK,YAAA;YA8BH,WAAW,GA7BG,mBAAA,CAAoB,MAAC,EAAO,WAAA,CAAY,MAAC,CAAM,CAAC;YA8B9D,MAAM;QACR,KA7BK,UAAA;YA8BH,WAAW,GA7BG,mBAAA,CAAoB,MAAC,EAAO,WAAA,CAAY,IAAC,CAAI,CAAC;YA8B5D,MAAM;QACR,KA7BK,UAAA;YA8BH,WAAW,GA7BG,mBAAA,CAAoB,MAAC,EAAO,WAAA,CAAY,IAAC,CAAI,CAAC;YA8B5D,MAAM;QACR,KA7BK,OAAA;YA8BH,uBA7BM,SAAA,GAAY,cAAA,CAAe,MAAC,EAAO,WAAA,CAAY,CAAC;YA8BtD,uBA7BM,SAAA,GAAY,cAAA,CAAe,MAAC,EAAO,WAAA,CAAY,CAAC;YA8BtD,WAAW,GA7BG,cAAA,CA8BV,uBAAuB,CA7BC,MAAC,EAAO,WAAA,CAAY,KAAC,CAAK,EAAE,CAAA,SAAE,EAAU,SAAA,CAAU,CAAC,CAAC;YA8BhF,MAAM;QACR,KA7BK,QAAA;YA8BH,uBA7BM,UAAA,GAAa,cAAA,CAAe,MAAC,EAAO,YAAA,CAAa,CAAC;YA8BxD,uBA7BM,UAAA,GAAa,cAAA,CAAe,MAAC,EAAO,YAAA,CAAa,CAAC;YA8BxD,WAAW,GA7BG,cAAA,CA8BV,uBAAuB,CA7BC,MAAC,EAAO,WAAA,CAAY,MAAC,CAAM,EAAE,CAAA,UAAE,EAAW,UAAA,CAAW,CAAC,CAAC;YA8BnF,MAAM;QACR,KA7BK,MAAA;YA8BH,uBA7BM,QAAA,GAAW,cAAA,CAAe,MAAC,EAAO,UAAA,CAAW,CAAC;YA8BpD,uBA7BM,QAAA,GAAW,cAAA,CAAe,MAAC,EAAO,UAAA,CAAW,CAAC;YA8BpD,WAAW;gBACP,cAAc,CA7BC,uBAAC,CAAuB,MAAC,EAAO,WAAA,CAAY,IAAC,CAAI,EAAE,CAAA,QAAE,EAAS,QAAA,CAAS,CAAC,CAAC;YA8B5F,MAAM;QACR,KA7BK,MAAA;YA8BH,uBA7BM,QAAA,GAAW,cAAA,CAAe,MAAC,EAAO,UAAA,CAAW,CAAC;YA8BpD,uBA7BM,QAAA,GAAW,cAAA,CAAe,MAAC,EAAO,UAAA,CAAW,CAAC;YA8BpD,WAAW;gBACP,cAAc,CA7BC,uBAAC,CAAuB,MAAC,EAAO,WAAA,CAAY,IAAC,CAAI,EAAE,CAAA,QAAE,EAAS,QAAA,CAAS,CAAC,CAAC;YA8B5F,MAAM;KACT;IACD,IAAI,WA7BC,EAAY;QA8Bf,aAAa,CA7BC,QAAC,CAAQ,CAAC,MAAC,CAAM,GAAG,WAAA,CAAY;KA8B/C;IACD,OA7BO,WAAA,CAAY;CA8BpB;;;;;;AAMD,SAAA,cAAA,CAjCwB,GAAK,EAAQ,UAAmB,EAiCxD;IACE,IAAI,UAjCC,EAAW;QAkCd,GAAG,GAjCG,GAAA,CAAI,OAAC,CAAO,aAAC,EAAc,UAAA,KAAU,EAAM,GAAA,EAiCrD;YACM,OAjCO,CAAA,UAAE,IAAa,IAAA,IAAQ,GAAA,IAAO,UAAA,IAAc,UAAA,CAAW,GAAC,CAAG,GAAG,KAAA,CAAM;SAkC5E,CAjCC,CAAC;KAkCJ;IACD,OAjCO,GAAA,CAAI;CAkCZ;;;;;;;;;AASD,SAAA,SAAA,CACI,GAxCK,EAAQ,MAAQ,EAAQ,SAAA,GAAY,GAAA,EAAK,IAAO,EAAS,OAAU,EAuC5E;IAEE,qBAxCI,GAAA,GAAM,EAAA,CAAG;IAyCb,IAAI,GAxCC,GAAK,CAAA,KAAK,OAAE,IAAU,GAAA,IAAO,CAAA,CAAE,EAAE;QAyCpC,IAAI,OAxCC,EAAQ;YAyCX,GAAG,GAxCG,CAAA,GAAE,GAAK,CAAA,CAAE;SAyChB;aAxCM;YAyCL,GAAG,GAxCG,CAAA,GAAE,CAAG;YAyCX,GAAG,GAxCG,SAAA,CAAU;SAyCjB;KACF;IACD,qBAxCI,MAAA,GAAS,EAAA,GAAK,GAAA,CAAI;IAyCtB,OAAO,MAxCC,CAAM,MAAC,GAAQ,MAAA;QAAQ,MAAA,GAAS,GAAA,GAAM,MAAA,CAAO;IAyCrD,IAAI,IAxCC,EAAK;QAyCR,MAAM,GAxCG,MAAA,CAAO,MAAC,CAAM,MAAC,CAAM,MAAC,GAAQ,MAAA,CAAO,CAAC;KAyChD;IACD,OAxCO,GAAA,GAAM,MAAA,CAAO;CAyCrB;;;;;;;;;;AAUD,SAAA,UAAA,CACI,IA7CM,EAAU,IAAM,EAAQ,MA4ClC,GA5CmD,CAAA,EAAG,IAAA,GAAO,KAAA,EA8CzD,OAAO,GA7CG,KAAA,EA2Cd;IAGE,OA7CO,UAAA,IAAe,EAAM,MAAQ,EA6CtC;QACI,qBA7CI,IAAA,GAAO,WAAA,CAAY,IAAC,EAAK,IAAA,EAAM,IAAA,CAAK,CAAC;QA8CzC,IAAI,MA7CC,GAAQ,CAAA,IAAK,IAAA,GAAO,CAAA,MAAE,EAAO;YA8ChC,IAAI,IA7CI,MAAA,CAAO;SA8ChB;QACD,IAAI,IA7CC,KAAQ,QAAA,CAAS,KAAC,IAAQ,IAAA,KAAS,CAAA,IAAK,MAAA,KAAW,CAAA,EAAE,EAAG;YA8C3D,IAAI,GA7CG,EAAA,CAAG;SA8CX;QACD,OA7CO,SAAA,CA8CH,IAAI,EA7CE,IAAA,EAAM,qBAAA,CAAsB,MAAC,EAAO,YAAA,CAAa,SAAC,CAAS,EAAE,IAAA,EAAM,OAAA,CAAQ,CAAC;KA8CvF,CA7CC;CA8CH;;;;;;;AAOD,SAAA,WAAA,CAlDqB,IAAM,EAAU,IAAM,EAAM,IAAM,EAkDvD;IACE,QAAQ,IAlDC;QAmDP,KAlDK,QAAA,CAAS,QAAC;YAmDb,OAlDO,IAAA,CAAK,WAAC,EAAW,CAAE;QAmD5B,KAlDK,QAAA,CAAS,KAAC;YAmDb,OAlDO,IAAA,CAAK,QAAC,EAAQ,CAAE;QAmDzB,KAlDK,QAAA,CAAS,IAAC;YAmDb,OAlDO,IAAA,CAAK,OAAC,EAAO,CAAE;QAmDxB,KAlDK,QAAA,CAAS,KAAC;YAmDb,OAlDO,IAAA,CAAK,QAAC,EAAQ,CAAE;QAmDzB,KAlDK,QAAA,CAAS,OAAC;YAmDb,OAlDO,IAAA,CAAK,UAAC,EAAU,CAAE;QAmD3B,KAlDK,QAAA,CAAS,OAAC;YAmDb,OAlDO,IAAA,CAAK,UAAC,EAAU,CAAE;QAmD3B,KAlDK,QAAA,CAAS,YAAC;YAmDb,uBAlDM,GAAA,GAAM,IAAA,KAAS,CAAA,GAAI,GAAA,IAAM,IAAE,KAAQ,CAAA,GAAI,EAAA,GAAK,CAAA,CAAE,CAAC;YAmDrD,OAlDO,IAAA,CAAK,KAAC,CAAK,IAAC,CAAI,eAAC,EAAe,GAAI,GAAA,CAAI,CAAC;QAmDlD,KAlDK,QAAA,CAAS,GAAC;YAmDb,OAlDO,IAAA,CAAK,MAAC,EAAM,CAAE;QAmDvB;YACE,MAlDM,IAAI,KAAA,CAAM,CAkDtB,wBAAA,EAlDuB,IAA2B,CAkDlD,EAAA,CAlDsD,CAAI,CAAC;KAmDxD;CACF;;;;;;;;;AASD,SAAA,aAAA,CACI,IAtDM,EAAiB,KAAO,EAAkB,IAqDpD,GArDsE,SAAA,CAAU,MAAC,EAuD7E,QAAQ,GAtDG,KAAA,EAoDf;IAGE,OAtDO,UAAA,IAAe,EAAM,MAAQ,EAsDtC;QACI,OAtDO,kBAAA,CAAmB,IAAC,EAAK,MAAA,EAAQ,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,QAAA,CAAS,CAAC;KAuDtE,CAtDC;CAuDH;;;;;;;;;;;AAWD,SAAA,kBAAA,CACI,IA5DM,EAAM,MAAQ,EAAQ,IAAM,EAAiB,KAAO,EAAkB,IAAM,EA6DlF,QA5DU,EA0Dd;IAGE,QAAQ,IA5DC;QA6DP,KA5DK,eAAA,CAAgB,MAAC;YA6DpB,OA5DO,mBAAA,CAAoB,MAAC,EAAO,IAAA,EAAM,KAAA,CAAM,CAAC,IAAC,CAAI,QAAC,EAAQ,CAAE,CAAC;QA6DnE,KA5DK,eAAA,CAAgB,IAAC;YA6DpB,OA5DO,iBAAA,CAAkB,MAAC,EAAO,IAAA,EAAM,KAAA,CAAM,CAAC,IAAC,CAAI,MAAC,EAAM,CAAE,CAAC;QA6D/D,KA5DK,eAAA,CAAgB,UAAC;YA6DpB,uBA5DM,YAAA,GAAe,IAAA,CAAK,QAAC,EAAQ,CAAE;YA6DrC,uBA5DM,cAAA,GAAiB,IAAA,CAAK,UAAC,EAAU,CAAE;YA6DzC,IAAI,QA5DC,EAAS;gBA6DZ,uBA5DM,KAAA,GAAQ,4BAAA,CAA6B,MAAC,CAAM,CAAC;gBA6DnD,uBA5DM,UAAA,GAAa,wBAAA,CAAyB,MAAC,EAAO,IAAA,EAAM,KAAA,CAAM,CAAC;gBA6DjE,qBA5DI,MAAA,CAAO;gBA6DX,KAAK,CA5DC,OAAC,CAAO,CAAC,IAAyB,EAAE,KAAO,KA4DzD;oBACU,IAAI,KA5DC,CAAK,OAAC,CAAO,IAAC,CAAI,EAAE;;wBA8DvB,MA5DM,EAAA,KAAE,EAAM,SAAA,EAAW,OAAA,EAAS,WAAA,EAAY,GAAG,IAAA,CAAK,CAAC,CAAC,CAAC;wBA6DzD,MA5DM,EAAA,KAAE,EAAM,OAAA,EAAS,OAAA,EAAS,SAAA,EAAU,GAAG,IAAA,CAAK,CAAC,CAAC,CAAC;wBA6DrD,IAAI,YA5DC,IAAe,SAAA,IAAa,cAAA,IAAkB,WAAA;6BA6D9C,YA5DC,GAAc,OAAA;iCA6Dd,YA5DC,KAAgB,OAAA,IAAW,cAAA,GAAiB,SAAA,CAAU,CAAC,EAAE;4BA6D9D,MAAM,GA5DG,UAAA,CAAW,KAAC,CAAK,CAAC;yBA6D5B;qBACF;yBA5DM;wBA6DL,MA5DM,EAAA,KAAE,EAAM,OAAA,EAAQ,GAAG,IAAA,CAAK;wBA6D9B,IAAI,KA5DC,KAAS,YAAA,IAAgB,OAAA,KAAY,cAAA,EAAgB;4BA6DxD,MAAM,GA5DG,UAAA,CAAW,KAAC,CAAK,CAAC;yBA6D5B;qBACF;iBACF,CA5DC,CAAC;gBA6DH,IAAI,MA5DC,EAAO;oBA6DV,OA5DO,MAAA,CAAO;iBA6Df;aACF;;YAED,OA5DO,mBAAA,CAAoB,MAAC,EAAO,IAAA,oBAAwB,KAAC,EAAK,CAAC,YAAC,GAAc,EAAA,GAAK,CAAA,GAAI,CAAA,CAAE,CAAC;QA6D/F,KA5DK,eAAA,CAAgB,IAAC;YA6DpB,OA5DO,iBAAA,CAAkB,MAAC,oBAAyB,KAAC,EAAK,CAAC,IAAC,CAAI,WAAC,EAAW,IAAK,CAAA,GAAI,CAAA,GAAI,CAAA,CAAE,CAAC;KA6D9F;CACF;;;;;;;;AAQD,SAAA,cAAA,CA7DwB,KAAO,EA6D/B;IACE,OA7DO,UAAA,IAAe,EAAM,MAAQ,EAAQ,MAAQ,EA6DtD;QACI,uBA7DM,IAAA,GAAO,CAAA,CAAE,GAAG,MAAA,CAAO;QA8DzB,uBA7DM,SAAA,GAAY,qBAAA,CAAsB,MAAC,EAAO,YAAA,CAAa,SAAC,CAAS,CAAC;QA8DxE,uBA7DM,KAAA,GAAQ,IAAA,GAAO,CAAA,GAAI,IAAA,CAAK,KAAC,CAAK,IAAC,GAAM,EAAA,CAAG,GAAG,IAAA,CAAK,IAAC,CAAI,IAAC,GAAM,EAAA,CAAG,CAAC;QA8DtE,QAAQ,KA7DC;YA8DP,KA7DK,SAAA,CAAU,KAAC;gBA8Dd,OA7DO,CAAA,CAAE,IAAC,IAAO,CAAA,IAAK,GAAA,GAAM,EAAA,IAAM,SAAA,CAAU,KAAC,EAAM,CAAA,EAAG,SAAA,CAAU;oBA8D5D,SAAS,CA7DC,IAAC,CAAI,GAAC,CAAG,IAAC,GAAM,EAAA,CAAG,EAAE,CAAA,EAAG,SAAA,CAAU,CAAC;YA8DnD,KA7DK,SAAA,CAAU,QAAC;gBA8Dd,OA7DO,KAAA,IAAQ,CAAE,IAAC,IAAO,CAAA,IAAK,GAAA,GAAM,EAAA,CAAG,GAAG,SAAA,CAAU,KAAC,EAAM,CAAA,EAAG,SAAA,CAAU,CAAC;YA8D3E,KA7DK,SAAA,CAAU,IAAC;gBA8Dd,OA7DO,KAAA,IAAQ,CAAE,IAAC,IAAO,CAAA,IAAK,GAAA,GAAM,EAAA,CAAG,GAAG,SAAA,CAAU,KAAC,EAAM,CAAA,EAAG,SAAA,CAAU,GAAG,GAAA;oBA8DvE,SAAS,CA7DC,IAAC,CAAI,GAAC,CAAG,IAAC,GAAM,EAAA,CAAG,EAAE,CAAA,EAAG,SAAA,CAAU,CAAC;YA8DnD,KA7DK,SAAA,CAAU,QAAC;gBA8Dd,IAAI,MA7DC,KAAU,CAAA,EAAG;oBA8DhB,OA7DO,GAAA,CAAI;iBA8DZ;qBA7DM;oBA8DL,OA7DO,CAAA,CAAE,IAAC,IAAO,CAAA,IAAK,GAAA,GAAM,EAAA,IAAM,SAAA,CAAU,KAAC,EAAM,CAAA,EAAG,SAAA,CAAU,GAAG,GAAA;wBA8D/D,SAAS,CA7DC,IAAC,CAAI,GAAC,CAAG,IAAC,GAAM,EAAA,CAAG,EAAE,CAAA,EAAG,SAAA,CAAU,CAAC;iBA8DlD;YACH;gBACE,MA7DM,IAAI,KAAA,CAAM,CA6DxB,oBAAA,EA7DyB,KAAuB,CA6DhD,CAAA,CA7DqD,CAAG,CAAC;SA8DpD;KACF,CA7DC;CA8DH;AAED,MA7DM,OAAA,GAAU,CAAA,CAAE;AA8DlB,MA7DM,QAAA,GAAW,CAAA,CAAE;;;;;AAkEnB,SAAA,sBAAA,CAjEgC,IAAM,EAiEtC;IACE,uBAjEM,cAAA,GAAiB,CAAA,IAAK,IAAA,CAAK,IAAC,EAAK,OAAA,EAAS,CAAA,CAAE,EAAE,MAAC,EAAM,CAAE;IAkE7D,OAjEO,IAAI,IAAA,CAkEP,IAAI,EAjEE,CAAA,EAAG,CAAA,IAAI,CAAE,cAAC,IAAiB,QAAA,IAAY,QAAA,GAAW,QAAA,GAAW,CAAA,CAAE,GAAG,cAAA,CAAe,CAAC;CAkE7F;;;;;AAKD,SAAA,mBAAA,CApE6B,QAAU,EAoEvC;IACE,OApEO,IAAI,IAAA,CAqEP,QAAQ,CApEC,WAAC,EAAW,EAAG,QAAA,CAAS,QAAC,EAAQ,EAqE1C,QAAQ,CApEC,OAAC,EAAO,IAAI,QAAE,GAAU,QAAA,CAAS,MAAC,EAAM,CAAE,CAAC,CAAC;CAqE1D;;;;;;AAMD,SAAA,UAAA,CAxEoB,IAAM,EAAQ,UAAA,GAAa,KAAA,EAwE/C;IACE,OAxEO,UAAA,IAAe,EAAM,MAAQ,EAwEtC;QACI,qBAxEI,MAAA,CAAO;QAyEX,IAAI,UAxEC,EAAW;YAyEd,uBAxEM,yBAAA,GAyEF,IAxEI,IAAA,CAAK,IAAC,CAAI,WAAC,EAAW,EAAG,IAAA,CAAK,QAAC,EAAQ,EAAG,CAAA,CAAE,CAAC,MAAC,EAAM,GAAI,CAAA,CAAE;YAyElE,uBAxEM,KAAA,GAAQ,IAAA,CAAK,OAAC,EAAO,CAAE;YAyE7B,MAAM,GAxEG,CAAA,GAAI,IAAA,CAAK,KAAC,CAAK,CAAC,KAAC,GAAO,yBAAA,IAA6B,CAAA,CAAE,CAAC;SAyElE;aAxEM;YAyEL,uBAxEM,UAAA,GAAa,sBAAA,CAAuB,IAAC,CAAI,WAAC,EAAW,CAAE,CAAC;YAyE9D,uBAxEM,SAAA,GAAY,mBAAA,CAAoB,IAAC,CAAI,CAAC;YAyE5C,uBAxEM,IAAA,GAAO,SAAA,CAAU,OAAC,EAAO,GAAI,UAAA,CAAW,OAAC,EAAO,CAAE;YAyExD,MAAM,GAxEG,CAAA,GAAI,IAAA,CAAK,KAAC,CAAK,IAAC,GAAM,OAAA,CAAQ,CAAC;SAyEzC;QAED,OAxEO,SAAA,CAAU,MAAC,EAAO,IAAA,EAAM,qBAAA,CAAsB,MAAC,EAAO,YAAA,CAAa,SAAC,CAAS,CAAC,CAAC;KAyEvF,CAxEC;CAyEH;AAID,MAxEM,YAAA,GAAkD,EAAA,CAAG;;;;;AA6E3D,SAAA,gBAAA,CAvE0B,MAAQ,EAuElC;IACE,IAAI,YAvEC,CAAY,MAAC,CAAM,EAAE;QAwExB,OAvEO,YAAA,CAAa,MAAC,CAAM,CAAC;KAwE7B;IACD,qBAvEI,SAAA,CAAU;IAwEd,QAAQ,MAvEC;;QAyEP,KAvEK,GAAA,CAAI;QAwET,KAvEK,IAAA,CAAK;QAwEV,KAvEK,KAAA;YAwEH,SAAS,GAvEG,aAAA,CAAc,eAAC,CAAe,IAAC,EAAK,gBAAA,CAAiB,WAAC,CAAW,CAAC;YAwE9E,MAAM;QACR,KAvEK,MAAA;YAwEH,SAAS,GAvEG,aAAA,CAAc,eAAC,CAAe,IAAC,EAAK,gBAAA,CAAiB,IAAC,CAAI,CAAC;YAwEvE,MAAM;QACR,KAvEK,OAAA;YAwEH,SAAS,GAvEG,aAAA,CAAc,eAAC,CAAe,IAAC,EAAK,gBAAA,CAAiB,MAAC,CAAM,CAAC;YAwEzE,MAAM;;QAGR,KAvEK,GAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,QAAC,EAAS,CAAA,EAAG,CAAA,EAAG,KAAA,EAAO,IAAA,CAAK,CAAC;YAwE7D,MAAM;;QAER,KAvEK,IAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,QAAC,EAAS,CAAA,EAAG,CAAA,EAAG,IAAA,EAAM,IAAA,CAAK,CAAC;YAwE5D,MAAM;;QAER,KAvEK,KAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,QAAC,EAAS,CAAA,EAAG,CAAA,EAAG,KAAA,EAAO,IAAA,CAAK,CAAC;YAwE7D,MAAM;;QAER,KAvEK,MAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,QAAC,EAAS,CAAA,EAAG,CAAA,EAAG,KAAA,EAAO,IAAA,CAAK,CAAC;YAwE7D,MAAM;;QAGR,KAvEK,GAAA,CAAI;QAwET,KAvEK,GAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,KAAC,EAAM,CAAA,EAAG,CAAA,CAAE,CAAC;YAwE7C,MAAM;QACR,KAvEK,IAAA,CAAK;QAwEV,KAvEK,IAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,KAAC,EAAM,CAAA,EAAG,CAAA,CAAE,CAAC;YAwE7C,MAAM;;QAGR,KAvEK,KAAA;YAwEH,SAAS,GAvEG,aAAA,CAAc,eAAC,CAAe,MAAC,EAAO,gBAAA,CAAiB,WAAC,CAAW,CAAC;YAwEhF,MAAM;QACR,KAvEK,MAAA;YAwEH,SAAS,GAvEG,aAAA,CAAc,eAAC,CAAe,MAAC,EAAO,gBAAA,CAAiB,IAAC,CAAI,CAAC;YAwEzE,MAAM;QACR,KAvEK,OAAA;YAwEH,SAAS,GAvEG,aAAA,CAAc,eAAC,CAAe,MAAC,EAAO,gBAAA,CAAiB,MAAC,CAAM,CAAC;YAwE3E,MAAM;;QAGR,KAvEK,KAAA;YAwEH,SAAS;gBACL,aAAa,CAvEC,eAAC,CAAe,MAAC,EAAO,gBAAA,CAAiB,WAAC,EAAY,SAAA,CAAU,UAAC,CAAU,CAAC;YAwE9F,MAAM;QACR,KAvEK,MAAA;YAwEH,SAAS;gBACL,aAAa,CAvEC,eAAC,CAAe,MAAC,EAAO,gBAAA,CAAiB,IAAC,EAAK,SAAA,CAAU,UAAC,CAAU,CAAC;YAwEvF,MAAM;QACR,KAvEK,OAAA;YAwEH,SAAS;gBACL,aAAa,CAvEC,eAAC,CAAe,MAAC,EAAO,gBAAA,CAAiB,MAAC,EAAO,SAAA,CAAU,UAAC,CAAU,CAAC;YAwEzF,MAAM;;QAGR,KAvEK,GAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,CAAC,CAAC,CAAC;YAwE1B,MAAM;QACR,KAvEK,IAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,CAAC,CAAC,CAAC;YAwE1B,MAAM;;QAGR,KAvEK,GAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,CAAC,EAAE,IAAA,CAAK,CAAC;YAwEhC,MAAM;;QAGR,KAvEK,GAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,IAAC,EAAK,CAAA,CAAE,CAAC;YAwEzC,MAAM;QACR,KAvEK,IAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,IAAC,EAAK,CAAA,CAAE,CAAC;YAwEzC,MAAM;;QAGR,KAvEK,GAAA,CAAI;QAwET,KAvEK,IAAA,CAAK;QAwEV,KAvEK,KAAA;YAwEH,SAAS,GAvEG,aAAA,CAAc,eAAC,CAAe,IAAC,EAAK,gBAAA,CAAiB,WAAC,CAAW,CAAC;YAwE9E,MAAM;QACR,KAvEK,MAAA;YAwEH,SAAS,GAvEG,aAAA,CAAc,eAAC,CAAe,IAAC,EAAK,gBAAA,CAAiB,IAAC,CAAI,CAAC;YAwEvE,MAAM;QACR,KAvEK,OAAA;YAwEH,SAAS,GAvEG,aAAA,CAAc,eAAC,CAAe,IAAC,EAAK,gBAAA,CAAiB,MAAC,CAAM,CAAC;YAwEzE,MAAM;QACR,KAvEK,QAAA;YAwEH,SAAS,GAvEG,aAAA,CAAc,eAAC,CAAe,IAAC,EAAK,gBAAA,CAAiB,KAAC,CAAK,CAAC;YAwExE,MAAM;;QAGR,KAvEK,GAAA,CAAI;QAwET,KAvEK,IAAA,CAAK;QAwEV,KAvEK,KAAA;YAwEH,SAAS,GAvEG,aAAA,CAAc,eAAC,CAAe,UAAC,EAAW,gBAAA,CAAiB,WAAC,CAAW,CAAC;YAwEpF,MAAM;QACR,KAvEK,MAAA;YAwEH,SAAS,GAvEG,aAAA,CAAc,eAAC,CAAe,UAAC,EAAW,gBAAA,CAAiB,IAAC,CAAI,CAAC;YAwE7E,MAAM;QACR,KAvEK,OAAA;YAwEH,SAAS,GAvEG,aAAA,CAAc,eAAC,CAAe,UAAC,EAAW,gBAAA,CAAiB,MAAC,CAAM,CAAC;YAwE/E,MAAM;;QAGR,KAvEK,GAAA,CAAI;QAwET,KAvEK,IAAA,CAAK;QAwEV,KAvEK,KAAA;YAwEH,SAAS,GAvEG,aAAA,CAwER,eAAe,CAvEC,UAAC,EAAW,gBAAA,CAAiB,WAAC,EAAY,SAAA,CAAU,UAAC,EAAW,IAAA,CAAK,CAAC;YAwE1F,MAAM;QACR,KAvEK,MAAA;YAwEH,SAAS,GAvEG,aAAA,CAwER,eAAe,CAvEC,UAAC,EAAW,gBAAA,CAAiB,IAAC,EAAK,SAAA,CAAU,UAAC,EAAW,IAAA,CAAK,CAAC;YAwEnF,MAAM;QACR,KAvEK,OAAA;YAwEH,SAAS,GAvEG,aAAA,CAwER,eAAe,CAvEC,UAAC,EAAW,gBAAA,CAAiB,MAAC,EAAO,SAAA,CAAU,UAAC,EAAW,IAAA,CAAK,CAAC;YAwErF,MAAM;;QAGR,KAvEK,GAAA,CAAI;QAwET,KAvEK,IAAA,CAAK;QAwEV,KAvEK,KAAA;YAwEH,SAAS,GAvEG,aAAA,CAwER,eAAe,CAvEC,UAAC,EAAW,gBAAA,CAAiB,WAAC,EAAY,SAAA,CAAU,MAAC,EAAO,IAAA,CAAK,CAAC;YAwEtF,MAAM;QACR,KAvEK,MAAA;YAwEH,SAAS;gBACL,aAAa,CAvEC,eAAC,CAAe,UAAC,EAAW,gBAAA,CAAiB,IAAC,EAAK,SAAA,CAAU,MAAC,EAAO,IAAA,CAAK,CAAC;YAwE7F,MAAM;QACR,KAvEK,OAAA;YAwEH,SAAS,GAvEG,aAAA,CAwER,eAAe,CAvEC,UAAC,EAAW,gBAAA,CAAiB,MAAC,EAAO,SAAA,CAAU,MAAC,EAAO,IAAA,CAAK,CAAC;YAwEjF,MAAM;;QAGR,KAvEK,GAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,KAAC,EAAM,CAAA,EAAG,CAAA,EAAE,CAAE,CAAC;YAwE/C,MAAM;QACR,KAvEK,IAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,KAAC,EAAM,CAAA,EAAG,CAAA,EAAE,CAAE,CAAC;YAwE/C,MAAM;;QAGR,KAvEK,GAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,KAAC,EAAM,CAAA,CAAE,CAAC;YAwE1C,MAAM;;QAER,KAvEK,IAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,KAAC,EAAM,CAAA,CAAE,CAAC;YAwE1C,MAAM;;QAGR,KAvEK,GAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,OAAC,EAAQ,CAAA,CAAE,CAAC;YAwE5C,MAAM;QACR,KAvEK,IAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,OAAC,EAAQ,CAAA,CAAE,CAAC;YAwE5C,MAAM;;QAGR,KAvEK,GAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,OAAC,EAAQ,CAAA,CAAE,CAAC;YAwE5C,MAAM;QACR,KAvEK,IAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,OAAC,EAAQ,CAAA,CAAE,CAAC;YAwE5C,MAAM;;QAGR,KAvEK,GAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,YAAC,EAAa,CAAA,CAAE,CAAC;YAwEjD,MAAM;QACR,KAvEK,IAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,YAAC,EAAa,CAAA,CAAE,CAAC;YAwEjD,MAAM;;QAER,KAvEK,KAAA;YAwEH,SAAS,GAvEG,UAAA,CAAW,QAAC,CAAQ,YAAC,EAAa,CAAA,CAAE,CAAC;YAwEjD,MAAM;;QAIR,KAvEK,GAAA,CAAI;QAwET,KAvEK,IAAA,CAAK;QAwEV,KAvEK,KAAA;YAwEH,SAAS,GAvEG,cAAA,CAAe,SAAC,CAAS,KAAC,CAAK,CAAC;YAwE5C,MAAM;;QAER,KAvEK,OAAA;YAwEH,SAAS,GAvEG,cAAA,CAAe,SAAC,CAAS,QAAC,CAAQ,CAAC;YAwE/C,MAAM;;QAGR,KAvEK,GAAA,CAAI;QAwET,KAvEK,IAAA,CAAK;QAwEV,KAvEK,KAAA,CAAM;;QAyEX,KAvEK,GAAA,CAAI;QAwET,KAvEK,IAAA,CAAK;QAwEV,KAvEK,KAAA;YAwEH,SAAS,GAvEG,cAAA,CAAe,SAAC,CAAS,QAAC,CAAQ,CAAC;YAwE/C,MAAM;;QAER,KAvEK,MAAA,CAAO;QAwEZ,KAvEK,MAAA,CAAO;;QAyEZ,KAvEK,MAAA;YAwEH,SAAS,GAvEG,cAAA,CAAe,SAAC,CAAS,IAAC,CAAI,CAAC;YAwE3C,MAAM;QACR;YACE,OAvEO,IAAA,CAAK;KAwEf;IACD,YAAY,CAvEC,MAAC,CAAM,GAAG,SAAA,CAAU;IAwEjC,OAvEO,SAAA,CAAU;CAwElB;;;;;;AAMD,SAAA,gBAAA,CA3E0B,QAAU,EAAQ,QAAU,EA2EtD;;;IAGE,QAAQ,GA3EG,QAAA,CAAS,OAAC,CAAO,IAAC,EAAK,EAAA,CAAG,CAAC;IA4EtC,uBA3EM,uBAAA,GAA0B,IAAA,CAAK,KAAC,CAAK,wBAAC,GAA0B,QAAA,CAAS,GAAG,KAAA,CAAM;IA4ExF,OA3EO,KAAA,CAAM,uBAAC,CAAuB,GAAG,QAAA,GAAW,uBAAA,CAAwB;CA4E5E;;;;;;AAMD,SAAA,cAAA,CA/EwB,IAAM,EAAM,OAAS,EA+E7C;IACE,IAAI,GA/EG,IAAI,IAAA,CAAK,IAAC,CAAI,OAAC,EAAO,CAAE,CAAC;IAgFhC,IAAI,CA/EC,UAAC,CAAU,IAAC,CAAI,UAAC,EAAU,GAAI,OAAA,CAAQ,CAAC;IAgF7C,OA/EO,IAAA,CAAK;CAgFb;;;;;;;AAOD,SAAA,sBAAA,CApFgC,IAAM,EAAM,QAAU,EAAQ,OAAS,EAoFvE;IACE,uBApFM,YAAA,GAAe,OAAA,GAAU,CAAA,CAAE,GAAG,CAAA,CAAE;IAqFtC,uBApFM,kBAAA,GAAqB,IAAA,CAAK,iBAAC,EAAiB,CAAE;IAqFpD,uBApFM,cAAA,GAAiB,gBAAA,CAAiB,QAAC,EAAS,kBAAA,CAAmB,CAAC;IAqFtE,OApFO,cAAA,CAAe,IAAC,EAAK,YAAA,IAAe,cAAE,GAAgB,kBAAA,CAAmB,CAAC,CAAC;CAqFnF;;AD7qBD;;;;;;;;;;;AAaA,AACA;;;;;AAKA,AAAA,SAAA,wBAAA,CATyC,IAAe,EAAE,KAAO,EASjE;IACE,OATO,KAAA,CAAM,CASf,sBAAA,EATgB,KAAyB,CASzC,YAAA,EAT8CA,UAAe,CAAS,IAAC,CAAI,CAS3E,CAAA,CAT4E,CAAG,CAAC;CAU/E;;ADrBD;;;;;;;;;;;AAaA,AACA,AACA,AAEA,AALO,MAAM,kBAAA,GAMT,sGAAsG,CALC;AAM3G,AAAA,MAAA,QAAA,CAAA;;;;IAIA,WAAA,CAsHyC,MAAQ,EAtHjD;QAsHyC,IAAzC,CAAA,MAAyC,GAAA,MAAA,CAAQ;KAAQ;;;;;;;;IA7GzD,SA+GG,CAAS,KAAO,EAAK,MAAA,GAAS,YAAA,EAAc,QAAW,EAAQ,MAAS,EA/G3E;QACI,IAAI,KA+GC,IAAQ,IAAA,IAAQ,KAAA,KAAU,EAAA,IAAM,KAAA,KAAU,KAAA;YAAO,OAAO,IAAA,CAAK;QA7GlE,IAAI,OA+GO,KAAA,KAAU,QAAA,EAAU;YA9G7B,KAAK,GA+GG,KAAA,CAAM,IAAC,EAAI,CAAE;SA9GtB;QAED,qBA+GI,IAAM,CAAK;QA9Gf,IAAID,QA+GC,CAAM,KAAC,CAAK,EAAE;YA9GjB,IAAI,GA+GG,KAAA,CAAM;SA9Gd;aA+GM,IAAA,CAAK,KAAC,CAAK,KAAC,GAAO,UAAA,CAAW,KAAC,CAAK,CAAC,EAAE;YA9G5C,IAAI,GA+GG,IAAI,IAAA,CAAK,UAAC,CAAU,KAAC,CAAK,CAAC,CAAC;SA9GpC;aA+GM,IAAA,OAAW,KAAA,KAAU,QAAA,IAAY,2BAAA,CAA4B,IAAC,CAAI,KAAC,CAAK,EAAE;;;;;;;;;;YArGrF,MA+GY,CAAA,CAAE,EAAE,CAAA,EAAG,CAAA,CAAE,GAAG,KAAA,CAAM,KAAC,CAAK,GAAC,CAAG,CAAC,GAAC,CAAG,CAAC,GAAK,KAAW,CAAA,GAAE,CAAG,CAAC;YA9G9D,IAAI,GA+GG,IAAI,IAAA,CAAK,CAAC,EAAE,CAAA,GAAI,CAAA,EAAG,CAAA,CAAE,CAAC;SA9G9B;aA+GM;YA9GL,IAAI,GA+GG,IAAI,IAAA,CAAK,KAAC,CAAK,CAAC;SA9GxB;QAED,IAAI,CA+GCA,QAAC,CAAM,IAAC,CAAI,EAAE;YA9GjB,qBA+GI,KAAyB,CAAI;YA9GjC,IAAI,CA+GC,OAAO,KAAA,KAAU,QAAA,MAAa,KAAE,GAAO,KAAA,CAAM,KAAC,CAAK,kBAAC,CAAkB,CAAC,EAAE;gBA9G5E,IAAI,GA+GG,eAAA,CAAgB,KAAC,CAAK,CAAC;aA9G/B;iBA+GM;gBA9GL,MA+GM,wBAAA,CAAyB,QAAC,EAAS,KAAA,CAAM,CAAC;aA9GjD;SACF;QAED,OA+GO,UAAA,CAAW,IAAC,EAAK,MAAA,EAAQ,MAAA,IAAU,IAAA,CAAK,MAAC,EAAO,QAAA,CAAS,CAAC;KA9GlE;;AAgHI,QAAP,CAAA,UAAO,GAA+C;IA9GtD,EA+GE,IAAA,EAAM,IAAA,EA5CN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,MAAA,EAAQ,IAAA,EAAM,IAAA,EAAK,EAAA,EAAA;CAlE/B,CA+GC;;AAEK,QAAP,CAAA,cAAO,GAA4F,MAAM;IA9GzG,EAAC,IA+GC,EAAK,SAAA,EAAW,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,MAAA,EA9CvB,IAAA,EAAA,CAAA,SAAO,EAAA,EAAA,EAAA,EAAA;CAhEtB,CA+GC;AA5GF,AAYA;;;;;AAKA,AAAA,SAAA,eAAA,CAwFgC,KAAO,EAxFvC;IACE,uBAwFM,IAAA,GAAO,IAAI,IAAA,CAAK,CAAC,CAAC,CAAC;IAvFzB,qBAwFI,MAAA,GAAS,CAAA,CAAE;IAvFf,qBAwFI,KAAA,GAAQ,CAAA,CAAE;IAvFd,uBAwFM,UAAA,GAAa,KAAA,CAAM,CAAC,CAAC,GAAG,IAAA,CAAK,cAAC,GAAgB,IAAA,CAAK,WAAC,CAAW;IAvFrE,uBAwFM,UAAA,GAAa,KAAA,CAAM,CAAC,CAAC,GAAG,IAAA,CAAK,WAAC,GAAa,IAAA,CAAK,QAAC,CAAQ;IAtF/D,IAAI,KAwFC,CAAK,CAAC,CAAC,EAAE;QAvFZ,MAAM,GAwFG,EAAE,KAAC,CAAK,CAAC,CAAC,GAAG,KAAA,CAAM,EAAC,CAAE,CAAC,CAAC;QAvFjC,KAAK,GAwFG,EAAE,KAAC,CAAK,CAAC,CAAC,GAAG,KAAA,CAAM,EAAC,CAAE,CAAC,CAAC;KAvFjC;IACD,UAAU,CAwFC,IAAC,CAAI,IAAC,EAAK,EAAE,KAAC,CAAK,CAAC,CAAC,CAAC,EAAE,EAAE,KAAC,CAAK,CAAC,CAAC,CAAC,GAAG,CAAA,EAAG,EAAE,KAAC,CAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAvFjE,uBAwFM,CAAA,GAAI,EAAE,KAAC,CAAK,CAAC,CAAC,IAAI,GAAA,CAAI,GAAG,MAAA,CAAO;IAvFtC,uBAwFM,CAAA,GAAI,EAAE,KAAC,CAAK,CAAC,CAAC,IAAI,GAAA,CAAI,GAAG,KAAA,CAAM;IAvFrC,uBAwFM,CAAA,GAAI,EAAE,KAAC,CAAK,CAAC,CAAC,IAAI,GAAA,CAAI,CAAC;IAvF7B,uBAwFM,EAAA,GAAK,IAAA,CAAK,KAAC,CAAK,UAAC,CAAU,IAAC,IAAM,KAAE,CAAK,CAAC,CAAC,IAAI,CAAA,CAAE,CAAC,GAAG,IAAA,CAAK,CAAC;IAvFjE,UAAU,CAwFC,IAAC,CAAI,IAAC,EAAK,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,EAAA,CAAG,CAAC;IAvFnC,OAwFO,IAAA,CAAK;CAvFb;;;;;AAKD,SAAAA,QAAA,CAqFgB,KAAO,EArFvB;IACE,OAqFO,KAAA,YAAiB,IAAA,IAAQ,CAAA,KAAE,CAAK,KAAC,CAAK,OAAC,EAAO,CAAE,CAAC;CApFzD;;AD1HD;;;;;;;;;;;AAYA,AACA,AAAA,MAAA,eAAA,CAAA;;;;;;;;IAQA,OAXS,MAAA,CAAO,GAAK,EAAQ,MAAQ,EAAQ,KAAO,EAAmB,IAWvE,GALM,EAAA,EAKN;QAOI,MAXM,EAAA,oBAAE,EAAqB,qBAAA,EAAuB,qBAAA,EAAuB,QAAA,EAYpE,gBAAgB,GAXG,KAAA,EAAM,GAAG,IAAA,CAAK;QAYxC,uBAXM,OAAA,GAAoC;YAYxC,oBAAoB;YACpB,qBAAqB;YACrB,qBAAqB;YACrB,KAAK,EAXE,iBAAA,CAAkB,KAAC,CAAK,CAAC,WAAC,EAAW;SAY7C,CAXC;QAaF,IAAI,KAXC,IAAQ,iBAAA,CAAkB,QAAC,EAAS;YAYvC,OAAO,CAXC,QAAC,GAAU,OAAO,QAAA,IAAY,QAAA,GAAW,QAAA,GAAW,SAAA,CAAU;YAYtE,OAAO,CAXC,eAAC,GAAiB,gBAAA,GAAmB,QAAA,GAAW,MAAA,CAAO;SAYhE;QACD,OAXO,IAAI,IAAA,CAAK,YAAC,CAAY,MAAC,EAAO,OAAA,CAAQ,CAAC,MAAC,CAAM,GAAC,CAAG,CAAC;KAY3D;CAVF;AAeD,MAXMF,oBAAA,GAYF,qGAAqG,CAXC;AAa1G,MAXM,eAAA,GAAuD;;IAa3D,UAAU,EAXE,qBAAA,CAAsB,OAAC,CAAO;QAYxC,cAAc,CAXC,MAAC,EAAO,CAAA,CAAE;QAYzB,aAAa,CAXC,OAAC,EAAQ,CAAA,CAAE;QAYzB,cAAc,CAXC,KAAC,EAAM,CAAA,CAAE;QAYxB,cAAc,CAXC,MAAC,EAAO,CAAA,CAAE;QAYzB,cAAc,CAXC,QAAC,EAAS,CAAA,CAAE;QAY3B,cAAc,CAXC,QAAC,EAAS,CAAA,CAAE;KAY5B,CAXC,CAAC;IAYH,OAAO,EAXE,qBAAA,CAAsB,OAAC,CAAO;QAYrC,cAAc,CAXC,MAAC,EAAO,CAAA,CAAE,EAAE,cAAA,CAAe,OAAC,EAAQ,CAAA,CAAE,EAAE,cAAA,CAAe,KAAC,EAAM,CAAA,CAAE;QAY/E,cAAc,CAXC,MAAC,EAAO,CAAA,CAAE,EAAE,cAAA,CAAe,QAAC,EAAS,CAAA,CAAE;KAYvD,CAXC,CAAC;IAYH,YAAY,EAXE,qBAAA,CAAsB,OAAC,CAAO;QAY1C,cAAc,CAXC,MAAC,EAAO,CAAA,CAAE,EAAE,aAAA,CAAc,OAAC,EAAQ,CAAA,CAAE,EAAE,aAAA,CAAc,SAAC,EAAU,CAAA,CAAE;QAYjF,cAAc,CAXC,KAAC,EAAM,CAAA,CAAE;KAYzB,CAXC,CAAC;IAYH,QAAQ,EAXE,qBAAA,CAYN,OAAO,CAXC,CAAC,cAAC,CAAc,MAAC,EAAO,CAAA,CAAE,EAAE,aAAA,CAAc,OAAC,EAAQ,CAAA,CAAE,EAAE,cAAA,CAAe,KAAC,EAAM,CAAA,CAAE,CAAC,CAAC,CAAC;IAY9F,OAAO,EAXE,qBAAA,CAYL,OAAO,CAXC,CAAC,cAAC,CAAc,MAAC,EAAO,CAAA,CAAE,EAAE,aAAA,CAAc,OAAC,EAAQ,CAAA,CAAE,EAAE,cAAA,CAAe,KAAC,EAAM,CAAA,CAAE,CAAC,CAAC,CAAC;IAY9F,KAAK,EAXE,qBAAA,CAYH,OAAO,CAXC,CAAC,cAAC,CAAc,MAAC,EAAO,CAAA,CAAE,EAAE,cAAA,CAAe,OAAC,EAAQ,CAAA,CAAE,EAAE,cAAA,CAAe,KAAC,EAAM,CAAA,CAAE,CAAC,CAAC,CAAC;IAY/F,KAAK,EAXE,qBAAA,CAAsB,OAAC,CAY1B,CAAC,cAXC,CAAc,MAAC,EAAO,CAAA,CAAE,EAAE,cAAA,CAAe,QAAC,EAAS,CAAA,CAAE,EAAE,cAAA,CAAe,QAAC,EAAS,CAAA,CAAE,CAAC,CAAC,CAAC;IAY3F,IAAI,EAXE,qBAAA,CAAsB,OAAC,CAAO,CAAC,cAAC,CAAc,MAAC,EAAO,CAAA,CAAE,EAAE,cAAA,CAAe,QAAC,EAAS,CAAA,CAAE,CAAC,CAAC,CAAC;CAY/F,CAXC;AAaF,MAXMD,cAAA,GAAoD;;IAaxD,MAAM,EAXE,qBAAA,CAAsB,cAAC,CAAc,MAAC,EAAO,CAAA,CAAE,CAAC;IAYxD,IAAI,EAXE,qBAAA,CAAsB,cAAC,CAAc,MAAC,EAAO,CAAA,CAAE,CAAC;IAYtD,GAAG,EAXE,qBAAA,CAAsB,cAAC,CAAc,MAAC,EAAO,CAAA,CAAE,CAAC;IAYrD,MAAM,EAXE,qBAAA,CAAsB,aAAC,CAAa,OAAC,EAAQ,CAAA,CAAE,CAAC;IAYxD,KAAK,EAXE,qBAAA,CAAsB,aAAC,CAAa,OAAC,EAAQ,CAAA,CAAE,CAAC;IAYvD,IAAI,EAXE,qBAAA,CAAsB,cAAC,CAAc,OAAC,EAAQ,CAAA,CAAE,CAAC;IAYvD,GAAG,EAXE,qBAAA,CAAsB,cAAC,CAAc,OAAC,EAAQ,CAAA,CAAE,CAAC;IAYtD,MAAM,EAXE,qBAAA,CAAsB,aAAC,CAAa,OAAC,EAAQ,CAAA,CAAE,CAAC;IAYxD,GAAG,EAXE,qBAAA,CAAsB,aAAC,CAAa,OAAC,EAAQ,CAAA,CAAE,CAAC;IAYrD,IAAI,EAXE,qBAAA,CAAsB,cAAC,CAAc,KAAC,EAAM,CAAA,CAAE,CAAC;IAYrD,GAAG,EAXE,qBAAA,CAAsB,cAAC,CAAc,KAAC,EAAM,CAAA,CAAE,CAAC;IAYpD,IAAI,EAXE,aAAA,CAYF,aAAa,CAXC,qBAAC,CAAqB,YAAC,CAAY,cAAC,CAAc,MAAC,EAAO,CAAA,CAAE,EAAE,KAAA,CAAM,CAAC,CAAC,CAAC;IAYzF,GAAG,EAXE,aAAA,CAAc,qBAAC,CAAqB,YAAC,CAAY,cAAC,CAAc,MAAC,EAAO,CAAA,CAAE,EAAE,KAAA,CAAM,CAAC,CAAC;IAYzF,IAAI,EAXE,aAAA,CAYF,aAAa,CAXC,qBAAC,CAAqB,YAAC,CAAY,cAAC,CAAc,MAAC,EAAO,CAAA,CAAE,EAAE,IAAA,CAAK,CAAC,CAAC,CAAC;IAYxF,GAAG,EAXE,aAAA,CAAc,qBAAC,CAAqB,YAAC,CAAY,cAAC,CAAc,MAAC,EAAO,CAAA,CAAE,EAAE,IAAA,CAAK,CAAC,CAAC;IAYxF,IAAI,EAXE,qBAAA,CAAsB,cAAC,CAAc,MAAC,EAAO,CAAA,CAAE,CAAC;IAYtD,GAAG,EAXE,qBAAA,CAAsB,cAAC,CAAc,MAAC,EAAO,CAAA,CAAE,CAAC;IAYrD,IAAI,EAXE,aAAA,CAAc,qBAAC,CAAqB,cAAC,CAAc,QAAC,EAAS,CAAA,CAAE,CAAC,CAAC;IAYvE,GAAG,EAXE,qBAAA,CAAsB,cAAC,CAAc,QAAC,EAAS,CAAA,CAAE,CAAC;IAYvD,IAAI,EAXE,aAAA,CAAc,qBAAC,CAAqB,cAAC,CAAc,QAAC,EAAS,CAAA,CAAE,CAAC,CAAC;IAYvE,GAAG,EAXE,qBAAA,CAAsB,cAAC,CAAc,QAAC,EAAS,CAAA,CAAE,CAAC;;;;IAevD,KAAK,EAXE,qBAAA,CAAsB,cAAC,CAAc,QAAC,EAAS,CAAA,CAAE,CAAC;IAYzD,MAAM,EAXE,qBAAA,CAAsB,aAAC,CAAa,SAAC,EAAU,CAAA,CAAE,CAAC;IAY1D,KAAK,EAXE,qBAAA,CAAsB,aAAC,CAAa,SAAC,EAAU,CAAA,CAAE,CAAC;IAYzD,IAAI,EAXE,qBAAA,CAAsB,aAAC,CAAa,SAAC,EAAU,CAAA,CAAE,CAAC;IAYxD,GAAG,EAXE,qBAAA,CAAsB,aAAC,CAAa,SAAC,EAAU,CAAA,CAAE,CAAC;IAYvD,GAAG,EAXE,kBAAA,CAAmB,qBAAC,CAAqB,YAAC,CAAY,cAAC,CAAc,MAAC,EAAO,CAAA,CAAE,EAAE,IAAA,CAAK,CAAC,CAAC;IAY7F,GAAG,EAXEE,gBAAA,CAAe,OAAC,CAAO;IAY5B,GAAG,EAXEA,gBAAA,CAAe,MAAC,CAAM;IAY3B,IAAI,EAXE,qBAAA,CAAsB,EAAC,CAAE;;IAa/B,GAAG,EACC,qBAAqB,CAXC,EAAC,CAAE;;IAa7B,GAAG,EAXE,qBAAA,CAAsB,aAAC,CAAa,KAAC,EAAM,CAAA,CAAE,CAAC;IAYnD,IAAI,EAXE,qBAAA,CAAsB,aAAC,CAAa,KAAC,EAAM,CAAA,CAAE,CAAC;IAYpD,KAAK,EAXE,qBAAA,CAAsB,aAAC,CAAa,KAAC,EAAM,CAAA,CAAE,CAAC;IAYrD,MAAM,EAXE,qBAAA,CAAsB,aAAC,CAAa,KAAC,EAAM,CAAA,CAAE,CAAC;CAYvD,CAXC;;;;;AAgBF,SAAA,aAAA,CAbuB,KAAO,EAa9B;IACE,OAbO,UAAA,IAAe,EAAM,MAAQ,EAatC;QACI,uBAbM,MAAA,GAAS,KAAA,CAAM,IAAC,EAAK,MAAA,CAAO,CAAC;QAcnC,OAbO,MAAA,CAAO,MAAC,IAAS,CAAA,GAAI,GAAA,GAAM,MAAA,GAAS,MAAA,CAAO;KAcnD,CAbC;CAcH;;;;;AAKD,SAAA,kBAAA,CAhB4B,KAAO,EAgBnC;IACE,OAhBO,UAAA,IAAe,EAAM,MAAQ,EAgBtC,EAhBwD,OAAO,KAAA,CAAM,IAAC,EAAK,MAAA,CAAO,CAAC,KAAC,CAAK,GAAC,CAAG,CAAC,CAAC,CAAC,CAAC,EAAC,CAAE;CAiBnG;;;;;AAKD,SAAA,aAAA,CAnBuB,KAAO,EAmB9B;IACE,OAnBO,UAAA,IAAe,EAAM,MAAQ,EAmBtC,EAnBwD,OAAO,KAAA,CAAM,IAAC,EAAK,MAAA,CAAO,CAAC,KAAC,CAAK,GAAC,CAAG,CAAC,CAAC,CAAC,CAAC,EAAC,CAAE;CAoBnG;;;;;;;AAOD,SAAA,cAAA,CAxBwB,IAAM,EAAM,MAAQ,EAAQ,OAAe,EAwBnE;IACE,OAxBO,IAAI,IAAA,CAAK,cAAC,CAAc,MAAC,EAAO,OAAA,CAAQ,CAAC,MAAC,CAAM,IAAC,CAAI,CAAC,OAAC,CAAO,iBAAC,EAAkB,EAAA,CAAG,CAAC;CAyB7F;;;;;AAKD,SAAAA,gBAAA,CA3BwB,QAAU,EA2BlC;;IAEE,uBA3BM,OAAA,GAAU,EAAA,IAAE,EAAK,SAAA,EAAW,MAAA,EAAQ,KAAA,EAAO,YAAA,EAAc,QAAA,EAAS,CAAC;IA4BzE,OA3BO,UAAA,IAAe,EAAM,MAAQ,EA2BtC;QACI,uBA3BM,MAAA,GAAS,cAAA,CAAe,IAAC,EAAK,MAAA,EAAQ,OAAA,CAAQ,CAAC;;QA6BrD,OA3BO,MAAA,GAAS,MAAA,CAAO,SAAC,CAAS,CAAC,CAAC,GAAG,EAAA,CAAG;KA4B1C,CA3BC;CA4BH;;;;;;AAMD,SAAA,YAAA,CACI,OA/Be,EAAsB,KAAO,EA8BhD;IAEE,OAAO,CA/BC,MAAC,GAAQ,KAAA,CAAM;IAgCvB,OA/BO,OAAA,CAAQ;CAgChB;;;;;;AAMD,SAAA,cAAA,CAnCwB,IAAM,EAAQ,GAAK,EAmC3C;IACE,uBAnCM,MAAA,GAAgC,EAAA,CAAG;IAoCzC,MAAM,CAnCC,IAAC,CAAI,GAAG,GAAA,KAAQ,CAAA,GAAI,SAAA,GAAY,SAAA,CAAU;IAoCjD,OAnCO,MAAA,CAAO;CAoCf;;;;;;AAMD,SAAA,aAAA,CAvCuB,IAAM,EAAQ,GAAK,EAuC1C;IACE,uBAvCM,MAAA,GAAgC,EAAA,CAAG;IAwCzC,IAAI,GAvCC,GAAK,CAAA,EAAG;QAwCX,MAAM,CAvCC,IAAC,CAAI,GAAG,GAAA,GAAM,CAAA,GAAI,OAAA,GAAU,QAAA,CAAS;KAwC7C;SAvCM;QAwCL,MAAM,CAvCC,IAAC,CAAI,GAAG,MAAA,CAAO;KAwCvB;IAED,OAvCO,MAAA,CAAO;CAwCf;;;;;AAKD,SAAA,OAAA,CA1CiB,OAAoC,EA0CrD;IACE,OA1CO,OAAA,CAAQ,MAAC,CAAM,CAAC,MAAC,EAAO,GAAA,MA0CjC,MAAA,CAAA,MAAA,CAAA,EAAA,EA1C4C,MAAG,EAAO,GAAI,CA0C1D,CA1C8D,EAAE,EAAA,CAAG,CAAC;CA2CnE;;;;;AAKD,SAAA,qBAAA,CA7C+B,GAAW,EA6C1C;IACE,OA7CO,CAAA,IAAO,EAAM,MAAQ,KAAmB,cAAA,CAAe,IAAC,EAAK,MAAA,EAAQ,GAAA,CAAI,CAAC;CA8ClF;AAED,MA7CM,oBAAA,GAAuB,IAAI,GAAA,EAAqB,CAAG;;;;;;;AAoDzD,SAAA,aAAA,CAlDuB,MAAQ,EAAQ,IAAM,EAAM,MAAQ,EAkD3D;IACE,uBAlDM,EAAA,GAAK,eAAA,CAAgB,MAAC,CAAM,CAAC;IAoDnC,IAAI,EAlDC;QAAG,OAAO,EAAA,CAAG,IAAC,EAAK,MAAA,CAAO,CAAC;IAoDhC,uBAlDM,QAAA,GAAW,MAAA,CAAO;IAmDxB,qBAlDI,KAAA,GAAQ,oBAAA,CAAqB,GAAC,CAAG,QAAC,CAAQ,CAAC;IAoD/C,IAAI,CAlDC,KAAC,EAAM;QAmDV,KAAK,GAlDG,EAAA,CAAG;QAmDX,qBAlDI,KAAwB,CAAI;QAmDhCD,oBAAkB,CAlDC,IAAC,CAAI,MAAC,CAAM,CAAC;QAoDhC,qBAlDI,OAAA,GAAuB,MAAA,CAAO;QAmDlC,OAAO,OAlDC,EAAQ;YAmDd,KAAK,GAlDGA,oBAAA,CAAmB,IAAC,CAAI,OAAC,CAAO,CAAC;YAmDzC,IAAI,KAlDC,EAAM;gBAmDT,KAAK,GAlDG,KAAA,CAAM,MAAC,CAAM,KAAC,CAAK,KAAC,CAAK,CAAC,CAAC,CAAC,CAAC;gBAmDrC,OAAO,KAlDG,KAAA,CAAM,GAAC,EAAG,EAAA,CAAI;aAmDzB;iBAlDM;gBAmDL,KAAK,CAlDC,IAAC,CAAI,OAAC,CAAO,CAAC;gBAmDpB,OAAO,GAlDG,IAAA,CAAK;aAmDhB;SACF;QAED,oBAAoB,CAlDC,GAAC,CAAG,QAAC,EAAS,KAAA,CAAM,CAAC;KAmD3C;IAED,OAlDO,KAAA,CAAM,MAAC,CAAM,CAAC,IAAC,EAAK,IAAA,KAkD7B;QACI,uBAlDM,EAAA,GAAKD,cAAA,CAAa,IAAC,CAAI,CAAC;QAmD9B,OAlDO,IAAA,IAAO,EAAE,GAAI,EAAA,CAAG,IAAC,EAAK,MAAA,CAAO,GAAG,UAAA,CAAW,IAAC,CAAI,CAAC,CAAC;KAmD1D,EAlDE,EAAA,CAAG,CAAC;CAmDR;;;;;AAKD,SAAA,UAAA,CArDoB,IAAM,EAqD1B;IACE,OArDO,IAAA,KAAS,MAAA,GAAS,IAAA,GAAO,IAAA,CAAK,OAAC,CAAO,UAAC,EAAW,EAAA,CAAG,CAAC,OAAC,CAAO,KAAC,EAAM,IAAA,CAAK,CAAC;CAsDnF;AACD,AAAA,MAAA,aAAA,CAAA;;;;;;;IAOA,OA1DS,MAAA,CAAO,IAAM,EAAM,MAAQ,EAAQ,OAAS,EA0DrD;QACI,OA1DO,aAAA,CAAc,OAAC,EAAQ,IAAA,EAAM,MAAA,CAAO,CAAC;KA2D7C;CAzDF;;AD5ND;;;;;;;;;;;AAaA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA,AAAA,MAAA,kBAAA,CAAA;;;;IAiBA,WAAA,CAPyC,OAAS,EAOlD;QAPyC,IAAzC,CAAA,OAAyC,GAAA,OAAA,CAAS;KAAQ;;;;;;IAc1D,SAZG,CAAS,KAAO,EAAK,OAYxB,GAZ0C,YAAA,EAY1C;QACI,IAAE,KAZG,IAAQ,IAAA,IAAQ,KAAA,KAAU,EAAA,IAAM,KAAA,KAAU,KAAA;YAAO,OAAO,IAAA,CAAK;QAclE,qBAZI,IAAM,CAAK;QAcf,IAAI,OAZO,KAAA,KAAU,QAAA,EAAU;YAa7B,KAAK,GAZG,KAAA,CAAM,IAAC,EAAI,CAAE;SAatB;QAED,IAAI,MAZC,CAAM,KAAC,CAAK,EAAE;YAajB,IAAI,GAZG,KAAA,CAAM;SAad;aAZM,IAAA,CAAK,KAAC,CAAK,KAAC,GAAO,UAAA,CAAW,KAAC,CAAK,CAAC,EAAE;YAa5C,IAAI,GAZG,IAAI,IAAA,CAAK,UAAC,CAAU,KAAC,CAAK,CAAC,CAAC;SAapC;aAZM,IAAA,OAAW,KAAA,KAAU,QAAA,IAAY,2BAAA,CAA4B,IAAC,CAAI,KAAC,CAAK,EAAE;;;;;;;;;;;YAuBrF,MAZY,CAAA,CAAE,EAAE,CAAA,EAAG,CAAA,CAAE,GAAG,KAAA,CAAM,KAAC,CAAK,GAAC,CAAG,CAAC,GAAC,CAAG,CAAC,GAAK,KAAW,QAAA,CAAS,GAAC,EAAI,EAAA,CAAG,CAAC,CAAC;YAa3E,IAAA,GAZO,IAAI,IAAA,CAAK,CAAC,EAAE,CAAA,GAAI,CAAA,EAAG,CAAA,CAAE,CAAC;SAa9B;aAZM;YAaL,IAAI,GAZG,IAAI,IAAA,CAAK,KAAC,CAAK,CAAC;SAaxB;QAED,IAAI,CAZC,MAAC,CAAM,IAAC,CAAI,EAAE;YAajB,qBAZI,KAAyB,CAAI;YAajC,IAAI,CAZC,OAAO,KAAA,KAAU,QAAA,MAAa,KAAE,GAAO,KAAA,CAAM,KAAC,CAAK,kBAAC,CAAkB,CAAC,EAAE;gBAa5E,IAAI,GAZG,eAAA,CAAgB,KAAC,CAAK,CAAC;aAa/B;iBAZM;gBAaL,MAZM,wBAAA,CAAyB,kBAAC,EAAmB,KAAA,CAAM,CAAC;aAa3D;SANL;QASE,OAZO,aAAA,CAAc,MAAC,CAalB,IAPC,EALK,IAAA,CAAK,OAAC,EAAQ,kBAAA,CAAmB,QAAC,CAAQ,OAAC,CAAO,IAAI,OAAA,CAAQ,CAAC;KAM3E;;;;;AA3DO,kBAAT,CAAA,QAAS,GAAoC;IAMzC,QAAQ,EALE,UAAA;IAMV,OAAO,EALE,OAAA;IAMT,UAAU,EALE,YAAA;IAMZ,UAAC,EALW,QAAA;IAMZ,YAAY,EALE,OAAA;IAMd,WAA6B,EALhB,KAAA;IAMb,YAAY,EALE,KAAA;IAMd,WAAS,EALI,IAAA;CAMd,CALC;AA8CG,kBAAP,CAAA,UAAO,GAA+C;IAatD,EAZE,IAAA,EAAM,IAAA,EA3DN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,MAAA,EAAQ,IAAA,EAAM,IAAA,EAAK,EAAA,EAAA;CAwE/B,CAZC;;AAEK,kBAAP,CAAA,cAAO,GAA4F,MAAM;IAazG,EAAC,IAZC,EAAK,SAAA,EAAW,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,MAAA,EAjDvB,IAAA,EAAA,CAAA,SAAO,EAAA,EAAA,EAAA,EAAA;CA8DtB,CAZC;AAeF,AAiBA;;;;AAIA,SAAA,MAAA,CAxCgB,KAAO,EAwCvB;IACE,OAxCO,KAAA,YAAiB,IAAA,IAAQ,CAAA,KAAE,CAAK,KAAC,CAAK,OAAC,EAAO,CAAE,CAAC;CAyCzD;;ADxLD;;;;;;;;;;;AAaA,AAEA,AALO,MAAM,oBAAA,GAAuB,6BAAA,CAA8B;AAMlE,MALM,UAAA,GAAa,EAAA,CAAG;AAMtB,MALM,WAAA,GAAc,GAAA,CAAI;AAMxB,MALM,SAAA,GAAY,GAAA,CAAI;AAMtB,MALM,WAAA,GAAc,GAAA,CAAI;AAMxB,MALM,SAAA,GAAY,GAAA,CAAI;AAMtB,MALM,UAAA,GAAa,GAAA,CAAI;AAMvB,MALM,aAAA,GAAgB,GAAA,CAAI;AAM1B,MALM,YAAA,GAAe,GAAA,CAAI;;;;;;;;;;;;AAuBzB,AAAA,SAAAD,cAAA,CACI,KAVgB,EAAQ,MAAQ,EAAQ,KAAO,EAAmB,UAAsB,EAWxF,QAFJ,GAR8B,IAAA,EAQ9B;IAGE,uBAVM,GAAA,GAAuB,EAAA,GAAE,EAAI,IAAA,EAAK,CAAC;IAWzC,uBAVM,MAAA,GAAS,qBAAA,CAAsB,MAAC,EAAO,KAAA,CAAM,CAAC;IAWpD,qBAVI,GAAA,CAAI;;IAaR,IAAI,OAVO,KAAA,KAAU,QAAA,IAAY,CAAA,KAAE,CAAK,CAAC,KAAC,GAAO,UAAA,CAAW,KAAC,CAAK,CAAC,EAAE;QAWnE,GAAG,GAVG,CAAA,KAAE,CAAK;KAWd;SAVM,IAAA,OAAW,KAAA,KAAU,QAAA,EAAU;QAWpC,GAAG,CAVC,KAAC,GAAO,CAUhB,EAVgB,KAAI,CAUpB,gBAAA,CAVyB,CAAkB;QAWvC,OAVO,GAAA,CAAI;KAWZ;SAVM;QAWL,GAAG,GAVG,KAAA,CAAM;KAWb;IAED,IAAI,KAVC,KAAS,iBAAA,CAAkB,OAAC,EAAQ;QAWvC,GAAG,GAVG,GAAA,GAAM,GAAA,CAAI;KAWjB;IAED,uBAVM,MAAA,GAAS,IAAA,CAAK,GAAC,CAAG,GAAC,CAAG,GAAG,EAAA,CAAG;IAWlC,uBAVM,OAAA,GAAU,iBAAA,CAAkB,MAAC,EAAO,qBAAA,CAAsB,MAAC,EAAO,YAAA,CAAa,SAAC,CAAS,CAAC,CAAC;IAWjG,qBAVI,aAAA,GAAgB,EAAA,CAAG;IAWvB,qBAVI,MAAA,GAAS,KAAA,CAAM;IAYnB,IAAI,CAVC,QAAC,CAAQ,GAAC,CAAG,EAAE;QAWlB,aAAa,GAVG,qBAAA,CAAsB,MAAC,EAAO,YAAA,CAAa,QAAC,CAAQ,CAAC;KAWtE;SAVM;QAWL,uBAVM,YAAA,GAAe,WAAA,CAAY,MAAC,CAAM,CAAC;QAYzC,qBAVI,MAAA,GAAS,OAAA,CAAQ,MAAC,CAAM;QAW5B,qBAVI,WAAA,GAAc,OAAA,CAAQ,OAAC,CAAO;QAWlC,qBAVI,WAAA,GAAc,OAAA,CAAQ,OAAC,CAAO;QAYlC,IAAI,UAVC,EAAW;YAWd,uBAVM,KAAA,GAAQ,UAAA,CAAW,KAAC,CAAK,oBAAC,CAAoB,CAAC;YAWrD,IAAI,KAVC,KAAS,IAAA,EAAM;gBAWlB,GAAG,CAVC,KAAC,GAAO,CAUpB,EAVoB,UAAI,CAUxB,0BAAA,CAVkC,CAA4B;gBAWtD,OAVO,GAAA,CAAI;aAWZ;YACD,uBAVM,UAAA,GAAa,KAAA,CAAM,CAAC,CAAC,CAAC;YAW5B,uBAVM,eAAA,GAAkB,KAAA,CAAM,CAAC,CAAC,CAAC;YAWjC,uBAVM,eAAA,GAAkB,KAAA,CAAM,CAAC,CAAC,CAAC;YAWjC,IAAI,UAVC,IAAa,IAAA,EAAM;gBAWtB,MAAM,GAVG,iBAAA,CAAkB,UAAC,CAAU,CAAC;aAWxC;YACD,IAAI,eAVC,IAAkB,IAAA,EAAM;gBAW3B,WAAW,GAVG,iBAAA,CAAkB,eAAC,CAAe,CAAC;aAWlD;YACD,IAAI,eAVC,IAAkB,IAAA,EAAM;gBAW3B,WAAW,GAVG,iBAAA,CAAkB,eAAC,CAAe,CAAC;aAWlD;iBAVM,IAAA,eAAK,IAAkB,IAAA,IAAQ,WAAA,GAAc,WAAA,EAAa;gBAW/D,WAAW,GAVG,WAAA,CAAY;aAW3B;SACF;QAED,WAAW,CAVC,YAAC,EAAa,WAAA,EAAa,WAAA,CAAY,CAAC;QAYpD,qBAVI,MAAA,GAAS,YAAA,CAAa,MAAC,CAAM;QAWjC,qBAVI,UAAA,GAAa,YAAA,CAAa,UAAC,CAAU;QAWzC,uBAVM,QAAA,GAAW,YAAA,CAAa,QAAC,CAAQ;QAWvC,qBAVI,QAAA,GAAW,EAAA,CAAG;QAWlB,MAAM,GAVG,MAAA,CAAO,KAAC,CAAK,CAAC,IAAI,CAAA,CAAE,CAAC,CAAC;;QAa/B,OAVO,UAAA,GAAa,MAAA,EAAQ,UAAA,EAAW,EAAG;YAWxC,MAAM,CAVC,OAAC,CAAO,CAAC,CAAC,CAAC;SAWnB;;QAGD,OAVO,UAAA,GAAa,CAAA,EAAG,UAAA,EAAW,EAAG;YAWnC,MAAM,CAVC,OAAC,CAAO,CAAC,CAAC,CAAC;SAWnB;;QAGD,IAAI,UAVC,GAAY,CAAA,EAAG;YAWlB,QAAQ,GAVG,MAAA,CAAO,MAAC,CAAM,UAAC,EAAW,MAAA,CAAO,MAAC,CAAM,CAAC;SAWrD;aAVM;YAWL,QAAQ,GAVG,MAAA,CAAO;YAWlB,MAAM,GAVG,CAAA,CAAE,CAAC,CAAC;SAWd;;QAGD,uBAVM,MAAA,GAAS,EAAA,CAAG;QAWlB,IAAI,MAVC,CAAM,MAAC,IAAS,OAAA,CAAQ,MAAC,EAAO;YAWnC,MAAM,CAVC,OAAC,CAAO,MAAC,CAAM,MAAC,CAAM,CAAC,OAAC,CAAO,MAAC,EAAO,MAAA,CAAO,MAAC,CAAM,CAAC,IAAC,CAAI,EAAC,CAAE,CAAC,CAAC;SAWxE;QAED,OAAO,MAVC,CAAM,MAAC,GAAQ,OAAA,CAAQ,KAAC,EAAM;YAWpC,MAAM,CAVC,OAAC,CAAO,MAAC,CAAM,MAAC,CAAM,CAAC,OAAC,CAAO,KAAC,EAAM,MAAA,CAAO,MAAC,CAAM,CAAC,IAAC,CAAI,EAAC,CAAE,CAAC,CAAC;SAWvE;QAED,IAAI,MAVC,CAAM,MAAC,EAAO;YAWjB,MAAM,CAVC,OAAC,CAAO,MAAC,CAAM,IAAC,CAAI,EAAC,CAAE,CAAC,CAAC;SAWjC;QAED,uBAVM,WAAA,GAAc,QAAA,GAAW,YAAA,CAAa,aAAC,GAAe,YAAA,CAAa,KAAC,CAAK;QAW/E,aAAa,GAVG,MAAA,CAAO,IAAC,CAAI,qBAAC,CAAqB,MAAC,EAAO,WAAA,CAAY,CAAC,CAAC;;QAaxE,IAAI,QAVC,CAAQ,MAAC,EAAO;YAWnB,uBAVM,aAAA,GAAgB,QAAA,GAAW,YAAA,CAAa,eAAC,GAAiB,YAAA,CAAa,OAAC,CAAO;YAWrF,aAAa,IAVI,qBAAA,CAAsB,MAAC,EAAO,aAAA,CAAc,GAAG,QAAA,CAAS,IAAC,CAAI,EAAC,CAAE,CAAC;SAWnF;QAED,IAAI,QAVC,EAAS;YAWZ,aAAa,IAVI,qBAAA,CAAsB,MAAC,EAAO,YAAA,CAAa,WAAC,CAAW,GAAG,GAAA,GAAM,QAAA,CAAS;SAW3F;KACF;IAED,IAAI,GAVC,GAAK,CAAA,IAAK,CAAA,MAAE,EAAO;QAWtB,aAAa,GAVG,OAAA,CAAQ,MAAC,GAAQ,aAAA,GAAgB,OAAA,CAAQ,MAAC,CAAM;KAWjE;SAVM;QAWL,aAAa,GAVG,OAAA,CAAQ,MAAC,GAAQ,aAAA,GAAgB,OAAA,CAAQ,MAAC,CAAM;KAWjE;IAED,IAAI,KAVC,KAAS,iBAAA,CAAkB,QAAC,IAAW,QAAA,KAAa,IAAA,EAAM;QAW7D,GAAG,CAVC,GAAC,GAAK,aAAA;aAWK,OAVC,CAAO,aAAC,EAAc,QAAA,CAAS;aAYhC,OAVC,CAAO,aAAC,EAAc,EAAA,CAAG,CAAC;QAW1C,OAVO,GAAA,CAAI;KAWZ;IAED,IAAI,KAVC,KAAS,iBAAA,CAAkB,OAAC,EAAQ;QAWvC,GAAG,CAVC,GAAC,GAAK,aAAA,CAAc,OAAC,CAWrB,IAVI,MAAA,CAAO,YAAC,EAAa,GAAA,CAAI,EAAE,qBAAA,CAAsB,MAAC,EAAO,YAAA,CAAa,WAAC,CAAW,CAAC,CAAC;QAW5F,OAVO,GAAA,CAAI;KAWZ;IAED,GAAG,CAVC,GAAC,GAAK,aAAA,CAAc;IAWxB,OAVO,GAAA,CAAI;CAWZ;AACD,AAMA,AAyCA;;;;;AAKA,SAAA,iBAAA,CAzC2B,MAAQ,EAAQ,SAAA,GAAY,GAAA,EAyCvD;IACE,uBAzCM,CAAA,GAAI;QA0CR,MAAM,EAzCE,CAAA;QA0CR,OAAO,EAzCE,CAAA;QA0CT,OAAO,EAzCE,CAAA;QA0CT,MAAM,EAzCE,EAAA;QA0CR,MAAM,EAzCE,EAAA;QA0CR,MAAM,EAzCE,EAAA;QA0CR,MAAM,EAzCE,EAAA;QA0CR,KAAK,EAzCE,CAAA;QA0CP,MAAM,EAzCE,CAAA;KA0CT,CAzCC;IA2CF,uBAzCM,YAAA,GAAe,MAAA,CAAO,KAAC,CAAK,WAAC,CAAW,CAAC;IA0C/C,uBAzCM,QAAA,GAAW,YAAA,CAAa,CAAC,CAAC,CAAC;IA0CjC,uBAzCM,QAAA,GAAW,YAAA,CAAa,CAAC,CAAC,CAAC;IA2CjC,uBAzCM,aAAA,GAAgB,QAAA,CAAS,OAAC,CAAO,WAAC,CAAW,KAAK,CAAA,CAAE;QA0CtD,QAAQ,CAzCC,KAAC,CAAK,WAAC,CAAW;QA0C3B;YACE,QAAQ,CAzCC,SAAC,CAAS,CAAC,EAAE,QAAA,CAAS,WAAC,CAAW,SAAC,CAAS,GAAG,CAAA,CAAE;YA0C1D,QAAQ,CAzCC,SAAC,CAAS,QAAC,CAAQ,WAAC,CAAW,SAAC,CAAS,GAAG,CAAA,CAAE;SA0CxD,mBACC,OAAO,GAzCG,aAAA,CAAc,CAAC,CAAC,mBAAE,QAAA,GAAW,aAAA,CAAc,CAAC,CAAC,IAAI,EAAA,CAAG;IA2CpE,CAAC,CAzCC,MAAC,GAAQ,OAAA,CAAQ,MAAC,CAAM,CAAC,EAAE,OAAA,CAAQ,OAAC,CAAO,UAAC,CAAU,CAAC,CAAC;IA2C1D,KAAK,qBAzCI,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,QAAA,CAAS,MAAC,EAAO,CAAA,EAAE,EAAG;QA0CxC,uBAzCM,EAAA,GAAK,QAAA,CAAS,MAAC,CAAM,CAAC,CAAC,CAAC;QA0C9B,IAAI,EAzCC,KAAM,SAAA,EAAW;YA0CpB,CAAC,CAzCC,OAAC,GAAS,CAAA,CAAE,OAAC,GAAS,CAAA,GAAI,CAAA,CAAE;SA0C/B;aAzCM,IAAA,EAAK,KAAM,UAAA,EAAY;YA0C5B,CAAC,CAzCC,OAAC,GAAS,CAAA,GAAI,CAAA,CAAE;SA0CnB;aAzCM;YA0CL,CAAC,CAzCC,MAAC,IAAS,EAAA,CAAG;SA0ChB;KACF;IAED,uBAzCM,MAAA,GAAS,OAAA,CAAQ,KAAC,CAAK,SAAC,CAAS,CAAC;IA0CxC,CAAC,CAzCC,KAAC,GAAO,MAAA,CAAO,CAAC,CAAC,GAAG,MAAA,CAAO,CAAC,CAAC,CAAC,MAAC,GAAQ,CAAA,CAAE;IA0C3C,CAAC,CAzCC,MAAC,GAAQ,CAAA,MAAE,CAAM,CAAC,CAAC,IAAI,MAAA,CAAO,CAAC,CAAC,IAAI,CAAA,MAAE,CAAM,CAAC,CAAC,IAAI,MAAA,CAAO,CAAC,CAAC,EAAE,MAAC,GAAQ,CAAA,CAAE;IA2C1E,IAAI,QAzCC,EAAS;QA0CZ,uBAzCM,QAAA,GAAW,QAAA,CAAS,MAAC,GAAQ,CAAA,CAAE,MAAC,CAAM,MAAC,GAAQ,CAAA,CAAE,MAAC,CAAM,MAAC,mBA0CzD,GAAG,GAzCG,QAAA,CAAS,OAAC,CAAO,UAAC,CAAU,CAAC;QA2CzC,CAAC,CAzCC,MAAC,GAAQ,QAAA,CAAS,MAAC,CAAM,CAAC,EAAE,GAAA,CAAI,CAAC,OAAC,CAAO,IAAC,EAAK,EAAA,CAAG,CAAC;QA0CrD,CAAC,CAzCC,MAAC,GAAQ,QAAA,CAAS,MAAC,CAAM,GAAC,GAAK,QAAA,CAAS,CAAC,OAAC,CAAO,IAAC,EAAK,EAAA,CAAG,CAAC;KA0C9D;SAzCM;QA0CL,CAAC,CAzCC,MAAC,GAAQ,SAAA,GAAY,CAAA,CAAE,MAAC,CAAM;QA0ChC,CAAC,CAzCC,MAAC,GAAQ,CAAA,CAAE,MAAC,CAAM;KA0CrB;IAED,OAzCO,CAAA,CAAE;CA0CV;AACD,AAMA,AAkBA;;;;;;AAMA,SAAA,WAAA,CAzDqB,MAAQ,EAyD7B;IACE,qBAzDI,QAAA,GAAW,CAAA,mBAAG,MAAA,mBAAQ,UAAA,CAAW;IA0DrC,qBAzDI,CAAA,mBAAG,CAAA,mBAAG,KAAA,CAAM;;IA4DhB,IAAI,CAzDC,UAAC,GAAY,MAAA,CAAO,OAAC,CAAO,WAAC,CAAW,IAAI,CAAA,CAAE,EAAE;QA0DnD,MAAM,GAzDG,MAAA,CAAO,OAAC,CAAO,WAAC,EAAY,EAAA,CAAG,CAAC;KA0D1C;;IAGD,IAAI,CAzDC,CAAC,GAAG,MAAA,CAAO,MAAC,CAAM,IAAC,CAAI,IAAI,CAAA,EAAG;;QA2DjC,IAAI,UAzDC,GAAY,CAAA;YAAG,UAAA,GAAa,CAAA,CAAE;QA0DnC,UAAU,IAzDI,CAAA,MAAE,CAAM,KAAC,CAAK,CAAC,GAAG,CAAA,CAAE,CAAC;QA0DnC,MAAM,GAzDG,MAAA,CAAO,SAAC,CAAS,CAAC,EAAE,CAAA,CAAE,CAAC;KA0DjC;SAzDM,IAAA,UAAK,GAAY,CAAA,EAAG;;QA2DzB,UAAU,GAzDG,MAAA,CAAO,MAAC,CAAM;KA0D5B;;IAGD,KAAK,CAzDC,GAAG,CAAA,EAAG,MAAA,CAAO,MAAC,CAAM,CAAC,CAAC,KAAK,SAAA,EAAW,CAAA,EAAE,EAAG;KA0DhD;IAED,IAAI,CAzDC,MAAK,KAAE,GAAO,MAAA,CAAO,MAAC,CAAM,EAAE;;QA2DjC,MAAM,GAzDG,CAAA,CAAE,CAAC,CAAC;QA0Db,UAAU,GAzDG,CAAA,CAAE;KA0DhB;SAzDM;;QA2DL,KAAK,EAzDC,CAAE;QA0DR,OAAO,MAzDC,CAAM,MAAC,CAAM,KAAC,CAAK,KAAK,SAAA;YAAW,KAAA,EAAM,CAAE;;QA4DnD,UAAU,IAzDI,CAAA,CAAE;QA0DhB,MAAM,GAzDG,EAAA,CAAG;;QA2DZ,KAAK,CAzDC,GAAG,CAAA,EAAG,CAAA,IAAK,KAAA,EAAO,CAAA,EAAE,EAAG,CAAA,EAAE,EAAG;YA0DhC,MAAM,CAzDC,CAAC,CAAC,GAAG,CAAA,MAAE,CAAM,MAAC,CAAM,CAAC,CAAC,CAAC;SA0D/B;KACF;;IAGD,IAAI,UAzDC,GAAY,UAAA,EAAY;QA0D3B,MAAM,GAzDG,MAAA,CAAO,MAAC,CAAM,CAAC,EAAE,UAAA,GAAa,CAAA,CAAE,CAAC;QA0D1C,QAAQ,GAzDG,UAAA,GAAa,CAAA,CAAE;QA0D1B,UAAU,GAzDG,CAAA,CAAE;KA0DhB;IAED,OAzDO,EAAA,MAAE,EAAO,QAAA,EAAU,UAAA,EAAW,CAAC;CA0DvC;;;;;;;;;AASD,SAAA,WAAA,CA5DqB,YAAc,EAAc,OAAS,EAAQ,OAAS,EA4D3E;IACE,IAAI,OA5DC,GAAS,OAAA,EAAS;QA6DrB,MA5DM,IAAI,KAAA,CA6DN,CADR,6CAAA,EACwD,OA5DC,CA2DzD,8BAAA,EA3DgE,OAAiC,CA2DjG,EAAA,CA3DwG,CAAI,CAAC;KA6D1G;IAED,qBA5DI,MAAA,GAAS,YAAA,CAAa,MAAC,CAAM;IA6DjC,qBA5DI,WAAA,GAAc,MAAA,CAAO,MAAC,GAAQ,YAAA,CAAa,UAAC,CAAU;IA6D1D,uBA5DM,YAAA,GAAe,IAAA,CAAK,GAAC,CAAG,IAAC,CAAI,GAAC,CAAG,OAAC,EAAQ,WAAA,CAAY,EAAE,OAAA,CAAQ,CAAC;;IA+DvE,qBA5DI,OAAA,GAAU,YAAA,GAAe,YAAA,CAAa,UAAC,CAAU;IA6DrD,qBA5DI,KAAA,GAAQ,MAAA,CAAO,OAAC,CAAO,CAAC;IA8D5B,IAAI,OA5DC,GAAS,CAAA,EAAG;;QA8Df,MAAM,CA5DC,MAAC,CAAM,IAAC,CAAI,GAAC,CAAG,YAAC,CAAY,UAAC,EAAW,OAAA,CAAQ,CAAC,CAAC;;QA+D1D,KAAK,qBA5DI,CAAA,GAAI,OAAA,EAAS,CAAA,GAAI,MAAA,CAAO,MAAC,EAAO,CAAA,EAAE,EAAG;YA6D5C,MAAM,CA5DC,CAAC,CAAC,GAAG,CAAA,CAAE;SA6Df;KACF;SA5DM;;QA8DL,WAAW,GA5DG,IAAA,CAAK,GAAC,CAAG,CAAC,EAAE,WAAA,CAAY,CAAC;QA6DvC,YAAY,CA5DC,UAAC,GAAY,CAAA,CAAE;QA6D5B,MAAM,CA5DC,MAAC,GAAQ,IAAA,CAAK,GAAC,CAAG,CAAC,EAAE,OAAA,GAAU,YAAA,GAAe,CAAA,CAAE,CAAC;QA6DxD,MAAM,CA5DC,CAAC,CAAC,GAAG,CAAA,CAAE;QA6Dd,KAAK,qBA5DI,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,OAAA,EAAS,CAAA,EAAE;YAAG,MAAA,CAAO,CAAC,CAAC,GAAG,CAAA,CAAE;KA6DjD;IAED,IAAI,KA5DC,IAAQ,CAAA,EAAG;QA6Dd,IAAI,OA5DC,GAAS,CAAA,GAAI,CAAA,EAAG;YA6DnB,KAAK,qBA5DI,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,OAAA,EAAS,CAAA,EAAE,EAAG;gBA6DhC,MAAM,CA5DC,OAAC,CAAO,CAAC,CAAC,CAAC;gBA6DlB,YAAY,CA5DC,UAAC,EAAU,CAAE;aA6D3B;YACD,MAAM,CA5DC,OAAC,CAAO,CAAC,CAAC,CAAC;YA6DlB,YAAY,CA5DC,UAAC,EAAU,CAAE;SA6D3B;aA5DM;YA6DL,MAAM,CA5DC,OAAC,GAAS,CAAA,CAAE,EAAC,CAAE;SA6DvB;KACF;;IAGD,OA5DO,WAAA,GAAc,IAAA,CAAK,GAAC,CAAG,CAAC,EAAE,YAAA,CAAa,EAAE,WAAA,EAAY;QAAG,MAAA,CAAO,IAAC,CAAI,CAAC,CAAC,CAAC;;IAgE9E,uBA5DM,KAAA,GAAQ,MAAA,CAAO,WAAC,CAAW,UAAC,KAAS,EAAM,CAAA,EAAG,CAAA,EAAG,MAAA,EA4DzD;QACI,CAAC,GA5DG,CAAA,GAAI,KAAA,CAAM;QA6Dd,MAAM,CA5DC,CAAC,CAAC,GAAG,CAAA,GAAI,EAAA,CAAG;QA6DnB,OA5DO,IAAA,CAAK,KAAC,CAAK,CAAC,GAAG,EAAA,CAAG,CAAC;KA6D3B,EA5DE,CAAA,CAAE,CAAC;IA6DN,IAAI,KA5DC,EAAM;QA6DT,MAAM,CA5DC,OAAC,CAAO,KAAC,CAAK,CAAC;QA6DtB,YAAY,CA5DC,UAAC,EAAU,CAAE;KA6D3B;CACF;;;;;;AAMD,AAAA,SAAA,iBAAA,CA/DkC,IAAM,EA+DxC;IACE,uBA/DM,MAAA,GAAiB,QAAA,CAAS,IAAC,CAAI,CAAC;IAgEtC,IAAI,KA/DC,CAAK,MAAC,CAAM,EAAE;QAgEjB,MA/DM,IAAI,KAAA,CAAM,uCAAC,GAAyC,IAAA,CAAK,CAAC;KAgEjE;IACD,OA/DO,MAAA,CAAO;CAgEf;;ADzbD;;;;;;;;;;;AAaA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;AAUA,SAAAA,eAAA,CACI,IAde,EAAE,MAAQ,EAAQ,KAAgB,EAAQ,KAAO,EAehE,MAdkB,EAAM,QAY5B,GAZsD,IAAA,EAelD,gBAHJ,GAXgC,KAAA,EAWhC;IAIE,IAAI,KAdC,IAAQ,IAAA;QAAM,OAAO,IAAA,CAAK;;IAiB/B,KAAK,GAdG,OAAO,KAAA,KAAU,QAAA,IAAY,CAAA,KAAE,CAAK,CAAC,KAAC,GAAO,UAAA,CAAW,KAAC,CAAK,CAAC,GAAG,CAAA,KAAE,GAAO,KAAA,CAAM;IAezF,IAAI,OAdO,KAAA,KAAU,QAAA,EAAU;QAe7B,MAdM,wBAAA,CAAyB,IAAC,EAAK,KAAA,CAAM,CAAC;KAe7C;IAED,qBAdI,MAAgB,CAAS;IAe7B,qBAdI,WAAqB,CAAS;IAelC,qBAdI,WAAqB,CAAS;IAelC,IAAI,KAdC,KAAS,iBAAA,CAAkB,QAAC,EAAS;;QAgBxC,MAAM,GAdG,CAAA,CAAE;QAeX,WAAE,GAdY,CAAA,CAAE;QAehB,WAAW,GAdG,CAAA,CAAE;KAejB;IAED,IAAE,MAdG,EAAO;QAeV,uBAdM,KAAA,GAAQ,MAAA,CAAO,KAAC,CAAK,oBAAC,CAAoB,CAAC;QAejD,IAAI,KAdC,KAAS,IAAA,EAAM;YAelB,MAdM,IAAI,KAAA,CAAM,CActB,EAduB,MAAG,CAc1B,2CAAA,CAdgC,CAA6C,CAAC;SAezE;QACD,IAAI,KAdC,CAAK,CAAC,CAAC,IAAI,IAAA,EAAM;YAepB,MAAM,GAdG,iBAAA,CAAkB,KAAC,CAAK,CAAC,CAAC,CAAC,CAAC;SAetC;QACD,IAAE,KAdG,CAAK,CAAC,CAAC,IAAI,IAAA,EAAM;YAexB,WAAA,GAdkB,iBAAA,CAAkB,KAAC,CAAK,CAAC,CAAC,CAAC,CAAC;SAe3C;QACD,IAAI,KAdC,CAAK,CAAC,CAAC,IAAI,IAAA,EAAM;YAepB,WAAW,GAdG,iBAAA,CAAkB,KAAC,CAAK,CAAC,CAAC,CAAC,CAAC;SAe3C;KACF;IAED,OAdO,eAAA,CAAgB,MAAC,mBAAM,KAAS,GAAQ,MAAA,EAAQ,KAAA,EAAO;QAe5D,oBAAoB,EAdE,MAAA;QAetB,qBAAqB,EAdE,WAAA;QAevB,qBAAqB,EAdE,WAAA;QAevB,QAAQ,EAdE,QAAA;QAeV,gBAAgB,EAdE,gBAAA;KAenB,CAdC,CAAC;CAeJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BD,AAAA,MAAA,qBAAA,CAAA;;;;IAIA,WAAA,CAfyC,OAAS,EAelD;QAfyC,IAAzC,CAAA,OAAyC,GAAA,OAAA,CAAS;KAAQ;;;;;;IAsB1D,SApBG,CAAS,KAAO,EAAK,MAAS,EAoBjC;QACI,OApBOA,eAAA,CAqBH,qBAAqB,EApBE,IAAA,CAAK,OAAC,EAAQ,KAAA,EAAO,iBAAA,CAAkB,OAAC,EAAQ,MAAA,CAAO,CAAC;KAqBpF;;AAnBI,qBAAP,CAAA,UAAO,GAA+C;IAqBtD,EApBE,IAAA,EAAM,IAAA,EATN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,QAAA,EAAS,EAAA,EAAA;CA8BrB,CApBC;;AAEK,qBAAP,CAAA,cAAO,GAA4F,MAAM;IAqBzG,EAAC,IApBC,EAAK,SAAA,EAAW,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,MAAA,EAXvB,IAAA,EAAA,CAAA,SAAO,EAAA,EAAA,EAAA,EAAA;CAgCtB,CApBC;AAuBF,AAYA;;;;;;;;;;;;;;;;;;;;AAoBA,AAAA,MAAA,qBAAA,CAAA;;;;IAIA,WAAA,CAzCyC,OAAS,EAyClD;QAzCyC,IAAzC,CAAA,OAAyC,GAAA,OAAA,CAAS;KAAQ;;;;;;IAgD1D,SAvCG,CAPS,KAAO,EAAK,MAAS,EA8CjC;QACI,OA9COA,eAAA,CA+CH,qBAdK,EAhCkB,IAAA,CAAK,OAAC,EAAQ,KAAA,EAAO,iBAAA,CAAkB,OAAC,EAAQ,MAAA,CAAO,CAAC;KA+CpF;;AAtCI,qBAAP,CAAA,UAAO,GAA+C;IAwCtD,EAvCE,IAAA,EAAM,IAAA,EAhBN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,SAAA,EAAU,EAAA,EAAA;CAwDtB,CAvCC;;AAEK,qBAAP,CAAA,cAAO,GAA4F,MAAM;IAwCzG,EAAC,IAvCC,EAAK,SAAA,EAAW,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,MAAA,EAlBvB,IAAA,EAAA,CAAA,SAAO,EAAA,EAAA,EAAA,EAAA;CA0DtB,CAvCC;AA0CF,AAYA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,AAAA,MAAA,sBAAA,CAAA;;;;IAIA,WAAA,CAnEyC,OAAS,EAmElD;QAnEyC,IAAzC,CAAA,OAAyC,GAAA,OAAA,CAAS;KAAQ;;;;;;;;IA4E1D,SA5DG,CA6DG,KA1EO,EAAK,YAyElB,GAzEyC,KAAA,EAAO,aAyEhD,GAzEyE,KAAA,EA2EnE,MA1ES,EAwEf;QAGI,OA1EOA,eAAA,CA2EH,sBAAsB,EA1EE,IAAA,CAAK,OAAC,EAAQ,KAAA,EAAO,iBAAA,CAAkB,QAAC,EAAS,MAAA,EA2EzE,YAAY,EA1EE,aAAA,CAAc,CAAC;KA2ElC;;AA3DI,sBAAP,CAAA,UAAO,GAA+C;IA6DtD,EA5DE,IAAA,EAAM,IAAA,EA1BN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,UAAA,EAAW,EAAA,EAAA;CAuFvB,CA5DC;;AAEK,sBAAP,CAAA,cAAO,GAA4F,MAAM;IA6DzG,EAAC,IA5DC,EAAK,SAAA,EAAW,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,MAAA,EA5BvB,IAAA,EAAA,CAAA,SAAO,EAAA,EAAA,EAAA,EAAA;CAyFtB,CA5DC,AA+DF,AAUC;;ADhQD;;;;AAcA,AACA,AAEA,AAMA;;;;;AAKA,AAHO,MAAM,4BAAA,GAIT,CAAC,qBAHC,EAAsB,qBAAA,EAAuB,sBAAA,EAAwB,kBAAA,CAAmB,CAAC;;AD1B/F;;;;;;;;;;;AAaA,AAGA,AACA,AAMA,AAgBA,MAAA,kBAAA,CAAA;;;;;;IAMA,kBAxBG,CAAkB,KAAsB,EAAE,iBAAmB,EAwBhE;QACI,OAxBO,KAAA,CAAM,SAAC,CAAS,EAAC,IAAC,EAAK,iBAAA,EAAmB,KAAA,EAAO,CAAA,CAAI,KAwBhE,EAxB0E,MAAM,CAAA,CAAE,EAAC,EAAE,CAAC,CAAC;KAyBpF;;;;;IAKH,OA3BG,CAAO,YAAc,EA2BxB,EA3B+C,YAAA,CAAa,WAAC,EAAW,CAAE,EAAC;;;;;IAgC3E,SA9BG,CAAS,YAAc,EA8B1B,EA9BiD,YAAA,CAAa,WAAC,EAAW,CAAE,EAAC;CAC5E;AA+BD,MAAA,eAAA,CAAA;;;;;;IAMA,kBAlCG,CAAkB,KAAmB,EAAE,iBAA+B,EAkCzE;QACI,OAlCO,KAAA,CAAM,IAAC,CAAI,iBAAC,EAAkB,CAAA,IAkCzC,EAlCgD,MAAM,CAAA,CAAE,EAAC,CAAE,CAAC;KAmCzD;;;;;IAKH,OArCG,CAAO,YAA0B,EAqCpC,GArC4C;;;;;IA0C5C,SAxCG,CAAS,YAA0B,EAwCtC,GAxC8C;CAC7C;AA0CD,MAxCM,gBAAA,GAAmB,IAAI,eAAA,EAAgB,CAAE;AAyC/C,MAxCM,mBAAA,GAAsB,IAAI,kBAAA,EAAmB,CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;AAkErD,AAAA,MAAA,SAAA,CAAA;;;;IASA,WAAA,CAvCsB,IAAM,EAuC5B;QAvCsB,IAAtB,CAAA,IAAsB,GAAA,IAAA,CAAM;QAPlB,IAAV,CAAA,YAAU,GAAoB,IAAA,CAAK;QACzB,IAAV,CAAA,oBAAU,GAA4B,IAAA,CAAK;QAEjC,IAAV,CAAA,aAAU,GAAiD,IAAA,CAAK;QACtD,IAAV,CAAA,IAAU,GAA4D,IAAA,CAAK;QACjE,IAAV,CAAA,SAAU,KAAkC,IAAA,EAAA,CAAO;KAEJ;;;;IA2C/C,WAzCG,GAyCH;QACI,IAAE,IAzCG,CAAI,aAAC,EAAc;YA0CtB,IAAI,CAzCC,QAAC,EAAQ,CAAE;SA0CjB;KACF;;;;;IAUH,SA7CG,CAAS,GAAwC,EA6CpD;QACI,IAAI,CA7CC,IAAC,CAAI,IAAC,EAAK;YA8ChB,IAAA,GA7CO,EAAI;gBA8CP,IAAI,CA7CC,UAAC,CAAU,GAAC,CAAG,CAAC;aA8CtB;YACD,IAAG,CA7CE,oBAAC,GAAsB,IAAA,CAAK,YAAC,CAAY;YA8C9C,OA7CO,IAAA,CAAK,YAAC,CAAY;SA8C1B;QAED,IAAA,GA7CK,KAAO,IAAA,CAAK,IAAC,EAAK;YA8CrB,IAAI,CA7CC,QAAC,EAAQ,CAAE;YA8ChB,OA7CO,IAAA,CAAK,SAAC,mBAAS,GAAO,EAAI,CAAC;SA8CnC;QAED,IAAI,IA7CC,CAAI,YAAC,KAAgB,IAAA,CAAK,oBAAC,EAAqB;YA8CnD,OA7CO,IAAA,CAAK,oBAAC,CAAoB;SA8ClC;QAED,IAAI,CA7CC,oBAAC,GAAsB,IAAA,CAAK,YAAC,CAAY;QA8C9C,OA7CO,YAAA,CAAa,IAAC,CAAI,IAAC,CAAI,YAAC,CAAY,CAAC;KA8C7C;;;;;IA3CO,UAAA,CAAW,GAAmD,EAAxE;QAkDI,IAAI,CAjDC,IAAC,GAAM,GAAA,CAAI;QAkDhB,IAAI,CAjDC,SAAC,GAAW,IAAA,CAAK,eAAC,CAAe,GAAC,CAAG,CAAC;QAkD3C,IAAI,CAjDC,aAAC,GAAe,IAAA,CAAK,SAAC,CAAS,kBAAC,CAkDjC,GAAG,EAjDE,CAAA,KAAQ,KAAW,IAAA,CAAK,kBAAC,CAAkB,GAAC,EAAI,KAAA,CAAM,CAAC,CAAC;KAkDlE;;;;;IA/CO,eAAA,CAAgB,GAAmD,EAA7E;QAsDI,IAAI,UArDC,CAAU,GAAC,CAAG,EAAE;YAsDnB,OArDO,gBAAA,CAAiB;SAsDzB;QAED,IAAI,aArDC,CAAa,GAAC,CAAG,EAAE;YAsDtB,OArDO,mBAAA,CAAoB;SAsD5B;QAED,MArDM,wBAAA,CAAyB,SAAC,EAAU,GAAA,CAAI,CAAC;KAsDhD;;;;IAnDO,QAAA,GAAV;QAyDI,IAAI,CAxDC,SAAC,CAAS,OAAC,oBAAO,IAAC,CAAI,aAAC,GAAe,CAAC;QAyD7C,IAAI,CAxDC,YAAC,GAAc,IAAA,CAAK;QAyDzB,IAAI,CAxDC,oBAAC,GAAsB,IAAA,CAAK;QAyDjC,IAAI,CAxDC,aAAC,GAAe,IAAA,CAAK;QAyD1B,IAAI,CAxDC,IAAC,GAAM,IAAA,CAAK;KAyDlB;;;;;;IAtDO,kBAAA,CAAmB,KAAO,EAAK,KAAO,EAAhD;QA8DI,IAAI,KA7DC,KAAS,IAAA,CAAK,IAAC,EAAK;YA8DvB,IAAI,CA7DC,YAAC,GAAc,KAAA,CAAM;YA8D1B,IAAI,CA7DC,IAAC,CAAI,YAAC,EAAY,CAAE;SA8D1B;KACF;;AA5DI,SAAP,CAAA,UAAO,GAA+C;IA8DtD,EA7DE,IAAA,EAAM,IAAA,EA7EN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,OAAA,EAAS,IAAA,EAAM,KAAA,EAAM,EAAA,EAAA;CA2IjC,CA7DC;;AAEK,SAAP,CAAA,cAAO,GAA4F,MAAM;IA8DzG,EAAC,IA7DC,EAAK,iBAAA,GAAkB;CA8DxB,CA7DC,AAgEF,AAoBC;;AD1OD;;;;;;;;;;;AAaA,AACA,AACA;;;;;;;AAOA,AAAA,MAAA,aAAA,CAAA;;;;;IAKA,SAPG,CAAS,KAAO,EAOnB;QACI,IAAI,CAPC,KAAC;YAAM,OAAO,KAAA,CAAM;QAQzB,IAAI,OAPO,KAAA,KAAU,QAAA,EAAU;YAQ7B,MAPM,wBAAA,CAAyB,aAAC,EAAc,KAAA,CAAM,CAAC;SAQtD;QACD,OAPO,KAAA,CAAM,WAAC,EAAW,CAAE;KAE7B;;AAAK,aAAP,CAAA,UAAO,GAA+C;IAQtD,EAPE,IAAA,EAAM,IAAA,EAVN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,WAAA,EAAY,EAAA,EAAA;CAkBxB,CAPC;;AAEK,aAAP,CAAA,cAAO,GAA4F,MAAM,EAQxG,CAPC;AAUF,AAUA;;;;;;;AAOA,SAAA,aAAA,CAxBuB,IAAM,EAwB7B;IACE,IANE,CAlBG,IAAC;QAAK,OAAO,IAAA,CAAK;IAyBvB,OAxBO,IAAA,CAAK,CAAC,CAAC,CAAC,WAAC,EAAW,GAAI,IAAA,CAAK,MAAC,CAAM,CAAC,CAAC,CAAC,WAAC,EAAW,CAAE;CAyB7D;;;;;;AAMD,AAAA,MAAA,aAAA,CAAA;;;;;IAKA,SApBG,CANS,KAAO,EA0BnB;QAX2B,IAAA,CAdlB,KAAC;YAAM,OAAO,KAAA,CAAM;QA2BzB,IAZG,OAdQ,KAAA,KAAU,QAAA,EAAU;YA2B7B,MA1BM,wBAAA,CAAyB,aAAC,EAAc,KAAA,CAAM,CAAC;SA2BtD;QAED,OA1BO,KAAA,CAAM,KAAC,CAAK,KAAC,CAAK,CAAC,GAAC,CAAG,IAAC,IAAO,aAAA,CAAc,IAAC,CAAI,CAAC,CAAC,IAAC,CAAI,EAAC,CAAE,CAAC;KA2BrE;;AAnBI,aAAP,CAAA,UAAO,GAA+C;IAqBtD,EApBE,IAAA,EAAM,IAAA,EAjBN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,WAAA,EAAY,EAAA,EAAA;CAsCxB,CApBC;;AAEK,aAAP,CAAA,cAAO,GAA4F,MAAM,EAqBxG,CApBC;AAuBF,AAUA;;;;;AAKA,AAAA,MAAA,aAAA,CAAA;;;;;IAKA,SAjCG,CAZS,KAAO,EA6CnB;QACI,IAAI,CA7CC,KAAC;YAAM,OAAO,KAAA,CAAM;QA8CzB,IAAI,OA7CO,KAAA,KAAU,QAAA,EAAU;YA8C7B,MA7CM,wBAAA,CAAyB,aAAC,EAAc,KAAA,CAAM,CAAC;SA8CtD;QACD,OA7CO,KAAA,CAAM,WAAC,EAAW,CAAE;KA8C5B;;AAhCI,aAAP,CAAA,UAAO,GAA+C;IAkCtD,EAjCE,IAAA,EAAM,IAAA,EAtBN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,WAAA,EAAY,EAAA,EAAA;CAwDxB,CAjCC;;AAEK,aAAP,CAAA,cAAO,GAA4F,MAAM,EAkCxG,CAjCC,AAoCF,AAQC;;ADpID;;;;;;;;;;;AAaA,AAEA,AAEA,AAEA,MALM,qBAAA,GAAgC,IAAA,CAAK;;;;;;;;;;;;;;;;;;;;AAyB3C,AAAA,MAAA,cAAA,CAAA;;;;IAIA,WAAA,CANsB,aAAe,EAMrC;QANsB,IAAtB,CAAA,aAAsB,GAAA,aAAA,CAAe;KAAgB;;;;;;;IAarD,SAXG,CAAS,KAAO,EAAQ,SAAoC,EAAE,MAAS,EAW1E;QACI,IAAI,KAXC,IAAQ,IAAA;YAAM,OAAO,EAAA,CAAG;QAa7B,IAAI,OAXO,SAAA,KAAc,QAAA,IAAY,SAAA,KAAc,IAAA,EAAM;YAYvD,MAXM,wBAAA,CAAyB,cAAC,EAAe,SAAA,CAAU,CAAC;SAY3D;QALH,uBAJQ,GAAA,GAAM,iBAAA,CAAkB,KAAC,EAAM,MAAA,CAAO,IAAC,CAAI,SAAC,CAAS,EAAE,IAAA,CAAK,aAAC,EAAc,MAAA,CAAO,CAAC;QAazF,OAXO,SAAA,CAAU,GAAC,CAAG,CAAC,OAAC,CAAO,qBAAC,EAAsB,KAAA,CAAM,QAAC,EAAQ,CAAE,CAAC;KAYxE;;AAVI,cAAP,CAAA,UAAO,GAA+C;IAYtD,EAXE,IAAA,EAAM,IAAA,EAhBN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,YAAA,EAAc,IAAA,EAAM,IAAA,EAAK,EAAA,EAAA;CA4BrC,CAXC;;AAEK,cAAP,CAAA,cAAO,GAA4F,MAAM;IAYzG,EAAC,IAXC,EAAK,cAAA,GAAe;CAYrB,CAXC,AAcF,AAUC;;ADhFD;;;;;;;;;;;AAaA,AACA,AACA;;;;;;;;;;;;;;;;;AAiBA,AAAA,MAAA,cAAA,CAAA;;;;;;IAMA,SARG,CAAS,KAAoB,EAAU,OAAgC,EAQ1E;QACI,IAAE,KARG,IAAQ,IAAA;YAAM,OAAO,EAAA,CAAG;QAU7B,IAAI,OARO,OAAA,KAAY,QAAA,IAAY,OAAO,KAAA,KAAU,QAAA,EAAU;YAS5D,MARM,wBAAA,CAAyB,cAAC,EAAe,OAAA,CAAQ,CAAC;SASzD;QAED,IAAI,OARC,CAAO,cAAC,CAAc,KAAC,CAAK,EAAE;YASnC,OARS,OAAA,CAAQ,KAAC,CAAK,CAAC;SASvB;QAED,IAAI,OARC,CAAO,cAAC,CAAc,OAAC,CAAO,EAAE;YASnC,OARO,OAAA,CAAQ,OAAC,CAAO,CAAC;SASzB;QAJH,OAFS,EAAA,CAAG;KASX;;AAPI,cAAP,CAAA,UAAO,GAA+C;IAStD,EARE,IAAA,EAAM,IAAA,EApBN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,YAAA,EAAc,IAAA,EAAM,IAAA,EAAK,EAAA,EAAA;CA6BrC,CARC;;AAEK,cAAP,CAAA,cAAO,GAA4F,MAAM,EASxG,CARC,AAWF,AAQC;;ADvED;;;;;;;;;;;AAaA,AACA;;;;;;;;;;;;;AAaA,AAAA,MAAA,QAAA,CAAA;;;;;IAKA,SAPG,CAAS,KAAO,EAOnB,EAPkC,OAAO,IAAA,CAAK,SAAC,CAAS,KAAC,EAAM,IAAA,EAAM,CAAA,CAAE,CAAC,EAAC;;AAClE,QAAP,CAAA,UAAO,GAA+C;IAQtD,EAPE,IAAA,EAAM,IAAA,EAJN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,MAAA,EAAQ,IAAA,EAAM,KAAA,EAAM,EAAA,EAAA;CAYhC,CAPC;;AAEK,QAAP,CAAA,cAAO,GAA4F,MAAM,EAQxG,CAPC,AAUF,AAQC;;ADjDD;;;;;;;;;;;AAaA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,AAAA,MAAA,WAAA,CAAA;;;;IAIA,WAAA,CANyC,OAAS,EAMlD;QANyC,IAAzC,CAAA,OAAyC,GAAA,OAAA,CAAS;KAAQ;;;;;;;IAc1D,SAZG,CAAS,KAAO,EAAK,MAAS,EAAQ,MAAS,EAYlD;QACI,IAAI,OAZC,CAAO,KAAC,CAAK;YAAE,OAAO,IAAA,CAAK;QAchC,MAAM,GAZG,MAAA,IAAU,IAAA,CAAK,OAAC,CAAO;QAchC,MAZM,EAAA,GAAE,EAAI,KAAA,EAAM,GAAGA,cAAA,CAAa,KAAC,EAAM,MAAA,EAAQ,iBAAA,CAAkB,OAAC,EAAQ,MAAA,CAAO,CAAC;QAcpF,IAAI,KAZC,EAAM;YAMb,MALU,wBAAA,CAAyB,YAAC,EAAa,KAAA,CAAM,CAAC;SAarD;QAED,OAZO,GAAA,CAAI;KAaZ;;AAXI,WAAP,CAAA,UAAO,GAA+C;IAatD,EAZE,IAAA,EAAM,IAAA,EAlBN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,QAAA,EAAS,EAAA,EAAA;CA+BrB,CAZC;;AAEK,WAAP,CAAA,cAAO,GAA4F,MAAM;IAazG,EAAC,IAZC,EAAK,SAAA,EAAW,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,MAAA,EApBvB,IAAA,EAAA,CAAA,SAAO,EAAA,EAAA,EAAA,EAAA;CAiCtB,CAZC;AAeF,AAYA;;;;;;;;;;;;;;;;;;;AAmBA,AAAA,MAAA,WAAA,CAAA;;;;IAIA,WAAA,CAjCyC,OAAS,EAiClD;QAjCyC,IAAzC,CAAA,OAAyC,GAAA,OAAA,CAAS;KAAQ;;;;;;;IAyC1D,SAhCG,CAPS,KAAO,EAAK,MAAS,EAAQ,MAAS,EAuClD;QACI,IAAI,OAvCC,CAAO,KAAC,CAAK;YAAE,OAAO,IAAA,CAAK;QAyChC,MAAM,GAvCG,MAAA,IAAU,IAAA,CAAK,OAAC,CAAO;QAyChC,MAvCM,EAAA,GAAE,EAAI,KAAA,EAAM,GAAGA,cAAA,CAAa,KAAC,EAAM,MAAA,EAAQ,iBAAA,CAAkB,OAAC,EAAQ,MAAA,CAAO,CAAC;QAyCpF,IAAI,KAvCC,EAAM;YAwCT,MAvCM,wBAAA,CAAyB,YAAC,EAAa,KAAA,CAAM,CAAC;SAwCrD;QAED,OAvCO,GAAA,CAAI;KAwCZ;;AA/BI,WAAP,CAAA,UAAO,GAA+C;IAiCtD,EAhCE,IAAA,EAAM,IAAA,EAzBN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,SAAA,EAAU,EAAA,EAAA;CA0DtB,CAhCC;;AAEK,WAAP,CAAA,cAAO,GAA4F,MAAM;IAiCzG,EAAC,IAhCC,EAAK,SAAA,EAAW,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,MAAA,EA3BvB,IAAA,EAAA,CAAA,SAAO,EAAA,EAAA,EAAA,EAAA;CA4DtB,CAhCC;AAmCF,AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,AAAA,MAAA,YAAA,CAAA;;;;IAIA,WAAA,CA5DyC,OAAS,EA4DlD;QA5DyC,IAAzC,CAAA,OAAyC,GAAA,OAAA,CAAS;KAAQ;;;;;;;;;IAsE1D,SAtDG,CAuDG,KApEO,EAAK,YAAe,EAqE3B,OAFN,GAlEyD,QAAA,EAAU,MAAS,EAqEtE,MApES,EAiEf;QAII,IAAI,OApEC,CAAO,KAAC,CAAK;YAAE,OAAO,IAAA,CAAK;QAsEhC,MAAM,GApEG,MAAA,IAAU,IAAA,CAAK,OAAC,CAAO;QAsEhC,IAAI,OApEO,OAAA,KAAY,SAAA,EAAW;YAqEhC,IAAqB,CApEZ,OAAC,MAAe,OAAC,CAAO,IAAC,CAAA,EAAK;gBAqErC,OAAO,CApEC,IAAC,CAqEL,CADZ,wMAAA,CACsN,CApEC,CAAC;aAqEjN;YACD,OAAO,GApEG,OAAA,GAAU,QAAA,GAAW,MAAA,CAAO;SAqEvC;QAED,qBApEI,QAAA,GAAW,YAAA,IAAgB,KAAA,CAAM;QAqErC,IAAI,OApEC,KAAW,MAAA,EAAQ;YAqEtB,QAAQ,GApEG,kBAAA,CAAmB,QAAC,EAAS,OAAA,KAAY,QAAA,GAAW,MAAA,GAAS,QAAA,CAAS,CAAC;SAqEnF;QAED,MApEM,EAAA,GAAE,EAAI,KAAA,EAAM,GAAGA,cAAA,CAAa,KAAC,EAAM,MAAA,EAAQ,iBAAA,CAAkB,QAAC,EAAS,MAAA,EAAQ,QAAA,CAAS,CAAC;QAsE/F,IAAI,KApEC,EAAM;YAqET,MApEM,wBAAA,CAAyB,YAAC,EAAa,KAAA,CAAM,CAAC;SAqErD;QAED,OApEO,GAAA,CAAI;KAqEZ;;AArDI,YAAP,CAAA,UAAO,GAA+C;IAuDtD,EAtDE,IAAA,EAAM,IAAA,EAhDN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,UAAA,EAAW,EAAA,EAAA;CAuGvB,CAtDC;;AAEK,YAAP,CAAA,cAAO,GAA4F,MAAM;IAuDzG,EAAC,IAtDC,EAAK,SAAA,EAAW,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,MAAA,EAlDvB,IAAA,EAAA,CAAA,SAAO,EAAA,EAAA,EAAA,EAAA;CAyGtB,CAtDC;AAyDF,AAYA;;;;AAIA,SAAA,OAAA,CA3FiB,KAAO,EA2FxB;IACE,OA3FO,KAAA,IAAS,IAAA,IAAQ,KAAA,KAAU,EAAA,IAAM,KAAA,KAAU,KAAA,CAAM;CA4FzD;;AD3PD;;;;;;;;;;;AAaA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,AAAA,MAAA,SAAA,CAAA;;;;;;;IAOA,SARG,CAAS,KAAO,EAAK,KAAO,EAAQ,GAAM,EAQ7C;QACI,IAAI,KARC,IAAQ,IAAA;YAAM,OAAO,KAAA,CAAM;QAUhC,IAAI,CARC,IAAC,CAAI,QAAC,CAAQ,KAAC,CAAK,EAAE;YASzB,MARM,wBAAA,CAAyB,SAAC,EAAU,KAAA,CAAM,CAAC;SASlD;QAED,OARO,KAAA,CAAM,KAAC,CAAK,KAAC,EAAM,GAAA,CAAI,CAAC;KAShC;;;;;IANO,QAAA,CAAS,GAAK,EAAxB,EAAwC,OAAO,OAAO,GAAA,KAAQ,QAAA,IAAY,KAAA,CAAM,OAAC,CAAO,GAAC,CAAG,CAAC,EAAC;;AACvF,SAAP,CAAA,UAAO,GAA+C;IAatD,EAZE,IAAA,EAAM,IAAA,EAdN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,OAAA,EAAS,IAAA,EAAM,KAAA,EAAM,EAAA,EAAA;CA2BjC,CAZC;;AAEK,SAAP,CAAA,cAAO,GAA4F,MAAM,EAaxG,CAZC,AAeF,AAQC;;ADjGD;;;;;;;;;;;;;;;;AAkBA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAEA,AAcA;;;AAGA,AAHO,MAAM,YAAA,GAAe;IAI1B,SAAS;IACT,aAAa;IACb,aAAa;IACb,QAAQ;IACR,SAAS;IACT,WAAW;IACX,WAAW;IACX,aAAa;IACb,YAAY;IACZ,QAAQ;IACR,cAAc;IACd,cAAc;CACf,CAHC;;ADtDF;;;;;;;;;;;AAaA,AAEA,AACA,AACA,AACA,AACA;;;;;AAKA,AAAA,MAAA,YAAA,CAAA;;AACO,YAAP,CAAA,UAAO,GAA+C;IACtD,EAAE,IAAA,EAAM,QAAA,EAHN,IAAA,EAAA,CAAA;gBAIA,YAAY,EAHE,CAAA,iBAAE,EAAkB,YAAA,CAAa;gBAI/C,OAAO,EAHE,CAAA,iBAAE,EAAkB,YAAA,CAAa;gBAI1C,SAAS,EAHE;oBAIT,EAAC,OAHC,EAAQ,cAAA,EAAgB,QAAA,EAAU,oBAAA,EAAqB;iBAI1D;aACF,EAAC,EAAG;CACJ,CAAC;;AAEK,YAAP,CAAA,cAAO,GAA4F,MAAM,EACxG,CAAC;AAGF,AAUA;;;;;AAKA,AAAA,MAAA,yBAAA,CAAA;;AARO,yBAAP,CAAA,UAAO,GAA+C;IAUtD,EATE,IAAA,EAAM,QAAA,EATN,IAAA,EAAA,CAAA,EAAS,YAAC,EAAa,CAAA,4BAAE,CAA4B,EAAE,OAAA,EAAS,CAAA,4BAAE,CAA4B,EAAC,EAAA,EAAA;CAmBhG,CATC;;AAEK,yBAAP,CAAA,cAAO,GAA4F,MAAM,EAUxG,CATC,AAYF,AAQC;;ADvED;;;;;;;;;;;AAaA,AACA;;;;;;;;AAQA,AAJO,MAAM,QAAA,GAAW,IAAI,cAAA,CAAwB,eAAE,CAAe,CAAC;;ADlBtE;;;;;;;;;;;;;;IAaA,AALO,MAAM,mBAAA,GAAsB,SAAA,CAAU;AAM7C,AALO,MAAM,kBAAA,GAAqB,QAAA,CAAS;AAM3C,AALO,MAAM,sBAAA,GAAyB,kBAAA,CAAmB;AAMzD,AALO,MAAM,qBAAA,GAAwB,iBAAA,CAAkB;;;;;;;AAYvD,AAAA,SAAA,iBAAA,CANkC,UAAY,EAM9C;IACE,OANO,UAAA,KAAe,mBAAA,CAAoB;CAO3C;;;;;;;AAOD,AAAA,SAAA,gBAAA,CAPiC,UAAY,EAO7C;IACE,OAPO,UAAA,KAAe,kBAAA,CAAmB;CAQ1C;;;;;;;AAOD,AAAA,SAAA,mBAAA,CARoC,UAAY,EAQhD;IACE,OARO,UAAA,KAAe,sBAAA,CAAuB;CAS9C;;;;;;;AAOD,AAAA,SAAA,kBAAA,CATmC,UAAY,EAS/C;IACE,OATO,UAAA,KAAe,qBAAA,CAAsB;CAU7C;;ADpDD;;;;;;;;;;;;;;;;AAmBA,AACA;;;AAGA,AALO,MAAM,OAAA,GAAU,IAAI,OAAA,CAAQ,mBAAC,CAAmB,CAAC;;ADlBxD;;;;;;;;;;;;;;;GAiBG,AACH,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AALgB;;ADzBhB;;;;;;;;;;;;;;;;AAkBA,AAAg0C;0EAEtvC;;ADpB1E;;;;;;GAOG,AAEH,AAEA,AAEA,AACA,AACA,AAL2B;;"}