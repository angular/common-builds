{"version":3,"file":"common.js","sources":["../../../../packages/common/src/version.ts","../../../../packages/common/src/platform_id.ts","../../../../packages/common/src/common_module.ts","../../../../packages/common/src/pipes/index.ts","../../../../packages/common/src/pipes/slice_pipe.ts","../../../../packages/common/src/pipes/json_pipe.ts","../../../../packages/common/src/pipes/i18n_select_pipe.ts","../../../../packages/common/src/pipes/i18n_plural_pipe.ts","../../../../packages/common/src/pipes/date_pipe.ts","../../../../packages/common/src/pipes/number_pipe.ts","../../../../packages/common/src/pipes/intl.ts","../../../../packages/common/src/pipes/case_conversion_pipes.ts","../../../../packages/common/src/pipes/async_pipe.ts","../../../../packages/common/src/pipes/invalid_pipe_argument_error.ts","../../../../packages/common/src/directives/index.ts","../../../../packages/common/src/directives/ng_template_outlet.ts","../../../../packages/common/src/directives/ng_style.ts","../../../../packages/common/src/directives/ng_plural.ts","../../../../packages/common/src/directives/ng_switch.ts","../../../../packages/common/src/directives/ng_if.ts","../../../../packages/common/src/directives/ng_for_of.ts","../../../../packages/common/src/directives/ng_component_outlet.ts","../../../../packages/common/src/directives/ng_class.ts","../../../../packages/common/src/localization.ts","../../../../packages/common/src/location/path_location_strategy.ts","../../../../packages/common/src/location/hash_location_strategy.ts","../../../../packages/common/src/location/location.ts","../../../../packages/common/src/location/location_strategy.ts","../../../../packages/common/src/location/platform_location.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n/**\n * @stable\n */\nexport const /** @type {?} */ VERSION = new Version('4.0.0-rc.3-992aa17');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const /** @type {?} */ PLATFORM_BROWSER_ID = 'browser';\nexport const /** @type {?} */ PLATFORM_SERVER_ID = 'server';\nexport const /** @type {?} */ PLATFORM_WORKER_APP_ID = 'browserWorkerApp';\nexport const /** @type {?} */ PLATFORM_WORKER_UI_ID = 'browserWorkerUi';\n/**\n * Returns whether a platform id represents a browser platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nexport function isPlatformBrowser(platformId: Object): boolean {\n  return platformId === PLATFORM_BROWSER_ID;\n}\n/**\n * Returns whether a platform id represents a server platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nexport function isPlatformServer(platformId: Object): boolean {\n  return platformId === PLATFORM_SERVER_ID;\n}\n/**\n * Returns whether a platform id represents a web worker app platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nexport function isPlatformWorkerApp(platformId: Object): boolean {\n  return platformId === PLATFORM_WORKER_APP_ID;\n}\n/**\n * Returns whether a platform id represents a web worker UI platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nexport function isPlatformWorkerUi(platformId: Object): boolean {\n  return platformId === PLATFORM_WORKER_UI_ID;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {COMMON_DEPRECATED_DIRECTIVES, COMMON_DIRECTIVES} from './directives/index';\nimport {NgLocaleLocalization, NgLocalization} from './localization';\nimport {COMMON_PIPES} from './pipes/index';\n/**\n * The module that includes all the basic Angular directives like {\\@link NgIf}, {\\@link NgForOf}, ...\n * \n * \\@stable\n */\nexport class CommonModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n  exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n  providers: [\n    {provide: NgLocalization, useClass: NgLocaleLocalization},\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CommonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCommonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCommonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * This module provides a set of common Pipes.\n */\nimport {AsyncPipe} from './async_pipe';\nimport {LowerCasePipe, TitleCasePipe, UpperCasePipe} from './case_conversion_pipes';\nimport {DatePipe} from './date_pipe';\nimport {I18nPluralPipe} from './i18n_plural_pipe';\nimport {I18nSelectPipe} from './i18n_select_pipe';\nimport {JsonPipe} from './json_pipe';\nimport {CurrencyPipe, DecimalPipe, PercentPipe} from './number_pipe';\nimport {SlicePipe} from './slice_pipe';\n\nexport {\n  AsyncPipe,\n  CurrencyPipe,\n  DatePipe,\n  DecimalPipe,\n  I18nPluralPipe,\n  I18nSelectPipe,\n  JsonPipe,\n  LowerCasePipe,\n  PercentPipe,\n  SlicePipe,\n  TitleCasePipe,\n  UpperCasePipe\n};\n\n\n/**\n * A collection of Angular pipes that are likely to be used in each and every application.\n */\nexport const /** @type {?} */ COMMON_PIPES = [\n  AsyncPipe,\n  UpperCasePipe,\n  LowerCasePipe,\n  JsonPipe,\n  SlicePipe,\n  DecimalPipe,\n  PercentPipe,\n  TitleCasePipe,\n  CurrencyPipe,\n  DatePipe,\n  I18nPluralPipe,\n  I18nSelectPipe,\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Creates a new List or String containing a subset (slice) of the elements.\n * \\@howToUse `array_or_string_expression | slice:start[:end]`\n * \\@description \n * \n * Where the input expression is a `List` or `String`, and:\n * - `start`: The starting index of the subset to return.\n *   - **a positive integer**: return the item at `start` index and all items after\n *     in the list or string expression.\n *   - **a negative integer**: return the item at `start` index from the end and all items after\n *     in the list or string expression.\n *   - **if positive and greater than the size of the expression**: return an empty list or string.\n *   - **if negative and greater than the size of the expression**: return entire list or string.\n * - `end`: The ending index of the subset to return.\n *   - **omitted**: return all items until the end.\n *   - **if positive**: return all items before `end` index of the list or string.\n *   - **if negative**: return all items before `end` index from the end of the list or string.\n * \n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n * and `String.prototype.slice()`.\n * \n * When operating on a [List], the returned list is always a copy even when all\n * the elements are being returned.\n * \n * When operating on a blank value, the pipe returns the blank value.\n * \n * ## List Example\n * \n * This `ngFor` example:\n * \n * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n * \n * produces the following:\n * \n *     <li>b</li>\n *     <li>c</li>\n * \n * ## String Examples\n * \n * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n * \n * \\@stable\n */\nexport class SlicePipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} start\n * @param {?=} end\n * @return {?}\n */\ntransform(value: any, start: number, end?: number): any {\n    if (value == null) return value;\n\n    if (!this.supports(value)) {\n      throw invalidPipeArgumentError(SlicePipe, value);\n    }\n\n    return value.slice(start, end);\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nprivate supports(obj: any): boolean { return typeof obj === 'string' || Array.isArray(obj); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'slice', pure: false}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SlicePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nSlicePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSlicePipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Converts value into JSON string.\n * \\@howToUse `expression | json`\n * \\@description \n * \n * Converts value into string using `JSON.stringify`. Useful for debugging.\n * \n * ### Example\n * {\\@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n * \n * \\@stable\n */\nexport class JsonPipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: any): string { return JSON.stringify(value, null, 2); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'json', pure: false}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction JsonPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nJsonPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJsonPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Generic selector that displays the string that matches the current value.\n * \\@howToUse `expression | i18nSelect:mapping`\n * \\@description \n * \n *  Where `mapping` is an object that indicates the text that should be displayed\n *  for different values of the provided `expression`.\n *  If none of the keys of the mapping match the value of the `expression`, then the content\n *  of the `other` key is returned when present, otherwise an empty string is returned.\n * \n *  ## Example\n * \n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n * \n *  \\@experimental\n */\nexport class I18nSelectPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} mapping\n * @return {?}\n */\ntransform(value: string, mapping: {[key: string]: string}): string {\n    if (value == null) return '';\n\n    if (typeof mapping !== 'object' || typeof value !== 'string') {\n      throw invalidPipeArgumentError(I18nSelectPipe, mapping);\n    }\n\n    if (mapping.hasOwnProperty(value)) {\n      return mapping[value];\n    }\n\n    if (mapping.hasOwnProperty('other')) {\n      return mapping['other'];\n    }\n\n    return '';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'i18nSelect', pure: true}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction I18nSelectPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nI18nSelectPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nI18nSelectPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {NgLocalization, getPluralCategory} from '../localization';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\nconst /** @type {?} */ _INTERPOLATION_REGEXP: RegExp = /#/g;\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Maps a value to a string that pluralizes the value according to locale rules.\n * \\@howToUse `expression | i18nPlural:mapping`\n * \\@description \n * \n *  Where:\n *  - `expression` is a number.\n *  - `mapping` is an object that mimics the ICU format, see\n *    http://userguide.icu-project.org/formatparse/messages\n * \n *  ## Example\n * \n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n * \n * \\@experimental\n */\nexport class I18nPluralPipe implements PipeTransform {\n/**\n * @param {?} _localization\n */\nconstructor(private _localization: NgLocalization) {}\n/**\n * @param {?} value\n * @param {?} pluralMap\n * @return {?}\n */\ntransform(value: number, pluralMap: {[count: string]: string}): string {\n    if (value == null) return '';\n\n    if (typeof pluralMap !== 'object' || pluralMap === null) {\n      throw invalidPipeArgumentError(I18nPluralPipe, pluralMap);\n    }\n\n    const /** @type {?} */ key = getPluralCategory(value, Object.keys(pluralMap), this._localization);\n\n    return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'i18nPlural', pure: true}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgLocalization, },\n];\n}\n\nfunction I18nPluralPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nI18nPluralPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nI18nPluralPipe.ctorParameters;\n/** @type {?} */\nI18nPluralPipe.prototype._localization;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\nimport {DateFormatter} from './intl';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\nimport {isNumeric} from './number_pipe';\n\nconst /** @type {?} */ ISO8601_DATE_REGEX =\n    /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a date according to locale rules.\n * \\@howToUse `date_expression | date[:format]`\n * \\@description \n * \n * Where:\n * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n * (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. The format can be predefined as\n *   shown below or custom as shown in the table.\n *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n * \n * \n *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n * \n * In javascript, only the components specified will be respected (not the ordering,\n * punctuations, ...) and details of the formatting will be dependent on the locale.\n * \n * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n * \n * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n * applied and the formatted text will have the same day, month and year of the expression.\n * \n * WARNINGS:\n * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n *   Instead users should treat the date as an immutable object and change the reference when the\n *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n *   which would be an expensive operation).\n * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n *   browsers.\n * \n * ### Examples\n * \n * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n * in the _local_ time and locale is 'en-US':\n * \n * ```\n *     {{ dateObj | date }}               // output is 'Jun 15, 2015'\n *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n *     {{ dateObj | date:'mmss' }}        // output is '43:11'\n * ```\n * \n * {\\@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n * \n * \\@stable\n */\nexport class DatePipe implements PipeTransform {\n/**\n * \\@internal\n */\nstatic _ALIASES: {[key: string]: string} = {\n    'medium': 'yMMMdjms',\n    'short': 'yMdjm',\n    'fullDate': 'yMMMMEEEEd',\n    'longDate': 'yMMMMd',\n    'mediumDate': 'yMMMd',\n    'shortDate': 'yMd',\n    'mediumTime': 'jms',\n    'shortTime': 'jm'\n  };\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} pattern\n * @return {?}\n */\ntransform(value: any, pattern: string = 'mediumDate'): string {\n    let /** @type {?} */ date: Date;\n\n    if (isBlank(value) || value !== value) return null;\n\n    if (typeof value === 'string') {\n      value = value.trim();\n    }\n\n    if (isDate(value)) {\n      date = value;\n    } else if (isNumeric(value)) {\n      date = new Date(parseFloat(value));\n    } else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n      /**\n      * For ISO Strings without time the day, month and year must be extracted from the ISO String\n      * before Date creation to avoid time offset and errors in the new Date.\n      * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n      * date, some browsers (e.g. IE 9) will throw an invalid Date error\n      * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n      * is applied\n      * Note: ISO months are 0 for January, 1 for February, ...\n      */\n      const [y, m, d] = value.split('-').map((val: string) => parseInt(val, 10));\n      date = new Date(y, m - 1, d);\n    } else {\n      date = new Date(value);\n    }\n\n    if (!isDate(date)) {\n      let /** @type {?} */ match: RegExpMatchArray;\n      if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n        date = isoStringToDate(match);\n      } else {\n        throw invalidPipeArgumentError(DatePipe, value);\n      }\n    }\n\n    return DateFormatter.format(date, this._locale, DatePipe._ALIASES[pattern] || pattern);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'date', pure: true}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction DatePipe_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nDatePipe._ALIASES;\n/** @type {?} */\nDatePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatePipe.ctorParameters;\n/** @type {?} */\nDatePipe.prototype._locale;\n}\n\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isBlank(obj: any): boolean {\n  return obj == null || obj === '';\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isDate(obj: any): obj is Date {\n  return obj instanceof Date && !isNaN(obj.valueOf());\n}\n/**\n * @param {?} match\n * @return {?}\n */\nfunction isoStringToDate(match: RegExpMatchArray): Date {\n  const /** @type {?} */ date = new Date(0);\n  let /** @type {?} */ tzHour = 0;\n  let /** @type {?} */ tzMin = 0;\n  const /** @type {?} */ dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n  const /** @type {?} */ timeSetter = match[8] ? date.setUTCHours : date.setHours;\n\n  if (match[9]) {\n    tzHour = toInt(match[9] + match[10]);\n    tzMin = toInt(match[9] + match[11]);\n  }\n  dateSetter.call(date, toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));\n  const /** @type {?} */ h = toInt(match[4] || '0') - tzHour;\n  const /** @type {?} */ m = toInt(match[5] || '0') - tzMin;\n  const /** @type {?} */ s = toInt(match[6] || '0');\n  const /** @type {?} */ ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n  timeSetter.call(date, h, m, s, ms);\n  return date;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction toInt(str: string): number {\n  return parseInt(str, 10);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, LOCALE_ID, Pipe, PipeTransform, Type} from '@angular/core';\nimport {NumberFormatStyle, NumberFormatter} from './intl';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\nconst /** @type {?} */ _NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n/**\n * @param {?} pipe\n * @param {?} locale\n * @param {?} value\n * @param {?} style\n * @param {?} digits\n * @param {?=} currency\n * @param {?=} currencyAsSymbol\n * @return {?}\n */\nfunction formatNumber(\n    pipe: Type<any>, locale: string, value: number | string, style: NumberFormatStyle,\n    digits: string, currency: string = null, currencyAsSymbol: boolean = false): string {\n  if (value == null) return null;\n\n  // Convert strings to numbers\n  value = typeof value === 'string' && isNumeric(value) ? +value : value;\n  if (typeof value !== 'number') {\n    throw invalidPipeArgumentError(pipe, value);\n  }\n\n  let /** @type {?} */ minInt: number;\n  let /** @type {?} */ minFraction: number;\n  let /** @type {?} */ maxFraction: number;\n  if (style !== NumberFormatStyle.Currency) {\n    // rely on Intl default for currency\n    minInt = 1;\n    minFraction = 0;\n    maxFraction = 3;\n  }\n\n  if (digits) {\n    const /** @type {?} */ parts = digits.match(_NUMBER_FORMAT_REGEXP);\n    if (parts === null) {\n      throw new Error(`${digits} is not a valid digit info for number pipes`);\n    }\n    if (parts[1] != null) {  // min integer digits\n      minInt = parseIntAutoRadix(parts[1]);\n    }\n    if (parts[3] != null) {  // min fraction digits\n      minFraction = parseIntAutoRadix(parts[3]);\n    }\n    if (parts[5] != null) {  // max fraction digits\n      maxFraction = parseIntAutoRadix(parts[5]);\n    }\n  }\n\n  return NumberFormatter.format( /** @type {?} */((value as number)), locale, style, {\n    minimumIntegerDigits: minInt,\n    minimumFractionDigits: minFraction,\n    maximumFractionDigits: maxFraction,\n    currency: currency,\n    currencyAsSymbol: currencyAsSymbol,\n  });\n}\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number according to locale rules.\n * \\@howToUse `number_expression | number[:digitInfo]`\n * \n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the active locale.\n * \n * where `expression` is a number:\n *  - `digitInfo` is a `string` which has a following format: <br>\n *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n * \n * For more information on the acceptable range for each of these numbers and other\n * details see your native internationalization library.\n * \n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n * \n * ### Example\n * \n * {\\@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n * \n * \\@stable\n */\nexport class DecimalPipe implements PipeTransform {\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} digits\n * @return {?}\n */\ntransform(value: any, digits: string = null): string {\n    return formatNumber(DecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'number'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction DecimalPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDecimalPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDecimalPipe.ctorParameters;\n/** @type {?} */\nDecimalPipe.prototype._locale;\n}\n\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number as a percentage according to locale rules.\n * \\@howToUse `number_expression | percent[:digitInfo]`\n * \n * \\@description \n * \n * Formats a number as percentage.\n * \n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n * \n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n * \n * ### Example\n * \n * {\\@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n * \n * \\@stable\n */\nexport class PercentPipe implements PipeTransform {\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} digits\n * @return {?}\n */\ntransform(value: any, digits: string = null): string {\n    return formatNumber(PercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'percent'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction PercentPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nPercentPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPercentPipe.ctorParameters;\n/** @type {?} */\nPercentPipe.prototype._locale;\n}\n\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number as currency using locale rules.\n * \\@howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`\n * \\@description \n * \n * Use `currency` to format a number as currency.\n * \n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n *   - `true`: use symbol (e.g. `$`).\n *   - `false`(default): use code (e.g. `USD`).\n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n * \n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n * \n * ### Example\n * \n * {\\@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n * \n * \\@stable\n */\nexport class CurrencyPipe implements PipeTransform {\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} currencyCode\n * @param {?=} symbolDisplay\n * @param {?=} digits\n * @return {?}\n */\ntransform(\n      value: any, currencyCode: string = 'USD', symbolDisplay: boolean = false,\n      digits: string = null): string {\n    return formatNumber(\n        CurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode,\n        symbolDisplay);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'currency'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction CurrencyPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nCurrencyPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCurrencyPipe.ctorParameters;\n/** @type {?} */\nCurrencyPipe.prototype._locale;\n}\n\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text: string): number {\n  const /** @type {?} */ result: number = parseInt(text);\n  if (isNaN(result)) {\n    throw new Error('Invalid integer literal when parsing ' + text);\n  }\n  return result;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isNumeric(value: any): boolean {\n  return !isNaN(value - parseFloat(value));\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport type NumberFormatStyle = number;\nexport let NumberFormatStyle: any = {};\nNumberFormatStyle.Decimal = 0;\nNumberFormatStyle.Percent = 1;\nNumberFormatStyle.Currency = 2;\nNumberFormatStyle[NumberFormatStyle.Decimal] = \"Decimal\";\nNumberFormatStyle[NumberFormatStyle.Percent] = \"Percent\";\nNumberFormatStyle[NumberFormatStyle.Currency] = \"Currency\";\n\nexport class NumberFormatter {\n/**\n * @param {?} num\n * @param {?} locale\n * @param {?} style\n * @param {?=} __3\n * @return {?}\n */\nstatic format(\n      num: number, locale: string, style: NumberFormatStyle,\n      {minimumIntegerDigits, minimumFractionDigits, maximumFractionDigits, currency,\n       currencyAsSymbol = false}: {\n        minimumIntegerDigits?: number,\n        minimumFractionDigits?: number,\n        maximumFractionDigits?: number,\n        currency?: string,\n        currencyAsSymbol?: boolean\n      } = {}): string {\n    const /** @type {?} */ options: Intl.NumberFormatOptions = {\n      minimumIntegerDigits,\n      minimumFractionDigits,\n      maximumFractionDigits,\n      style: NumberFormatStyle[style].toLowerCase()\n    };\n\n    if (style == NumberFormatStyle.Currency) {\n      options.currency = currency;\n      options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n    }\n    return new Intl.NumberFormat(locale, options).format(num);\n  }\n}\n\ntype DateFormatterFn = (date: Date, locale: string) => string;\n\nconst /** @type {?} */ DATE_FORMATS_SPLIT =\n    /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n\nconst /** @type {?} */ PATTERN_ALIASES: {[format: string]: DateFormatterFn} = {\n  // Keys are quoted so they do not get renamed during closure compilation.\n  'yMMMdjms': datePartGetterFactory(combine([\n    digitCondition('year', 1),\n    nameCondition('month', 3),\n    digitCondition('day', 1),\n    digitCondition('hour', 1),\n    digitCondition('minute', 1),\n    digitCondition('second', 1),\n  ])),\n  'yMdjm': datePartGetterFactory(combine([\n    digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n    digitCondition('hour', 1), digitCondition('minute', 1)\n  ])),\n  'yMMMMEEEEd': datePartGetterFactory(combine([\n    digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n    digitCondition('day', 1)\n  ])),\n  'yMMMMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n  'yMMMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n  'yMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n  'jms': datePartGetterFactory(combine(\n      [digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n  'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n};\n\nconst /** @type {?} */ DATE_FORMATS: {[format: string]: DateFormatterFn} = {\n  // Keys are quoted so they do not get renamed.\n  'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n  'yy': datePartGetterFactory(digitCondition('year', 2)),\n  'y': datePartGetterFactory(digitCondition('year', 1)),\n  'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n  'MMM': datePartGetterFactory(nameCondition('month', 3)),\n  'MM': datePartGetterFactory(digitCondition('month', 2)),\n  'M': datePartGetterFactory(digitCondition('month', 1)),\n  'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n  'L': datePartGetterFactory(nameCondition('month', 1)),\n  'dd': datePartGetterFactory(digitCondition('day', 2)),\n  'd': datePartGetterFactory(digitCondition('day', 1)),\n  'HH': digitModifier(\n      hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n  'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n  'hh': digitModifier(\n      hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n  'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n  'jj': datePartGetterFactory(digitCondition('hour', 2)),\n  'j': datePartGetterFactory(digitCondition('hour', 1)),\n  'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n  'm': datePartGetterFactory(digitCondition('minute', 1)),\n  'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n  's': datePartGetterFactory(digitCondition('second', 1)),\n  // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n  // we can be just safely rely on using `sss` since we currently don't support single or two digit\n  // fractions\n  'sss': datePartGetterFactory(digitCondition('second', 3)),\n  'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n  'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n  'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n  'E': datePartGetterFactory(nameCondition('weekday', 1)),\n  'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n  'Z': timeZoneGetter('short'),\n  'z': timeZoneGetter('long'),\n  'ww': datePartGetterFactory({}),  // Week of year, padded (00-53). Week 01 is the week with the\n                                    // first Thursday of the year. not support ?\n  'w':\n      datePartGetterFactory({}),  // Week of year (0-53). Week 1 is the week with the first Thursday\n                                  // of the year not support ?\n  'G': datePartGetterFactory(nameCondition('era', 1)),\n  'GG': datePartGetterFactory(nameCondition('era', 2)),\n  'GGG': datePartGetterFactory(nameCondition('era', 3)),\n  'GGGG': datePartGetterFactory(nameCondition('era', 4))\n};\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction digitModifier(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string {\n    const /** @type {?} */ result = inner(date, locale);\n    return result.length == 1 ? '0' + result : result;\n  };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourClockExtractor(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string { return inner(date, locale).split(' ')[1]; };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourExtractor(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string { return inner(date, locale).split(' ')[0]; };\n}\n/**\n * @param {?} date\n * @param {?} locale\n * @param {?} options\n * @return {?}\n */\nfunction intlDateFormat(date: Date, locale: string, options: Intl.DateTimeFormatOptions): string {\n  return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n}\n/**\n * @param {?} timezone\n * @return {?}\n */\nfunction timeZoneGetter(timezone: string): DateFormatterFn {\n  // To workaround `Intl` API restriction for single timezone let format with 24 hours\n  const /** @type {?} */ options = {hour: '2-digit', hour12: false, timeZoneName: timezone};\n  return function(date: Date, locale: string): string {\n    const /** @type {?} */ result = intlDateFormat(date, locale, options);\n    // Then extract first 3 letters that related to hours\n    return result ? result.substring(3) : '';\n  };\n}\n/**\n * @param {?} options\n * @param {?} value\n * @return {?}\n */\nfunction hour12Modify(\n    options: Intl.DateTimeFormatOptions, value: boolean): Intl.DateTimeFormatOptions {\n  options.hour12 = value;\n  return options;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction digitCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\n  const /** @type {?} */ result: {[k: string]: string} = {};\n  result[prop] = len === 2 ? '2-digit' : 'numeric';\n  return result;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction nameCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\n  const /** @type {?} */ result: {[k: string]: string} = {};\n  if (len < 4) {\n    result[prop] = len > 1 ? 'short' : 'narrow';\n  } else {\n    result[prop] = 'long';\n  }\n\n  return result;\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction combine(options: Intl.DateTimeFormatOptions[]): Intl.DateTimeFormatOptions {\n  return ( /** @type {?} */((<any>Object))).assign({}, ...options);\n}\n/**\n * @param {?} ret\n * @return {?}\n */\nfunction datePartGetterFactory(ret: Intl.DateTimeFormatOptions): DateFormatterFn {\n  return (date: Date, locale: string): string => intlDateFormat(date, locale, ret);\n}\n\nconst /** @type {?} */ DATE_FORMATTER_CACHE = new Map<string, string[]>();\n/**\n * @param {?} format\n * @param {?} date\n * @param {?} locale\n * @return {?}\n */\nfunction dateFormatter(format: string, date: Date, locale: string): string {\n  const /** @type {?} */ fn = PATTERN_ALIASES[format];\n\n  if (fn) return fn(date, locale);\n\n  const /** @type {?} */ cacheKey = format;\n  let /** @type {?} */ parts = DATE_FORMATTER_CACHE.get(cacheKey);\n\n  if (!parts) {\n    parts = [];\n    let /** @type {?} */ match: RegExpExecArray;\n    DATE_FORMATS_SPLIT.exec(format);\n\n    while (format) {\n      match = DATE_FORMATS_SPLIT.exec(format);\n      if (match) {\n        parts = parts.concat(match.slice(1));\n        format = parts.pop();\n      } else {\n        parts.push(format);\n        format = null;\n      }\n    }\n\n    DATE_FORMATTER_CACHE.set(cacheKey, parts);\n  }\n\n  return parts.reduce((text, part) => {\n    const /** @type {?} */ fn = DATE_FORMATS[part];\n    return text + (fn ? fn(date, locale) : partToTime(part));\n  }, '');\n}\n/**\n * @param {?} part\n * @return {?}\n */\nfunction partToTime(part: string): string {\n  return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n}\nexport class DateFormatter {\n/**\n * @param {?} date\n * @param {?} locale\n * @param {?} pattern\n * @return {?}\n */\nstatic format(date: Date, locale: string, pattern: string): string {\n    return dateFormatter(pattern, date, locale);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * Transforms text to lowercase.\n * \n * {\\@example  common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe' }\n * \n * \\@stable\n */\nexport class LowerCasePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: string): string {\n    if (!value) return value;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(LowerCasePipe, value);\n    }\n    return value.toLowerCase();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'lowercase'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LowerCasePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nLowerCasePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLowerCasePipe.ctorParameters;\n}\n\n/**\n * Helper method to transform a single word to titlecase.\n * \n * \\@stable\n * @param {?} word\n * @return {?}\n */\nfunction titleCaseWord(word: string) {\n  if (!word) return word;\n  return word[0].toUpperCase() + word.substr(1).toLowerCase();\n}\n/**\n * Transforms text to titlecase.\n * \n * \\@stable\n */\nexport class TitleCasePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: string): string {\n    if (!value) return value;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(TitleCasePipe, value);\n    }\n\n    return value.split(/\\b/g).map(word => titleCaseWord(word)).join('');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'titlecase'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TitleCasePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nTitleCasePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTitleCasePipe.ctorParameters;\n}\n\n/**\n * Transforms text to uppercase.\n * \n * \\@stable\n */\nexport class UpperCasePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: string): string {\n    if (!value) return value;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(UpperCasePipe, value);\n    }\n    return value.toUpperCase();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'uppercase'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction UpperCasePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nUpperCasePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUpperCasePipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, EventEmitter, OnDestroy, Pipe, PipeTransform, WrappedValue, ɵisObservable, ɵisPromise} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\ninterface SubscriptionStrategy {\n  createSubscription(async: any, updateLatestValue: any): any;\n  dispose(subscription: any): void;\n  onDestroy(subscription: any): void;\n}\nclass ObservableStrategy implements SubscriptionStrategy {\n/**\n * @param {?} async\n * @param {?} updateLatestValue\n * @return {?}\n */\ncreateSubscription(async: any, updateLatestValue: any): any {\n    return async.subscribe({next: updateLatestValue, error: (e: any) => { throw e; }});\n  }\n/**\n * @param {?} subscription\n * @return {?}\n */\ndispose(subscription: any): void { subscription.unsubscribe(); }\n/**\n * @param {?} subscription\n * @return {?}\n */\nonDestroy(subscription: any): void { subscription.unsubscribe(); }\n}\nclass PromiseStrategy implements SubscriptionStrategy {\n/**\n * @param {?} async\n * @param {?} updateLatestValue\n * @return {?}\n */\ncreateSubscription(async: Promise<any>, updateLatestValue: (v: any) => any): any {\n    return async.then(updateLatestValue, e => { throw e; });\n  }\n/**\n * @param {?} subscription\n * @return {?}\n */\ndispose(subscription: any): void {}\n/**\n * @param {?} subscription\n * @return {?}\n */\nonDestroy(subscription: any): void {}\n}\n\nconst /** @type {?} */ _promiseStrategy = new PromiseStrategy();\nconst /** @type {?} */ _observableStrategy = new ObservableStrategy();\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Unwraps a value from an asynchronous primitive.\n * \\@howToUse `observable_or_promise_expression | async`\n * \\@description \n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n * potential memory leaks.\n * \n * \n * ## Examples\n * \n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n * promise.\n * \n * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n * \n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n * to the view. The Observable continuously updates the view with the current time.\n * \n * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n * \n * \\@stable\n */\nexport class AsyncPipe implements OnDestroy, PipeTransform {\nprivate _latestValue: Object = null;\nprivate _latestReturnedValue: Object = null;\nprivate _subscription: Object = null;\nprivate _obj: Observable<any>|Promise<any>|EventEmitter<any> = null;\nprivate _strategy: SubscriptionStrategy = null;\n/**\n * @param {?} _ref\n */\nconstructor(private _ref: ChangeDetectorRef) {}\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this._subscription) {\n      this._dispose();\n    }\n  }\n\n  transform<T>(obj: Observable<T>): T|null;\n  transform<T>(obj: Promise<T>): T|null;\n  transform<T>(obj: EventEmitter<T>): T|null;\n/**\n * @param {?} obj\n * @return {?}\n */\ntransform(obj: Observable<any>|Promise<any>|EventEmitter<any>): any {\n    if (!this._obj) {\n      if (obj) {\n        this._subscribe(obj);\n      }\n      this._latestReturnedValue = this._latestValue;\n      return this._latestValue;\n    }\n\n    if (obj !== this._obj) {\n      this._dispose();\n      return this.transform( /** @type {?} */((obj as any)));\n    }\n\n    if (this._latestValue === this._latestReturnedValue) {\n      return this._latestReturnedValue;\n    }\n\n    this._latestReturnedValue = this._latestValue;\n    return WrappedValue.wrap(this._latestValue);\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nprivate _subscribe(obj: Observable<any>|Promise<any>|EventEmitter<any>): void {\n    this._obj = obj;\n    this._strategy = this._selectStrategy(obj);\n    this._subscription = this._strategy.createSubscription(\n        obj, (value: Object) => this._updateLatestValue(obj, value));\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nprivate _selectStrategy(obj: Observable<any>|Promise<any>|EventEmitter<any>): any {\n    if (ɵisPromise(obj)) {\n      return _promiseStrategy;\n    }\n\n    if (ɵisObservable(obj)) {\n      return _observableStrategy;\n    }\n\n    throw invalidPipeArgumentError(AsyncPipe, obj);\n  }\n/**\n * @return {?}\n */\nprivate _dispose(): void {\n    this._strategy.dispose(this._subscription);\n    this._latestValue = null;\n    this._latestReturnedValue = null;\n    this._subscription = null;\n    this._obj = null;\n  }\n/**\n * @param {?} async\n * @param {?} value\n * @return {?}\n */\nprivate _updateLatestValue(async: any, value: Object): void {\n    if (async === this._obj) {\n      this._latestValue = value;\n      this._ref.markForCheck();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'async', pure: false}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction AsyncPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nAsyncPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAsyncPipe.ctorParameters;\n/** @type {?} */\nAsyncPipe.prototype._latestValue;\n/** @type {?} */\nAsyncPipe.prototype._latestReturnedValue;\n/** @type {?} */\nAsyncPipe.prototype._subscription;\n/** @type {?} */\nAsyncPipe.prototype._obj;\n/** @type {?} */\nAsyncPipe.prototype._strategy;\n/** @type {?} */\nAsyncPipe.prototype._ref;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type, ɵstringify as stringify} from '@angular/core';\n/**\n * @param {?} type\n * @param {?} value\n * @return {?}\n */\nexport function invalidPipeArgumentError(type: Type<any>, value: Object) {\n  return Error(`InvalidPipeArgument: '${value}' for pipe '${stringify(type)}'`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Provider} from '@angular/core';\n\nimport {NgClass} from './ng_class';\nimport {NgComponentOutlet} from './ng_component_outlet';\nimport {NgFor, NgForOf, NgForOfContext} from './ng_for_of';\nimport {NgIf, NgIfContext} from './ng_if';\nimport {NgPlural, NgPluralCase} from './ng_plural';\nimport {NgStyle} from './ng_style';\nimport {NgSwitch, NgSwitchCase, NgSwitchDefault} from './ng_switch';\nimport {NgTemplateOutlet} from './ng_template_outlet';\n\nexport {\n  NgClass,\n  NgComponentOutlet,\n  NgFor,\n  NgForOf,\n  NgForOfContext,\n  NgIf,\n  NgIfContext,\n  NgPlural,\n  NgPluralCase,\n  NgStyle,\n  NgSwitch,\n  NgSwitchCase,\n  NgSwitchDefault,\n  NgTemplateOutlet\n};\n\n\n\n/**\n * A collection of Angular directives that are likely to be used in each and every Angular\n * application.\n */\nexport const /** @type {?} */ COMMON_DIRECTIVES: Provider[] = [\n  NgClass,\n  NgComponentOutlet,\n  NgForOf,\n  NgIf,\n  NgTemplateOutlet,\n  NgStyle,\n  NgSwitch,\n  NgSwitchCase,\n  NgSwitchDefault,\n  NgPlural,\n  NgPluralCase,\n];\n\n/**\n * A colletion of deprecated directives that are no longer part of the core module.\n */\nexport const /** @type {?} */ COMMON_DEPRECATED_DIRECTIVES: Provider[] = [NgFor];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, EmbeddedViewRef, Input, OnChanges, SimpleChanges, TemplateRef, ViewContainerRef} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Inserts an embedded view from a prepared `TemplateRef`\n * \n * \\@howToUse \n * ```\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\n * ```\n * \n * \\@description \n * \n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\n * by the local template `let` declarations.\n * \n * Note: using the key `$implicit` in the context object will set it's value as default.\n * \n * # Example\n * \n * {\\@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\n * \n * \\@experimental\n */\nexport class NgTemplateOutlet implements OnChanges {\nprivate _viewRef: EmbeddedViewRef<any>;\npublic ngTemplateOutletContext: Object;\npublic ngTemplateOutlet: TemplateRef<any>;\n/**\n * @param {?} _viewContainerRef\n */\nconstructor(private _viewContainerRef: ViewContainerRef) {}\n/**\n * @deprecated v4.0.0 - Renamed to ngTemplateOutletContext.\n * @param {?} context\n * @return {?}\n */\nset ngOutletContext(context: Object) { this.ngTemplateOutletContext = context; }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (this._viewRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n    }\n\n    if (this.ngTemplateOutlet) {\n      this._viewRef = this._viewContainerRef.createEmbeddedView(\n          this.ngTemplateOutlet, this.ngTemplateOutletContext);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngTemplateOutlet]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngTemplateOutletContext': [{ type: Input },],\n'ngTemplateOutlet': [{ type: Input },],\n'ngOutletContext': [{ type: Input },],\n};\n}\n\nfunction NgTemplateOutlet_tsickle_Closure_declarations() {\n/** @type {?} */\nNgTemplateOutlet.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgTemplateOutlet.ctorParameters;\n/** @type {?} */\nNgTemplateOutlet.propDecorators;\n/** @type {?} */\nNgTemplateOutlet.prototype._viewRef;\n/** @type {?} */\nNgTemplateOutlet.prototype.ngTemplateOutletContext;\n/** @type {?} */\nNgTemplateOutlet.prototype.ngTemplateOutlet;\n/** @type {?} */\nNgTemplateOutlet.prototype._viewContainerRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, DoCheck, ElementRef, Input, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Renderer} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Update an HTML element styles.\n * \n * \\@howToUse \n * ```\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n * \n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n * \n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n * \n * \\@description \n * \n * The styles are updated according to the value of the expression evaluation:\n * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n * - values are the values assigned to those properties (expressed in the given unit).\n * \n * \\@stable\n */\nexport class NgStyle implements DoCheck {\nprivate _ngStyle: {[key: string]: string};\nprivate _differ: KeyValueDiffer<string, string|number>;\n/**\n * @param {?} _differs\n * @param {?} _ngEl\n * @param {?} _renderer\n */\nconstructor(\nprivate _differs: KeyValueDiffers,\nprivate _ngEl: ElementRef,\nprivate _renderer: Renderer) {}\n/**\n * @param {?} v\n * @return {?}\n */\nset ngStyle(v: {[key: string]: string}) {\n    this._ngStyle = v;\n    if (!this._differ && v) {\n      this._differ = this._differs.find(v).create();\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\n    if (this._differ) {\n      const /** @type {?} */ changes = this._differ.diff(this._ngStyle);\n      if (changes) {\n        this._applyChanges(changes);\n      }\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _applyChanges(changes: KeyValueChanges<string, string|number>): void {\n    changes.forEachRemovedItem((record) => this._setStyle(record.key, null));\n    changes.forEachAddedItem((record) => this._setStyle(record.key, record.currentValue));\n    changes.forEachChangedItem((record) => this._setStyle(record.key, record.currentValue));\n  }\n/**\n * @param {?} nameAndUnit\n * @param {?} value\n * @return {?}\n */\nprivate _setStyle(nameAndUnit: string, value: string|number): void {\n    const [name, unit] = nameAndUnit.split('.');\n    value = value != null && unit ? `${value}${unit}` : value;\n\n    this._renderer.setElementStyle(this._ngEl.nativeElement, name, /** @type {?} */(( value as string)));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngStyle]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngStyle': [{ type: Input },],\n};\n}\n\nfunction NgStyle_tsickle_Closure_declarations() {\n/** @type {?} */\nNgStyle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgStyle.ctorParameters;\n/** @type {?} */\nNgStyle.propDecorators;\n/** @type {?} */\nNgStyle.prototype._ngStyle;\n/** @type {?} */\nNgStyle.prototype._differ;\n/** @type {?} */\nNgStyle.prototype._differs;\n/** @type {?} */\nNgStyle.prototype._ngEl;\n/** @type {?} */\nNgStyle.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, Directive, Host, Input, TemplateRef, ViewContainerRef} from '@angular/core';\n\nimport {NgLocalization, getPluralCategory} from '../localization';\n\nimport {SwitchView} from './ng_switch';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n * \n * \\@howToUse \n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n * </some-element>\n * ```\n * \n * \\@description \n * \n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n * \n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n * \n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n * \n * \\@experimental\n */\nexport class NgPlural {\nprivate _switchValue: number;\nprivate _activeView: SwitchView;\nprivate _caseViews: {[k: string]: SwitchView} = {};\n/**\n * @param {?} _localization\n */\nconstructor(private _localization: NgLocalization) {}\n/**\n * @param {?} value\n * @return {?}\n */\nset ngPlural(value: number) {\n    this._switchValue = value;\n    this._updateView();\n  }\n/**\n * @param {?} value\n * @param {?} switchView\n * @return {?}\n */\naddCase(value: string, switchView: SwitchView): void { this._caseViews[value] = switchView; }\n/**\n * @return {?}\n */\nprivate _updateView(): void {\n    this._clearViews();\n\n    const /** @type {?} */ cases = Object.keys(this._caseViews);\n    const /** @type {?} */ key = getPluralCategory(this._switchValue, cases, this._localization);\n    this._activateView(this._caseViews[key]);\n  }\n/**\n * @return {?}\n */\nprivate _clearViews() {\n    if (this._activeView) this._activeView.destroy();\n  }\n/**\n * @param {?} view\n * @return {?}\n */\nprivate _activateView(view: SwitchView) {\n    if (view) {\n      this._activeView = view;\n      this._activeView.create();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPlural]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgLocalization, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngPlural': [{ type: Input },],\n};\n}\n\nfunction NgPlural_tsickle_Closure_declarations() {\n/** @type {?} */\nNgPlural.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgPlural.ctorParameters;\n/** @type {?} */\nNgPlural.propDecorators;\n/** @type {?} */\nNgPlural.prototype._switchValue;\n/** @type {?} */\nNgPlural.prototype._activeView;\n/** @type {?} */\nNgPlural.prototype._caseViews;\n/** @type {?} */\nNgPlural.prototype._localization;\n}\n\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgPlural} when the\n *             given expression matches the plural expression according to CLDR rules.\n * \n * \\@howToUse \n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\n * </some-element>\n * ```\n * \n * See {\\@link NgPlural} for more details and example.\n * \n * \\@experimental\n */\nexport class NgPluralCase {\n/**\n * @param {?} value\n * @param {?} template\n * @param {?} viewContainer\n * @param {?} ngPlural\n */\nconstructor(\npublic value: string, template: TemplateRef<Object>,\n      viewContainer: ViewContainerRef,  ngPlural: NgPlural) {\n    const isANumber: boolean = !isNaN(Number(value));\n    ngPlural.addCase(isANumber ? `=${value}` : value, new SwitchView(viewContainer, template));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPluralCase]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Attribute, args: ['ngPluralCase', ] }, ]},\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: NgPlural, decorators: [{ type: Host }, ]},\n];\n}\n\nfunction NgPluralCase_tsickle_Closure_declarations() {\n/** @type {?} */\nNgPluralCase.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgPluralCase.ctorParameters;\n/** @type {?} */\nNgPluralCase.prototype.value;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, DoCheck, Host, Input, TemplateRef, ViewContainerRef} from '@angular/core';\nexport class SwitchView {\nprivate _created = false;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _templateRef\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _templateRef: TemplateRef<Object>) {}\n/**\n * @return {?}\n */\ncreate(): void {\n    this._created = true;\n    this._viewContainerRef.createEmbeddedView(this._templateRef);\n  }\n/**\n * @return {?}\n */\ndestroy(): void {\n    this._created = false;\n    this._viewContainerRef.clear();\n  }\n/**\n * @param {?} created\n * @return {?}\n */\nenforceState(created: boolean) {\n    if (created && !this._created) {\n      this.create();\n    } else if (!created && this._created) {\n      this.destroy();\n    }\n  }\n}\n\nfunction SwitchView_tsickle_Closure_declarations() {\n/** @type {?} */\nSwitchView.prototype._created;\n/** @type {?} */\nSwitchView.prototype._viewContainerRef;\n/** @type {?} */\nSwitchView.prototype._templateRef;\n}\n\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch\n *             expression.\n * \n * \\@howToUse \n * ```\n *     <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n * \\@description \n * \n * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n * switch expression.\n * \n * In other words:\n * - you define a container element (where you place the directive with a switch expression on the\n * `[ngSwitch]=\"...\"` attribute)\n * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n * root elements.\n * \n * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n * be preserved at the location.\n * \n * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n * expression is evaluated.\n * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n * stamped out.\n * \n * \\@stable\n */\nexport class NgSwitch {\nprivate _defaultViews: SwitchView[];\nprivate _defaultUsed = false;\nprivate _caseCount = 0;\nprivate _lastCaseCheckIndex = 0;\nprivate _lastCasesMatched = false;\nprivate _ngSwitch: any;\n/**\n * @param {?} newValue\n * @return {?}\n */\nset ngSwitch(newValue: any) {\n    this._ngSwitch = newValue;\n    if (this._caseCount === 0) {\n      this._updateDefaultCases(true);\n    }\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_addCase(): number { return this._caseCount++; }\n/**\n * \\@internal\n * @param {?} view\n * @return {?}\n */\n_addDefault(view: SwitchView) {\n    if (!this._defaultViews) {\n      this._defaultViews = [];\n    }\n    this._defaultViews.push(view);\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_matchCase(value: any): boolean {\n    const /** @type {?} */ matched = value == this._ngSwitch;\n    this._lastCasesMatched = this._lastCasesMatched || matched;\n    this._lastCaseCheckIndex++;\n    if (this._lastCaseCheckIndex === this._caseCount) {\n      this._updateDefaultCases(!this._lastCasesMatched);\n      this._lastCaseCheckIndex = 0;\n      this._lastCasesMatched = false;\n    }\n    return matched;\n  }\n/**\n * @param {?} useDefault\n * @return {?}\n */\nprivate _updateDefaultCases(useDefault: boolean) {\n    if (this._defaultViews && useDefault !== this._defaultUsed) {\n      this._defaultUsed = useDefault;\n      for (let /** @type {?} */ i = 0; i < this._defaultViews.length; i++) {\n        const /** @type {?} */ defaultView = this._defaultViews[i];\n        defaultView.enforceState(useDefault);\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngSwitch]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngSwitch': [{ type: Input },],\n};\n}\n\nfunction NgSwitch_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSwitch.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSwitch.ctorParameters;\n/** @type {?} */\nNgSwitch.propDecorators;\n/** @type {?} */\nNgSwitch.prototype._defaultViews;\n/** @type {?} */\nNgSwitch.prototype._defaultUsed;\n/** @type {?} */\nNgSwitch.prototype._caseCount;\n/** @type {?} */\nNgSwitch.prototype._lastCaseCheckIndex;\n/** @type {?} */\nNgSwitch.prototype._lastCasesMatched;\n/** @type {?} */\nNgSwitch.prototype._ngSwitch;\n}\n\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgSwitch} when the\n *             given expression evaluate to respectively the same/different value as the switch\n *             expression.\n * \n * \\@howToUse \n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * </container-element>\n * ```\n * \\@description \n * \n * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n * expression.\n * \n * If multiple match expressions match the switch expression value, all of them are displayed.\n * \n * See {\\@link NgSwitch} for more details and example.\n * \n * \\@stable\n */\nexport class NgSwitchCase implements DoCheck {\nprivate _view: SwitchView;\n\n  \n  ngSwitchCase: any;\n/**\n * @param {?} viewContainer\n * @param {?} templateRef\n * @param {?} ngSwitch\n */\nconstructor(\n      viewContainer: ViewContainerRef, templateRef: TemplateRef<Object>,\nprivate ngSwitch: NgSwitch) {\n    ngSwitch._addCase();\n    this._view = new SwitchView(viewContainer, templateRef);\n  }\n/**\n * @return {?}\n */\nngDoCheck() { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngSwitchCase]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: NgSwitch, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngSwitchCase': [{ type: Input },],\n};\n}\n\nfunction NgSwitchCase_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSwitchCase.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSwitchCase.ctorParameters;\n/** @type {?} */\nNgSwitchCase.propDecorators;\n/** @type {?} */\nNgSwitchCase.prototype._view;\n/** @type {?} */\nNgSwitchCase.prototype.ngSwitchCase;\n/** @type {?} */\nNgSwitchCase.prototype.ngSwitch;\n}\n\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Creates a view that is added to the parent {\\@link NgSwitch} when no case expressions\n * match the\n *             switch expression.\n * \n * \\@howToUse \n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-other-element *ngSwitchDefault>...</some-other-element>\n * </container-element>\n * ```\n * \n * \\@description \n * \n * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n * expression.\n * \n * See {\\@link NgSwitch} for more details and example.\n * \n * \\@stable\n */\nexport class NgSwitchDefault {\n/**\n * @param {?} viewContainer\n * @param {?} templateRef\n * @param {?} ngSwitch\n */\nconstructor(\n      viewContainer: ViewContainerRef, templateRef: TemplateRef<Object>,\n       ngSwitch: NgSwitch) {\n    ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngSwitchDefault]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: NgSwitch, decorators: [{ type: Host }, ]},\n];\n}\n\nfunction NgSwitchDefault_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSwitchDefault.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSwitchDefault.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, EmbeddedViewRef, Input, TemplateRef, ViewContainerRef} from '@angular/core';\n/**\n * Conditionally includes a template based on the value of an `expression`.\n * \n * `ngIf` evaluates the `expression` and then renders the `then` or `else` template in its place\n * when expression is truthy or falsy respectively. Typically the:\n *  - `then` template is the inline template of `ngIf` unless bound to a different value.\n *  - `else` template is blank unless it is bound.\n * \n * # Most common usage\n * \n * The most common usage of the `ngIf` directive is to conditionally show the inline template as\n * seen in this example:\n * {\\@example common/ngIf/ts/module.ts region='NgIfSimple'}\n * \n * # Showing an alternative template using `else`\n * \n * If it is necessary to display a template when the `expression` is falsy use the `else` template\n * binding as shown. Note that the `else` binding points to a `<ng-template>` labeled `#elseBlock`.\n * The template can be defined anywhere in the component view but is typically placed right after\n * `ngIf` for readability.\n * \n * {\\@example common/ngIf/ts/module.ts region='NgIfElse'}\n * \n * # Using non-inlined `then` template\n * \n * Usually the `then` template is the inlined template of the `ngIf`, but it can be changed using\n * a binding (just like `else`). Because `then` and `else` are bindings, the template references can\n * change at runtime as shown in this example.\n * \n * {\\@example common/ngIf/ts/module.ts region='NgIfThenElse'}\n * \n * # Storing conditional result in a variable\n * \n * A common pattern is that we need to show a set of properties from the same object. If the\n * object is undefined, then we have to use the safe-traversal-operator `?.` to guard against\n * dereferencing a `null` value. This is especially the case when waiting on async data such as\n * when using the `async` pipe as shown in folowing example:\n * \n * ```\n * Hello {{ (userStream|async)?.last }}, {{ (userStream|async)?.first }}!\n * ```\n * \n * There are several inefficiencies in the above example:\n *  - We create multiple subscriptions on `userStream`. One for each `async` pipe, or two in the\n *    example above.\n *  - We cannot display an alternative screen while waiting for the data to arrive asynchronously.\n *  - We have to use the safe-traversal-operator `?.` to access properties, which is cumbersome.\n *  - We have to place the `async` pipe in parenthesis.\n * \n * A better way to do this is to use `ngIf` and store the result of the condition in a local\n * variable as shown in the the example below:\n * \n * {\\@example common/ngIf/ts/module.ts region='NgIfAs'}\n * \n * Notice that:\n *  - We use only one `async` pipe and hence only one subscription gets created.\n *  - `ngIf` stores the result of the `userStream|async` in the local variable `user`.\n *  - The local `user` can then be bound repeatedly in a more efficient way.\n *  - No need to use the safe-traversal-operator `?.` to access properties as `ngIf` will only\n *    display the data if `userStream` returns a value.\n *  - We can display an alternative template while waiting for the data.\n * \n * ### Syntax\n * \n * Simple form:\n * - `<div *ngIf=\"condition\">...</div>`\n * - `<div template=\"ngIf condition\">...</div>`\n * - `<ng-template [ngIf]=\"condition\"><div>...</div></ng-template>`\n * \n * Form with an else block:\n * ```\n * <div *ngIf=\"condition; else elseBlock\">...</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n * \n * Form with a `then` and `else` block:\n * ```\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n * <ng-template #thenBlock>...</ng-template>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n * \n * Form with storing the value locally:\n * ```\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n * \n * \\@stable\n */\nexport class NgIf {\nprivate _context: NgIfContext = new NgIfContext();\nprivate _thenTemplateRef: TemplateRef<NgIfContext> = null;\nprivate _elseTemplateRef: TemplateRef<NgIfContext> = null;\nprivate _thenViewRef: EmbeddedViewRef<NgIfContext> = null;\nprivate _elseViewRef: EmbeddedViewRef<NgIfContext> = null;\n/**\n * @param {?} _viewContainer\n * @param {?} templateRef\n */\nconstructor(private _viewContainer: ViewContainerRef, templateRef: TemplateRef<NgIfContext>) {\n    this._thenTemplateRef = templateRef;\n  }\n/**\n * @param {?} condition\n * @return {?}\n */\nset ngIf(condition: any) {\n    this._context.$implicit = this._context.ngIf = condition;\n    this._updateView();\n  }\n/**\n * @param {?} templateRef\n * @return {?}\n */\nset ngIfThen(templateRef: TemplateRef<NgIfContext>) {\n    this._thenTemplateRef = templateRef;\n    this._thenViewRef = null;  // clear previous view if any.\n    this._updateView();\n  }\n/**\n * @param {?} templateRef\n * @return {?}\n */\nset ngIfElse(templateRef: TemplateRef<NgIfContext>) {\n    this._elseTemplateRef = templateRef;\n    this._elseViewRef = null;  // clear previous view if any.\n    this._updateView();\n  }\n/**\n * @return {?}\n */\nprivate _updateView() {\n    if (this._context.$implicit) {\n      if (!this._thenViewRef) {\n        this._viewContainer.clear();\n        this._elseViewRef = null;\n        if (this._thenTemplateRef) {\n          this._thenViewRef =\n              this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n        }\n      }\n    } else {\n      if (!this._elseViewRef) {\n        this._viewContainer.clear();\n        this._thenViewRef = null;\n        if (this._elseTemplateRef) {\n          this._elseViewRef =\n              this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n        }\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngIf]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngIf': [{ type: Input },],\n'ngIfThen': [{ type: Input },],\n'ngIfElse': [{ type: Input },],\n};\n}\n\nfunction NgIf_tsickle_Closure_declarations() {\n/** @type {?} */\nNgIf.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgIf.ctorParameters;\n/** @type {?} */\nNgIf.propDecorators;\n/** @type {?} */\nNgIf.prototype._context;\n/** @type {?} */\nNgIf.prototype._thenTemplateRef;\n/** @type {?} */\nNgIf.prototype._elseTemplateRef;\n/** @type {?} */\nNgIf.prototype._thenViewRef;\n/** @type {?} */\nNgIf.prototype._elseViewRef;\n/** @type {?} */\nNgIf.prototype._viewContainer;\n}\n\n/**\n * \\@stable\n */\nexport class NgIfContext {\npublic $implicit: any = null;\npublic ngIf: any = null;\n}\n\nfunction NgIfContext_tsickle_Closure_declarations() {\n/** @type {?} */\nNgIfContext.prototype.$implicit;\n/** @type {?} */\nNgIfContext.prototype.ngIf;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, Directive, DoCheck, EmbeddedViewRef, Input, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDiffers, NgIterable, OnChanges, SimpleChanges, TemplateRef, TrackByFunction, ViewContainerRef, forwardRef, isDevMode} from '@angular/core';\n/**\n * \\@stable\n */\nexport class NgForOfContext<T> {\n/**\n * @param {?} $implicit\n * @param {?} ngForOf\n * @param {?} index\n * @param {?} count\n */\nconstructor(\npublic $implicit: T,\npublic ngForOf: NgIterable<T>,\npublic index: number,\npublic count: number) {}\n/**\n * @return {?}\n */\nget first(): boolean { return this.index === 0; }\n/**\n * @return {?}\n */\nget last(): boolean { return this.index === this.count - 1; }\n/**\n * @return {?}\n */\nget even(): boolean { return this.index % 2 === 0; }\n/**\n * @return {?}\n */\nget odd(): boolean { return !this.even; }\n}\n\nfunction NgForOfContext_tsickle_Closure_declarations() {\n/** @type {?} */\nNgForOfContext.prototype.$implicit;\n/** @type {?} */\nNgForOfContext.prototype.ngForOf;\n/** @type {?} */\nNgForOfContext.prototype.index;\n/** @type {?} */\nNgForOfContext.prototype.count;\n}\n\n/**\n * The `NgForOf` directive instantiates a template once per item from an iterable. The context\n * for each instantiated template inherits from the outer context with the given loop variable\n * set to the current item from the iterable.\n * \n * ### Local Variables\n * \n * `NgForOf` provides several exported values that can be aliased to local variables:\n * \n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\n * more complex then a property access, for example when using the async pipe (`userStreams |\n * async`).\n * - `index: number`: The index of the current item in the iterable.\n * - `first: boolean`: True when the item is the first item in the iterable.\n * - `last: boolean`: True when the item is the last item in the iterable.\n * - `even: boolean`: True when the item has an even index in the iterable.\n * - `odd: boolean`: True when the item has an odd index in the iterable.\n * \n * ```\n * <li *ngFor=\"let user of userObservable | async as users; indexes as i; first as isFirst\">\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\n * </li>\n * ```\n * \n * ### Change Propagation\n * \n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\n * \n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n * * Otherwise, the DOM element for that item will remain the same.\n * \n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n * those changes in the DOM. This has important implications for animations and any stateful\n * controls (such as `<input>` elements which accept user input) that are present. Inserted rows can\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\n * such as user input.\n * \n * It is possible for the identities of elements in the iterator to change while the data does not.\n * This can happen, for example, if the iterator produced from an RPC to the server, and that\n * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n * elements were deleted and all new elements inserted). This is an expensive operation and should\n * be avoided if possible.\n * \n * To customize the default tracking algorithm, `NgForOf` supports `trackBy` option.\n * `trackBy` takes a function which has two arguments: `index` and `item`.\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\n * \n * ### Syntax\n * \n * - `<li *ngFor=\"let item of items; let i = index; trackBy: trackByFn\">...</li>`\n * - `<li template=\"ngFor let item of items; let i = index; trackBy: trackByFn\">...</li>`\n * \n * With `<ng-template>` element:\n * \n * ```\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n *   <li>...</li>\n * </ng-template>\n * ```\n * \n * ### Example\n * \n * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n * example.\n * \n * \\@stable\n */\nexport class NgForOf<T> implements DoCheck, OnChanges {\n   ngForOf: NgIterable<T>;\n/**\n * @param {?} fn\n * @return {?}\n */\nset ngForTrackBy(fn: TrackByFunction<T>) {\n    if (isDevMode() && fn != null && typeof fn !== 'function') {\n      // TODO(vicb): use a log service once there is a public one available\n      if ( /** @type {?} */((<any>console)) && /** @type {?} */(( <any>console.warn))) {\n        console.warn(\n            `trackBy must be a function, but received ${JSON.stringify(fn)}. ` +\n            `See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.`);\n      }\n    }\n    this._trackByFn = fn;\n  }\n/**\n * @return {?}\n */\nget ngForTrackBy(): TrackByFunction<T> { return this._trackByFn; }\nprivate _differ: IterableDiffer<T> = null;\nprivate _trackByFn: TrackByFunction<T>;\n/**\n * @param {?} _viewContainer\n * @param {?} _template\n * @param {?} _differs\n */\nconstructor(\nprivate _viewContainer: ViewContainerRef,\nprivate _template: TemplateRef<NgForOfContext<T>>,\nprivate _differs: IterableDiffers) {}\n/**\n * @param {?} value\n * @return {?}\n */\nset ngForTemplate(value: TemplateRef<NgForOfContext<T>>) {\n    // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\n    // The current type is too restrictive; a template that just uses index, for example,\n    // should be acceptable.\n    if (value) {\n      this._template = value;\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if ('ngForOf' in changes) {\n      // React on ngForOf changes only once all inputs have been initialized\n      const /** @type {?} */ value = changes['ngForOf'].currentValue;\n      if (!this._differ && value) {\n        try {\n          this._differ = this._differs.find(value).create(this.ngForTrackBy);\n        } catch ( /** @type {?} */e) {\n          throw new Error(\n              `Cannot find a differ supporting object '${value}' of type '${getTypeNameForDebugging(value)}'. NgFor only supports binding to Iterables such as Arrays.`);\n        }\n      }\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n    if (this._differ) {\n      const /** @type {?} */ changes = this._differ.diff(this.ngForOf);\n      if (changes) this._applyChanges(changes);\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _applyChanges(changes: IterableChanges<T>) {\n    const /** @type {?} */ insertTuples: RecordViewTuple<T>[] = [];\n    changes.forEachOperation(\n        (item: IterableChangeRecord<any>, adjustedPreviousIndex: number, currentIndex: number) => {\n          if (item.previousIndex == null) {\n            const /** @type {?} */ view = this._viewContainer.createEmbeddedView(\n                this._template, new NgForOfContext(null, this.ngForOf, null, null), currentIndex);\n            const /** @type {?} */ tuple = new RecordViewTuple(item, view);\n            insertTuples.push(tuple);\n          } else if (currentIndex == null) {\n            this._viewContainer.remove(adjustedPreviousIndex);\n          } else {\n            const /** @type {?} */ view = this._viewContainer.get(adjustedPreviousIndex);\n            this._viewContainer.move(view, currentIndex);\n            const /** @type {?} */ tuple = new RecordViewTuple(item, /** @type {?} */(( <EmbeddedViewRef<NgForOfContext<T>>>view)));\n            insertTuples.push(tuple);\n          }\n        });\n\n    for (let /** @type {?} */ i = 0; i < insertTuples.length; i++) {\n      this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n    }\n\n    for (let /** @type {?} */ i = 0, /** @type {?} */ ilen = this._viewContainer.length; i < ilen; i++) {\n      const /** @type {?} */ viewRef = /** @type {?} */(( <EmbeddedViewRef<NgForOfContext<T>>>this._viewContainer.get(i)));\n      viewRef.context.index = i;\n      viewRef.context.count = ilen;\n    }\n\n    changes.forEachIdentityChange((record: any) => {\n      const /** @type {?} */ viewRef = /** @type {?} */((\n          <EmbeddedViewRef<NgForOfContext<T>>>this._viewContainer.get(record.currentIndex)));\n      viewRef.context.$implicit = record.item;\n    });\n  }\n/**\n * @param {?} view\n * @param {?} record\n * @return {?}\n */\nprivate _perViewChange(\n      view: EmbeddedViewRef<NgForOfContext<T>>, record: IterableChangeRecord<any>) {\n    view.context.$implicit = record.item;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngFor][ngForOf]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: IterableDiffers, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngForOf': [{ type: Input },],\n'ngForTrackBy': [{ type: Input },],\n'ngForTemplate': [{ type: Input },],\n};\n}\n\nfunction NgForOf_tsickle_Closure_declarations() {\n/** @type {?} */\nNgForOf.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgForOf.ctorParameters;\n/** @type {?} */\nNgForOf.propDecorators;\n/** @type {?} */\nNgForOf.prototype.ngForOf;\n/** @type {?} */\nNgForOf.prototype._differ;\n/** @type {?} */\nNgForOf.prototype._trackByFn;\n/** @type {?} */\nNgForOf.prototype._viewContainer;\n/** @type {?} */\nNgForOf.prototype._template;\n/** @type {?} */\nNgForOf.prototype._differs;\n}\n\nclass RecordViewTuple<T> {\n/**\n * @param {?} record\n * @param {?} view\n */\nconstructor(public record: any,\npublic view: EmbeddedViewRef<NgForOfContext<T>>) {}\n}\n\nfunction RecordViewTuple_tsickle_Closure_declarations() {\n/** @type {?} */\nRecordViewTuple.prototype.record;\n/** @type {?} */\nRecordViewTuple.prototype.view;\n}\n\n\n/**\n * @deprecated from v4.0.0 - Use NgForOf<any> instead.\n */\nexport type NgFor = NgForOf<any>;\n\n/**\n * @deprecated from v4.0.0 - Use NgForOf instead.\n */\nexport const /** @type {?} */ NgFor = NgForOf;\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentFactoryResolver, ComponentRef, Directive, Injector, Input, NgModuleFactory, NgModuleRef, OnChanges, OnDestroy, Provider, SimpleChanges, Type, ViewContainerRef} from '@angular/core';\n/**\n * Instantiates a single {\\@link Component} type and inserts its Host View into current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n * \n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will get destroyed.\n * \n * ### Fine tune control\n * \n * You can control the component creation process by using the following optional attributes:\n * \n * * `ngComponentOutletInjector`: Optional custom {\\@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n * \n * * `ngComponentOutletProviders`: Optional injectable objects ({\\@link Provider}) that are visible\n * to the component.\n * \n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if exists.\n * \n * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other\n * module, then load a component from that module.\n * \n * ### Syntax\n * \n * Simple\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n * \n * Customized injector/content\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n * \n * Customized ngModuleFactory\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModuleFactory: moduleFactory;\">\n * </ng-container>\n * ```\n * # Example\n * \n * {\\@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n * \n * A more complete example with additional options:\n * \n * {\\@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n * A more complete example with ngModuleFactory:\n * \n * {\\@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}\n * \n * \\@experimental\n */\nexport class NgComponentOutlet implements OnChanges, OnDestroy {\n   ngComponentOutlet: Type<any>;\n   ngComponentOutletInjector: Injector;\n   ngComponentOutletContent: any[][];\n   ngComponentOutletNgModuleFactory: NgModuleFactory<any>;\nprivate _componentRef: ComponentRef<any> = null;\nprivate _moduleRef: NgModuleRef<any> = null;\n/**\n * @param {?} _viewContainerRef\n */\nconstructor(private _viewContainerRef: ViewContainerRef) {}\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    this._viewContainerRef.clear();\n    this._componentRef = null;\n\n    if (this.ngComponentOutlet) {\n      const /** @type {?} */ elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n\n      if (changes['ngComponentOutletNgModuleFactory']) {\n        if (this._moduleRef) this._moduleRef.destroy();\n\n        if (this.ngComponentOutletNgModuleFactory) {\n          const /** @type {?} */ parentModule = elInjector.get(NgModuleRef);\n          this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);\n        } else {\n          this._moduleRef = null;\n        }\n      }\n\n      const /** @type {?} */ componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :\n                                                         elInjector.get(ComponentFactoryResolver);\n\n      const /** @type {?} */ componentFactory =\n          componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);\n\n      this._componentRef = this._viewContainerRef.createComponent(\n          componentFactory, this._viewContainerRef.length, elInjector,\n          this.ngComponentOutletContent);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._moduleRef) this._moduleRef.destroy();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngComponentOutlet]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngComponentOutlet': [{ type: Input },],\n'ngComponentOutletInjector': [{ type: Input },],\n'ngComponentOutletContent': [{ type: Input },],\n'ngComponentOutletNgModuleFactory': [{ type: Input },],\n};\n}\n\nfunction NgComponentOutlet_tsickle_Closure_declarations() {\n/** @type {?} */\nNgComponentOutlet.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgComponentOutlet.ctorParameters;\n/** @type {?} */\nNgComponentOutlet.propDecorators;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutlet;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutletInjector;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutletContent;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutletNgModuleFactory;\n/** @type {?} */\nNgComponentOutlet.prototype._componentRef;\n/** @type {?} */\nNgComponentOutlet.prototype._moduleRef;\n/** @type {?} */\nNgComponentOutlet.prototype._viewContainerRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, DoCheck, ElementRef, Input, IterableChanges, IterableDiffer, IterableDiffers, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Renderer, ɵisListLikeIterable as isListLikeIterable, ɵstringify as stringify} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Adds and removes CSS classes on an HTML element.\n * \n * \\@howToUse \n * ```\n *     <some-element [ngClass]=\"'first second'\">...</some-element>\n * \n *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n * \n *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n * \n *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n * \n *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n * \n * \\@description \n * \n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n * \n * \\@stable\n */\nexport class NgClass implements DoCheck {\nprivate _iterableDiffer: IterableDiffer<string>;\nprivate _keyValueDiffer: KeyValueDiffer<string, any>;\nprivate _initialClasses: string[] = [];\nprivate _rawClass: string[]|Set<string>|{[klass: string]: any};\n/**\n * @param {?} _iterableDiffers\n * @param {?} _keyValueDiffers\n * @param {?} _ngEl\n * @param {?} _renderer\n */\nconstructor(\nprivate _iterableDiffers: IterableDiffers,\nprivate _keyValueDiffers: KeyValueDiffers,\nprivate _ngEl: ElementRef,\nprivate _renderer: Renderer) {}\n/**\n * @param {?} v\n * @return {?}\n */\nset klass(v: string) {\n    this._applyInitialClasses(true);\n    this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n    this._applyInitialClasses(false);\n    this._applyClasses(this._rawClass, false);\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset ngClass(v: string|string[]|Set<string>|{[klass: string]: any}) {\n    this._cleanupClasses(this._rawClass);\n\n    this._iterableDiffer = null;\n    this._keyValueDiffer = null;\n\n    this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n\n    if (this._rawClass) {\n      if (isListLikeIterable(this._rawClass)) {\n        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();\n      } else {\n        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();\n      }\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n    if (this._iterableDiffer) {\n      const /** @type {?} */ iterableChanges = this._iterableDiffer.diff( /** @type {?} */((this._rawClass as string[])));\n      if (iterableChanges) {\n        this._applyIterableChanges(iterableChanges);\n      }\n    } else if (this._keyValueDiffer) {\n      const /** @type {?} */ keyValueChanges = this._keyValueDiffer.diff( /** @type {?} */((this._rawClass as{[k: string]: any})));\n      if (keyValueChanges) {\n        this._applyKeyValueChanges(keyValueChanges);\n      }\n    }\n  }\n/**\n * @param {?} rawClassVal\n * @return {?}\n */\nprivate _cleanupClasses(rawClassVal: string[]|{[klass: string]: any}): void {\n    this._applyClasses(rawClassVal, true);\n    this._applyInitialClasses(false);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _applyKeyValueChanges(changes: KeyValueChanges<string, any>): void {\n    changes.forEachAddedItem((record) => this._toggleClass(record.key, record.currentValue));\n    changes.forEachChangedItem((record) => this._toggleClass(record.key, record.currentValue));\n    changes.forEachRemovedItem((record) => {\n      if (record.previousValue) {\n        this._toggleClass(record.key, false);\n      }\n    });\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _applyIterableChanges(changes: IterableChanges<string>): void {\n    changes.forEachAddedItem((record) => {\n      if (typeof record.item === 'string') {\n        this._toggleClass(record.item, true);\n      } else {\n        throw new Error(\n            `NgClass can only toggle CSS classes expressed as strings, got ${stringify(record.item)}`);\n      }\n    });\n\n    changes.forEachRemovedItem((record) => this._toggleClass(record.item, false));\n  }\n/**\n * @param {?} isCleanup\n * @return {?}\n */\nprivate _applyInitialClasses(isCleanup: boolean) {\n    this._initialClasses.forEach(klass => this._toggleClass(klass, !isCleanup));\n  }\n/**\n * @param {?} rawClassVal\n * @param {?} isCleanup\n * @return {?}\n */\nprivate _applyClasses(\n      rawClassVal: string[]|Set<string>|{[klass: string]: any}, isCleanup: boolean) {\n    if (rawClassVal) {\n      if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n        ( /** @type {?} */((<any>rawClassVal))).forEach((klass: string) => this._toggleClass(klass, !isCleanup));\n      } else {\n        Object.keys(rawClassVal).forEach(klass => {\n          if (rawClassVal[klass] != null) this._toggleClass(klass, !isCleanup);\n        });\n      }\n    }\n  }\n/**\n * @param {?} klass\n * @param {?} enabled\n * @return {?}\n */\nprivate _toggleClass(klass: string, enabled: any): void {\n    klass = klass.trim();\n    if (klass) {\n      klass.split(/\\s+/g).forEach(\n          klass => { this._renderer.setElementClass(this._ngEl.nativeElement, klass, !!enabled); });\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngClass]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IterableDiffers, },\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'klass': [{ type: Input, args: ['class', ] },],\n'ngClass': [{ type: Input },],\n};\n}\n\nfunction NgClass_tsickle_Closure_declarations() {\n/** @type {?} */\nNgClass.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgClass.ctorParameters;\n/** @type {?} */\nNgClass.propDecorators;\n/** @type {?} */\nNgClass.prototype._iterableDiffer;\n/** @type {?} */\nNgClass.prototype._keyValueDiffer;\n/** @type {?} */\nNgClass.prototype._initialClasses;\n/** @type {?} */\nNgClass.prototype._rawClass;\n/** @type {?} */\nNgClass.prototype._iterableDiffers;\n/** @type {?} */\nNgClass.prototype._keyValueDiffers;\n/** @type {?} */\nNgClass.prototype._ngEl;\n/** @type {?} */\nNgClass.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, LOCALE_ID} from '@angular/core';\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class NgLocalization {\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\ngetPluralCategory(value: any) {} }\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n * \n * \\@internal\n * @param {?} value\n * @param {?} cases\n * @param {?} ngLocalization\n * @return {?}\n */\nexport function getPluralCategory(\n    value: number, cases: string[], ngLocalization: NgLocalization): string {\n  let /** @type {?} */ key = `=${value}`;\n\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n\n  key = ngLocalization.getPluralCategory(value);\n\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n\n  if (cases.indexOf('other') > -1) {\n    return 'other';\n  }\n\n  throw new Error(`No plural message found for value \"${value}\"`);\n}\n/**\n * Returns the plural case based on the locale\n * \n * \\@experimental\n */\nexport class NgLocaleLocalization extends NgLocalization {\n/**\n * @param {?} locale\n */\nconstructor( protected locale: string) { super(); }\n/**\n * @param {?} value\n * @return {?}\n */\ngetPluralCategory(value: any): string {\n    const /** @type {?} */ plural = getPluralCase(this.locale, value);\n\n    switch (plural) {\n      case Plural.Zero:\n        return 'zero';\n      case Plural.One:\n        return 'one';\n      case Plural.Two:\n        return 'two';\n      case Plural.Few:\n        return 'few';\n      case Plural.Many:\n        return 'many';\n      default:\n        return 'other';\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction NgLocaleLocalization_tsickle_Closure_declarations() {\n/** @type {?} */\nNgLocaleLocalization.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgLocaleLocalization.ctorParameters;\n/** @type {?} */\nNgLocaleLocalization.prototype.locale;\n}\n\nexport type Plural = number;\nexport let Plural: any = {};\nPlural.Zero = 0;\nPlural.One = 1;\nPlural.Two = 2;\nPlural.Few = 3;\nPlural.Many = 4;\nPlural.Other = 5;\nPlural[Plural.Zero] = \"Zero\";\nPlural[Plural.One] = \"One\";\nPlural[Plural.Two] = \"Two\";\nPlural[Plural.Few] = \"Few\";\nPlural[Plural.Many] = \"Many\";\nPlural[Plural.Other] = \"Other\";\n\n/**\n * Returns the plural case based on the locale\n * \n * \\@experimental\n * @param {?} locale\n * @param {?} nLike\n * @return {?}\n */\nexport function getPluralCase(locale: string, nLike: number | string): Plural {\n  // TODO(vicb): lazy compute\n  if (typeof nLike === 'string') {\n    nLike = parseInt( /** @type {?} */((<string>nLike)), 10);\n  }\n  const /** @type {?} */ n: number = /** @type {?} */(( nLike as number));\n  const /** @type {?} */ nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n  const /** @type {?} */ i = Math.floor(Math.abs(n));\n  const /** @type {?} */ v = nDecimal.length;\n  const /** @type {?} */ f = parseInt(nDecimal, 10);\n  const /** @type {?} */ t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n\n  const /** @type {?} */ lang = locale.split('-')[0].toLowerCase();\n\n  switch (lang) {\n    case 'af':\n    case 'asa':\n    case 'az':\n    case 'bem':\n    case 'bez':\n    case 'bg':\n    case 'brx':\n    case 'ce':\n    case 'cgg':\n    case 'chr':\n    case 'ckb':\n    case 'ee':\n    case 'el':\n    case 'eo':\n    case 'es':\n    case 'eu':\n    case 'fo':\n    case 'fur':\n    case 'gsw':\n    case 'ha':\n    case 'haw':\n    case 'hu':\n    case 'jgo':\n    case 'jmc':\n    case 'ka':\n    case 'kk':\n    case 'kkj':\n    case 'kl':\n    case 'ks':\n    case 'ksb':\n    case 'ky':\n    case 'lb':\n    case 'lg':\n    case 'mas':\n    case 'mgo':\n    case 'ml':\n    case 'mn':\n    case 'nb':\n    case 'nd':\n    case 'ne':\n    case 'nn':\n    case 'nnh':\n    case 'nyn':\n    case 'om':\n    case 'or':\n    case 'os':\n    case 'ps':\n    case 'rm':\n    case 'rof':\n    case 'rwk':\n    case 'saq':\n    case 'seh':\n    case 'sn':\n    case 'so':\n    case 'sq':\n    case 'ta':\n    case 'te':\n    case 'teo':\n    case 'tk':\n    case 'tr':\n    case 'ug':\n    case 'uz':\n    case 'vo':\n    case 'vun':\n    case 'wae':\n    case 'xog':\n      if (n === 1) return Plural.One;\n      return Plural.Other;\n    case 'agq':\n    case 'bas':\n    case 'cu':\n    case 'dav':\n    case 'dje':\n    case 'dua':\n    case 'dyo':\n    case 'ebu':\n    case 'ewo':\n    case 'guz':\n    case 'kam':\n    case 'khq':\n    case 'ki':\n    case 'kln':\n    case 'kok':\n    case 'ksf':\n    case 'lrc':\n    case 'lu':\n    case 'luo':\n    case 'luy':\n    case 'mer':\n    case 'mfe':\n    case 'mgh':\n    case 'mua':\n    case 'mzn':\n    case 'nmg':\n    case 'nus':\n    case 'qu':\n    case 'rn':\n    case 'rw':\n    case 'sbp':\n    case 'twq':\n    case 'vai':\n    case 'yav':\n    case 'yue':\n    case 'zgh':\n    case 'ak':\n    case 'ln':\n    case 'mg':\n    case 'pa':\n    case 'ti':\n      if (n === Math.floor(n) && n >= 0 && n <= 1) return Plural.One;\n      return Plural.Other;\n    case 'am':\n    case 'as':\n    case 'bn':\n    case 'fa':\n    case 'gu':\n    case 'hi':\n    case 'kn':\n    case 'mr':\n    case 'zu':\n      if (i === 0 || n === 1) return Plural.One;\n      return Plural.Other;\n    case 'ar':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10) return Plural.Few;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99) return Plural.Many;\n      return Plural.Other;\n    case 'ast':\n    case 'ca':\n    case 'de':\n    case 'en':\n    case 'et':\n    case 'fi':\n    case 'fy':\n    case 'gl':\n    case 'it':\n    case 'nl':\n    case 'sv':\n    case 'sw':\n    case 'ur':\n    case 'yi':\n      if (i === 1 && v === 0) return Plural.One;\n      return Plural.Other;\n    case 'be':\n      if (n % 10 === 1 && !(n % 100 === 11)) return Plural.One;\n      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n          !(n % 100 >= 12 && n % 100 <= 14))\n        return Plural.Few;\n      if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n          n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'br':\n      if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91)) return Plural.One;\n      if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92)) return Plural.Two;\n      if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n          !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n            n % 100 >= 90 && n % 100 <= 99))\n        return Plural.Few;\n      if (!(n === 0) && n % 1e6 === 0) return Plural.Many;\n      return Plural.Other;\n    case 'bs':\n    case 'hr':\n    case 'sr':\n      if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n        return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n              !(i % 100 >= 12 && i % 100 <= 14) ||\n          f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n              !(f % 100 >= 12 && f % 100 <= 14))\n        return Plural.Few;\n      return Plural.Other;\n    case 'cs':\n    case 'sk':\n      if (i === 1 && v === 0) return Plural.One;\n      if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0) return Plural.Few;\n      if (!(v === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'cy':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n === 3) return Plural.Few;\n      if (n === 6) return Plural.Many;\n      return Plural.Other;\n    case 'da':\n      if (n === 1 || !(t === 0) && (i === 0 || i === 1)) return Plural.One;\n      return Plural.Other;\n    case 'dsb':\n    case 'hsb':\n      if (v === 0 && i % 100 === 1 || f % 100 === 1) return Plural.One;\n      if (v === 0 && i % 100 === 2 || f % 100 === 2) return Plural.Two;\n      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n          f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n        return Plural.Few;\n      return Plural.Other;\n    case 'ff':\n    case 'fr':\n    case 'hy':\n    case 'kab':\n      if (i === 0 || i === 1) return Plural.One;\n      return Plural.Other;\n    case 'fil':\n      if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n          v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n          !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n        return Plural.One;\n      return Plural.Other;\n    case 'ga':\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n === Math.floor(n) && n >= 3 && n <= 6) return Plural.Few;\n      if (n === Math.floor(n) && n >= 7 && n <= 10) return Plural.Many;\n      return Plural.Other;\n    case 'gd':\n      if (n === 1 || n === 11) return Plural.One;\n      if (n === 2 || n === 12) return Plural.Two;\n      if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19)) return Plural.Few;\n      return Plural.Other;\n    case 'gv':\n      if (v === 0 && i % 10 === 1) return Plural.One;\n      if (v === 0 && i % 10 === 2) return Plural.Two;\n      if (v === 0 &&\n          (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n        return Plural.Few;\n      if (!(v === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'he':\n      if (i === 1 && v === 0) return Plural.One;\n      if (i === 2 && v === 0) return Plural.Two;\n      if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0) return Plural.Many;\n      return Plural.Other;\n    case 'is':\n      if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0)) return Plural.One;\n      return Plural.Other;\n    case 'ksh':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      return Plural.Other;\n    case 'kw':\n    case 'naq':\n    case 'se':\n    case 'smn':\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      return Plural.Other;\n    case 'lag':\n      if (n === 0) return Plural.Zero;\n      if ((i === 0 || i === 1) && !(n === 0)) return Plural.One;\n      return Plural.Other;\n    case 'lt':\n      if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19)) return Plural.One;\n      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n          !(n % 100 >= 11 && n % 100 <= 19))\n        return Plural.Few;\n      if (!(f === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'lv':\n    case 'prg':\n      if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n          v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n        return Plural.Zero;\n      if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n          !(v === 2) && f % 10 === 1)\n        return Plural.One;\n      return Plural.Other;\n    case 'mk':\n      if (v === 0 && i % 10 === 1 || f % 10 === 1) return Plural.One;\n      return Plural.Other;\n    case 'mt':\n      if (n === 1) return Plural.One;\n      if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n        return Plural.Few;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19) return Plural.Many;\n      return Plural.Other;\n    case 'pl':\n      if (i === 1 && v === 0) return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n          !(i % 100 >= 12 && i % 100 <= 14))\n        return Plural.Few;\n      if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n          v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n          v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'pt':\n      if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2)) return Plural.One;\n      return Plural.Other;\n    case 'ro':\n      if (i === 1 && v === 0) return Plural.One;\n      if (!(v === 0) || n === 0 ||\n          !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n        return Plural.Few;\n      return Plural.Other;\n    case 'ru':\n    case 'uk':\n      if (v === 0 && i % 10 === 1 && !(i % 100 === 11)) return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n          !(i % 100 >= 12 && i % 100 <= 14))\n        return Plural.Few;\n      if (v === 0 && i % 10 === 0 ||\n          v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n          v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'shi':\n      if (i === 0 || n === 1) return Plural.One;\n      if (n === Math.floor(n) && n >= 2 && n <= 10) return Plural.Few;\n      return Plural.Other;\n    case 'si':\n      if (n === 0 || n === 1 || i === 0 && f === 1) return Plural.One;\n      return Plural.Other;\n    case 'sl':\n      if (v === 0 && i % 100 === 1) return Plural.One;\n      if (v === 0 && i % 100 === 2) return Plural.Two;\n      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n        return Plural.Few;\n      return Plural.Other;\n    case 'tzm':\n      if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n        return Plural.One;\n      return Plural.Other;\n    default:\n      return Plural.Other;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Optional} from '@angular/core';\n\n\nimport {Location} from './location';\nimport {APP_BASE_HREF, LocationStrategy} from './location_strategy';\nimport {LocationChangeListener, PlatformLocation} from './platform_location';\n/**\n * \\@whatItDoes Use URL for storing application location data.\n * \\@description \n * `PathLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n * {\\@link Location} service to represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n * \n * If you're using `PathLocationStrategy`, you must provide a {\\@link APP_BASE_HREF}\n * or add a base element to the document. This URL prefix that will be preserved\n * when generating and recognizing URLs.\n * \n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n * \n * Similarly, if you add `<base href='/my/app'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n * \n * ### Example\n * \n * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n * \n * \\@stable\n */\nexport class PathLocationStrategy extends LocationStrategy {\nprivate _baseHref: string;\n/**\n * @param {?} _platformLocation\n * @param {?=} href\n */\nconstructor(\nprivate _platformLocation: PlatformLocation,\n        href?: string) {\n    super();\n\n    if (href == null) {\n      href = this._platformLocation.getBaseHrefFromDOM();\n    }\n\n    if (href == null) {\n      throw new Error(\n          `No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.`);\n    }\n\n    this._baseHref = href;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener): void {\n    this._platformLocation.onPopState(fn);\n    this._platformLocation.onHashChange(fn);\n  }\n/**\n * @return {?}\n */\ngetBaseHref(): string { return this._baseHref; }\n/**\n * @param {?} internal\n * @return {?}\n */\nprepareExternalUrl(internal: string): string {\n    return Location.joinWithSlash(this._baseHref, internal);\n  }\n/**\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash: boolean = false): string {\n    const /** @type {?} */ pathname = this._platformLocation.pathname +\n        Location.normalizeQueryParams(this._platformLocation.search);\n    const /** @type {?} */ hash = this._platformLocation.hash;\n    return hash && includeHash ? `${pathname}${hash}` : pathname;\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\npushState(state: any, title: string, url: string, queryParams: string) {\n    const /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n    this._platformLocation.pushState(state, title, externalUrl);\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\nreplaceState(state: any, title: string, url: string, queryParams: string) {\n    const /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n    this._platformLocation.replaceState(state, title, externalUrl);\n  }\n/**\n * @return {?}\n */\nforward(): void { this._platformLocation.forward(); }\n/**\n * @return {?}\n */\nback(): void { this._platformLocation.back(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PlatformLocation, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF, ] }, ]},\n];\n}\n\nfunction PathLocationStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nPathLocationStrategy.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPathLocationStrategy.ctorParameters;\n/** @type {?} */\nPathLocationStrategy.prototype._baseHref;\n/** @type {?} */\nPathLocationStrategy.prototype._platformLocation;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Optional} from '@angular/core';\n\n\nimport {Location} from './location';\nimport {APP_BASE_HREF, LocationStrategy} from './location_strategy';\nimport {LocationChangeListener, PlatformLocation} from './platform_location';\n/**\n * \\@whatItDoes Use URL hash for storing application location data.\n * \\@description \n * `HashLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n * {\\@link Location} service to represent its state in the\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n * of the browser's URL.\n * \n * For instance, if you call `location.go('/foo')`, the browser's URL will become\n * `example.com#/foo`.\n * \n * ### Example\n * \n * {\\@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n * \n * \\@stable\n */\nexport class HashLocationStrategy extends LocationStrategy {\nprivate _baseHref: string = '';\n/**\n * @param {?} _platformLocation\n * @param {?=} _baseHref\n */\nconstructor(\nprivate _platformLocation: PlatformLocation,\n        _baseHref?: string) {\n    super();\n    if (_baseHref != null) {\n      this._baseHref = _baseHref;\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener): void {\n    this._platformLocation.onPopState(fn);\n    this._platformLocation.onHashChange(fn);\n  }\n/**\n * @return {?}\n */\ngetBaseHref(): string { return this._baseHref; }\n/**\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash: boolean = false): string {\n    // the hash value is always prefixed with a `#`\n    // and if it is empty then it will stay empty\n    let /** @type {?} */ path = this._platformLocation.hash;\n    if (path == null) path = '#';\n\n    return path.length > 0 ? path.substring(1) : path;\n  }\n/**\n * @param {?} internal\n * @return {?}\n */\nprepareExternalUrl(internal: string): string {\n    const /** @type {?} */ url = Location.joinWithSlash(this._baseHref, internal);\n    return url.length > 0 ? ('#' + url) : url;\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} path\n * @param {?} queryParams\n * @return {?}\n */\npushState(state: any, title: string, path: string, queryParams: string) {\n    let /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n    if (url.length == 0) {\n      url = this._platformLocation.pathname;\n    }\n    this._platformLocation.pushState(state, title, url);\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} path\n * @param {?} queryParams\n * @return {?}\n */\nreplaceState(state: any, title: string, path: string, queryParams: string) {\n    let /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n    if (url.length == 0) {\n      url = this._platformLocation.pathname;\n    }\n    this._platformLocation.replaceState(state, title, url);\n  }\n/**\n * @return {?}\n */\nforward(): void { this._platformLocation.forward(); }\n/**\n * @return {?}\n */\nback(): void { this._platformLocation.back(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PlatformLocation, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF, ] }, ]},\n];\n}\n\nfunction HashLocationStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nHashLocationStrategy.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHashLocationStrategy.ctorParameters;\n/** @type {?} */\nHashLocationStrategy.prototype._baseHref;\n/** @type {?} */\nHashLocationStrategy.prototype._platformLocation;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, Injectable} from '@angular/core';\n\nimport {LocationStrategy} from './location_strategy';\n\n/** @experimental */\nexport interface PopStateEvent {\n  pop?: boolean;\n  type?: string;\n  url?: string;\n}\n/**\n * \\@whatItDoes `Location` is a service that applications can use to interact with a browser's URL.\n * \\@description \n * Depending on which {\\@link LocationStrategy} is used, `Location` will either persist\n * to the URL's path or the URL's hash segment.\n * \n * Note: it's better to use {\\@link Router#navigate} service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n * \n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n * \n * ### Example\n * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n * \\@stable\n */\nexport class Location {\n/**\n * \\@internal\n */\n_subject: EventEmitter<any> = new EventEmitter();\n/**\n * \\@internal\n */\n_baseHref: string;\n/**\n * \\@internal\n */\n_platformStrategy: LocationStrategy;\n/**\n * @param {?} platformStrategy\n */\nconstructor(platformStrategy: LocationStrategy) {\n    this._platformStrategy = platformStrategy;\n    const browserBaseHref = this._platformStrategy.getBaseHref();\n    this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n    this._platformStrategy.onPopState((ev) => {\n      this._subject.emit({\n        'url': this.path(true),\n        'pop': true,\n        'type': ev.type,\n      });\n    });\n  }\n/**\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash: boolean = false): string {\n    return this.normalize(this._platformStrategy.path(includeHash));\n  }\n/**\n * Normalizes the given path and compares to the current normalized path.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\nisCurrentPathEqualTo(path: string, query: string = ''): boolean {\n    return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n  }\n/**\n * Given a string representing a URL, returns the normalized URL path without leading or\n * trailing slashes.\n * @param {?} url\n * @return {?}\n */\nnormalize(url: string): string {\n    return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n  }\n/**\n * Given a string representing a URL, returns the platform-specific external URL path.\n * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n * @param {?} url\n * @return {?}\n */\nprepareExternalUrl(url: string): string {\n    if (url && url[0] !== '/') {\n      url = '/' + url;\n    }\n    return this._platformStrategy.prepareExternalUrl(url);\n  }\n/**\n * Changes the browsers URL to the normalized version of the given URL, and pushes a\n * new item onto the platform's history.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\ngo(path: string, query: string = ''): void {\n    this._platformStrategy.pushState(null, '', path, query);\n  }\n/**\n * Changes the browsers URL to the normalized version of the given URL, and replaces\n * the top item on the platform's history stack.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\nreplaceState(path: string, query: string = ''): void {\n    this._platformStrategy.replaceState(null, '', path, query);\n  }\n/**\n * Navigates forward in the platform's history.\n * @return {?}\n */\nforward(): void { this._platformStrategy.forward(); }\n/**\n * Navigates back in the platform's history.\n * @return {?}\n */\nback(): void { this._platformStrategy.back(); }\n/**\n * Subscribe to the platform's `popState` events.\n * @param {?} onNext\n * @param {?=} onThrow\n * @param {?=} onReturn\n * @return {?}\n */\nsubscribe(\n      onNext: (value: PopStateEvent) => void, onThrow: (exception: any) => void = null,\n      onReturn: () => void = null): Object {\n    return this._subject.subscribe({next: onNext, error: onThrow, complete: onReturn});\n  }\n/**\n * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n * is.\n * @param {?} params\n * @return {?}\n */\npublic static normalizeQueryParams(params: string): string {\n    return params && params[0] !== '?' ? '?' + params : params;\n  }\n/**\n * Given 2 parts of a url, join them with a slash if needed.\n * @param {?} start\n * @param {?} end\n * @return {?}\n */\npublic static joinWithSlash(start: string, end: string): string {\n    if (start.length == 0) {\n      return end;\n    }\n    if (end.length == 0) {\n      return start;\n    }\n    let /** @type {?} */ slashes = 0;\n    if (start.endsWith('/')) {\n      slashes++;\n    }\n    if (end.startsWith('/')) {\n      slashes++;\n    }\n    if (slashes == 2) {\n      return start + end.substring(1);\n    }\n    if (slashes == 1) {\n      return start + end;\n    }\n    return start + '/' + end;\n  }\n/**\n * If url has a trailing slash, remove it, otherwise return url as is.\n * @param {?} url\n * @return {?}\n */\npublic static stripTrailingSlash(url: string): string { return url.replace(/\\/$/, ''); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocationStrategy, },\n];\n}\n\nfunction Location_tsickle_Closure_declarations() {\n/** @type {?} */\nLocation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocation.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nLocation.prototype._subject;\n/**\n * \\@internal\n * @type {?}\n */\nLocation.prototype._baseHref;\n/**\n * \\@internal\n * @type {?}\n */\nLocation.prototype._platformStrategy;\n}\n\n/**\n * @param {?} baseHref\n * @param {?} url\n * @return {?}\n */\nfunction _stripBaseHref(baseHref: string, url: string): string {\n  return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction _stripIndexHtml(url: string): string {\n  return url.replace(/\\/index.html$/, '');\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {LocationChangeListener} from './platform_location';\n/**\n * `LocationStrategy` is responsible for representing and reading route state\n * from the browser's URL. Angular provides two strategies:\n * {\\@link HashLocationStrategy} and {\\@link PathLocationStrategy}.\n * \n * This is used under the hood of the {\\@link Location} service.\n * \n * Applications should use the {\\@link Router} or {\\@link Location} services to\n * interact with application route state.\n * \n * For instance, {\\@link HashLocationStrategy} produces URLs like\n * `http://example.com#/foo`, and {\\@link PathLocationStrategy} produces\n * `http://example.com/foo` as an equivalent URL.\n * \n * See these two classes for more.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class LocationStrategy {\n/**\n * @abstract\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash?: boolean) {}\n/**\n * @abstract\n * @param {?} internal\n * @return {?}\n */\nprepareExternalUrl(internal: string) {}\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\npushState(state: any, title: string, url: string, queryParams: string) {}\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\nreplaceState(state: any, title: string, url: string, queryParams: string) {}\n/**\n * @abstract\n * @return {?}\n */\nforward() {}\n/**\n * @abstract\n * @return {?}\n */\nback() {}\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener) {}\n/**\n * @abstract\n * @return {?}\n */\ngetBaseHref() {}\n}\n\n\n/**\n * The `APP_BASE_HREF` token represents the base href to be used with the\n * {@link PathLocationStrategy}.\n *\n * If you're using {@link PathLocationStrategy}, you must provide a provider to a string\n * representing the URL prefix that should be preserved when generating and recognizing\n * URLs.\n *\n * ### Example\n *\n * ```typescript\n * import {Component, NgModule} from '@angular/core';\n * import {APP_BASE_HREF} from '@angular/common';\n *\n * @NgModule({\n *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n * })\n * class AppModule {}\n * ```\n *\n * @stable\n */\nexport const /** @type {?} */ APP_BASE_HREF = new InjectionToken<string>('appBaseHref');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {\\@link Location}.\n * \n * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n * agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms\n * that angular supports. For example, the default `PlatformLocation` is {\\@link\n * BrowserPlatformLocation},\n * however when you run your app in a WebWorker you use {\\@link WebWorkerPlatformLocation}.\n * \n * The `PlatformLocation` class is used directly by all implementations of {\\@link LocationStrategy}\n * when\n * they need to interact with the DOM apis like pushState, popState, etc...\n * \n * {\\@link LocationStrategy} in turn is used by the {\\@link Location} service which is used directly\n * by\n * the {\\@link Router} in order to navigate between routes. Since all interactions between {\\@link\n * Router} /\n * {\\@link Location} / {\\@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n * class\n * they are all platform independent.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class PlatformLocation {\n/**\n * @abstract\n * @return {?}\n */\ngetBaseHrefFromDOM() {}\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener) {}\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nonHashChange(fn: LocationChangeListener) {}\n/**\n * @return {?}\n */\nget pathname(): string { return null; }\n/**\n * @return {?}\n */\nget search(): string { return null; }\n/**\n * @return {?}\n */\nget hash(): string { return null; }\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\nreplaceState(state: any, title: string, url: string) {}\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\npushState(state: any, title: string, url: string) {}\n/**\n * @abstract\n * @return {?}\n */\nforward() {}\n/**\n * @abstract\n * @return {?}\n */\nback() {}\n}\n\n/**\n * @whatItDoes indicates when a location is initialized\n * @experimental\n */\nexport const /** @type {?} */ LOCATION_INITIALIZED = new InjectionToken<Promise<any>>('Location Initialized');\n\n/**\n * A serializable version of the event from onPopState or onHashChange\n *\n * @experimental\n */\nexport interface LocationChangeEvent { type: string; }\n\n/**\n * @experimental\n */\nexport interface LocationChangeListener { (e: LocationChangeEvent): any; }\n"],"names":["stringify","isListLikeIterable"],"mappings":"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,CAAM;QAuCX,KAtCK,KAAA,CAAM;QAuCX,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,KAAA,CAAM;QAuCX,KAtCK,KAAA,CAAM;QAuCX,KAtCK,IAAA,CAAK;QAuCV,KAtCK,KAAA,CAAM;QAuCX,KAtCK,IAAA,CAAK;QAuCV,KAtCK,KAAA,CAAM;QAuCX,KAtCK,KAAA,CAAM;QAuCX,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,KAAA,CAAM;QAuCX,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,KAAA,CAAM;QAuCX,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,KAAA,CAAM;QAuCX,KAtCK,KAAA,CAAM;QAuCX,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,KAAA,CAAM;QAuCX,KAtCK,KAAA,CAAM;QAuCX,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,KAAA,CAAM;QAuCX,KAtCK,KAAA,CAAM;QAuCX,KAtCK,KAAA,CAAM;QAuCX,KAtCK,KAAA,CAAM;QAuCX,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,KAAA,CAAM;QAuCX,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,IAAA,CAAK;QAuCV,KAtCK,KAAA,CAAM;QAuCX,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"}