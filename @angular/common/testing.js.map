{"version":3,"file":"testing.js","sources":["../../../../../packages/common/testing/index.ts","../../../../../packages/common/testing/src/testing.ts","../../../../../packages/common/testing/src/mock_location_strategy.ts","../../../../../packages/common/testing/src/location_mock.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the core/testing package.\n */\n\nexport * from './src/testing';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common/testing package.\n */\nexport {SpyLocation} from './location_mock';\nexport {MockLocationStrategy} from './mock_location_strategy';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationStrategy} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\n\n\n\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @stable\n */\n\nexport class MockLocationStrategy extends LocationStrategy {\n  internalBaseHref: string = '/';\n  internalPath: string = '/';\n  internalTitle: string = '';\n  urlChanges: string[] = [];\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  constructor() { super(); }\n\n  simulatePopState(url: string): void {\n    this.internalPath = url;\n    this._subject.emit(new _MockPopStateEvent(this.path()));\n  }\n\n  path(includeHash: boolean = false): string { return this.internalPath; }\n\n  prepareExternalUrl(internal: string): string {\n    if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n      return this.internalBaseHref + internal.substring(1);\n    }\n    return this.internalBaseHref + internal;\n  }\n\n  pushState(ctx: any, title: string, path: string, query: string): void {\n    this.internalTitle = title;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push(externalUrl);\n  }\n\n  replaceState(ctx: any, title: string, path: string, query: string): void {\n    this.internalTitle = title;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push('replace: ' + externalUrl);\n  }\n\n  onPopState(fn: (value: any) => void): void { this._subject.subscribe({next: fn}); }\n\n  getBaseHref(): string { return this.internalBaseHref; }\n\n  back(): void {\n    if (this.urlChanges.length > 0) {\n      this.urlChanges.pop();\n      const nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n      this.simulatePopState(nextUrl);\n    }\n  }\n\n  forward(): void { throw 'not implemented'; }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nclass _MockPopStateEvent {\n  pop: boolean = true;\n  type: string = 'popstate';\n  constructor(public newUrl: string) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location, LocationStrategy} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\n\n\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @experimental\n */\n\nexport class SpyLocation implements Location {\n  urlChanges: string[] = [];\n  private _history: LocationState[] = [new LocationState('', '')];\n  private _historyIndex: number = 0;\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  /** @internal */\n  _baseHref: string = '';\n  /** @internal */\n  _platformStrategy: LocationStrategy = null !;\n\n  setInitialPath(url: string) { this._history[this._historyIndex].path = url; }\n\n  setBaseHref(url: string) { this._baseHref = url; }\n\n  path(): string { return this._history[this._historyIndex].path; }\n\n  isCurrentPathEqualTo(path: string, query: string = ''): boolean {\n    const givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n    const currPath =\n        this.path().endsWith('/') ? this.path().substring(0, this.path().length - 1) : this.path();\n\n    return currPath == givenPath + (query.length > 0 ? ('?' + query) : '');\n  }\n\n  simulateUrlPop(pathname: string) { this._subject.emit({'url': pathname, 'pop': true}); }\n\n  simulateHashChange(pathname: string) {\n    // Because we don't prevent the native event, the browser will independently update the path\n    this.setInitialPath(pathname);\n    this.urlChanges.push('hash: ' + pathname);\n    this._subject.emit({'url': pathname, 'pop': true, 'type': 'hashchange'});\n  }\n\n  prepareExternalUrl(url: string): string {\n    if (url.length > 0 && !url.startsWith('/')) {\n      url = '/' + url;\n    }\n    return this._baseHref + url;\n  }\n\n  go(path: string, query: string = '') {\n    path = this.prepareExternalUrl(path);\n\n    if (this._historyIndex > 0) {\n      this._history.splice(this._historyIndex + 1);\n    }\n    this._history.push(new LocationState(path, query));\n    this._historyIndex = this._history.length - 1;\n\n    const locationState = this._history[this._historyIndex - 1];\n    if (locationState.path == path && locationState.query == query) {\n      return;\n    }\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.urlChanges.push(url);\n    this._subject.emit({'url': url, 'pop': false});\n  }\n\n  replaceState(path: string, query: string = '') {\n    path = this.prepareExternalUrl(path);\n\n    const history = this._history[this._historyIndex];\n    if (history.path == path && history.query == query) {\n      return;\n    }\n\n    history.path = path;\n    history.query = query;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.urlChanges.push('replace: ' + url);\n  }\n\n  forward() {\n    if (this._historyIndex < (this._history.length - 1)) {\n      this._historyIndex++;\n      this._subject.emit({'url': this.path(), 'pop': true});\n    }\n  }\n\n  back() {\n    if (this._historyIndex > 0) {\n      this._historyIndex--;\n      this._subject.emit({'url': this.path(), 'pop': true});\n    }\n  }\n\n  subscribe(\n      onNext: (value: any) => void, onThrow?: ((error: any) => void)|null,\n      onReturn?: (() => void)|null): Object {\n    return this._subject.subscribe({next: onNext, error: onThrow, complete: onReturn});\n  }\n\n  normalize(url: string): string { return null !; }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nclass LocationState {\n  path: string;\n  query: string;\n  constructor(path: string, query: string) {\n    this.path = path;\n    this.query = query;\n  }\n}\n"],"names":[],"mappings":";;;AGAA;;;;;;;AASA,AAGA;;;;;AAMA,AAAA,MAAA,WAAA,CAAA;IAAA,WAAA,GAAA;QACE,IAAF,CAAA,UAAY,GAAa,EAAA,CAAG;QAClB,IAAV,CAAA,QAAU,GAA4B,CAAA,IAAK,aAAA,CAAc,EAAC,EAAG,EAAA,CAAG,CAAC,CAAC;QACxD,IAAV,CAAA,aAAU,GAAwB,CAAA,CAAE;;QAElC,IAAF,CAAA,QAAU,GAAsB,IAAI,YAAA,EAAa,CAAE;;QAEjD,IAAF,CAAA,SAAW,GAAW,EAAA,CAAG;;QAEvB,IAAF,CAAA,iBAAmB,GAAqB,IAAK,CAAE;KAuF9C;IArFC,cAAc,CAAC,GAAK,EAAtB,EAAgC,IAAA,CAAK,QAAC,CAAQ,IAAC,CAAI,aAAC,CAAa,CAAC,IAAC,GAAM,GAAA,CAAI,EAAC;IAE5E,WAAW,CAAC,GAAK,EAAnB,EAA6B,IAAA,CAAK,SAAC,GAAW,GAAA,CAAI,EAAC;IAEjD,IAAI,GAAN,EAAmB,OAAO,IAAA,CAAK,QAAC,CAAQ,IAAC,CAAI,aAAC,CAAa,CAAC,IAAC,CAAI,EAAC;IAEhE,oBAAoB,CAAC,IAAM,EAAQ,KAArC,GAAqD,EAAA,EAArD;QACI,MAAM,SAAA,GAAY,IAAA,CAAK,QAAC,CAAQ,GAAC,CAAG,GAAG,IAAA,CAAK,SAAC,CAAS,CAAC,EAAE,IAAA,CAAK,MAAC,GAAQ,CAAA,CAAE,GAAG,IAAA,CAAK;QACjF,MAAM,QAAA,GACF,IAAI,CAAC,IAAC,EAAI,CAAE,QAAC,CAAQ,GAAC,CAAG,GAAG,IAAA,CAAK,IAAC,EAAI,CAAE,SAAC,CAAS,CAAC,EAAE,IAAA,CAAK,IAAC,EAAI,CAAE,MAAC,GAAQ,CAAA,CAAE,GAAG,IAAA,CAAK,IAAC,EAAI,CAAE;QAE/F,OAAO,QAAA,IAAY,SAAA,IAAY,KAAE,CAAK,MAAC,GAAQ,CAAA,IAAI,GAAE,GAAK,KAAA,IAAS,EAAA,CAAG,CAAC;KACxE;IAED,cAAc,CAAC,QAAU,EAA3B,EAAqC,IAAA,CAAK,QAAC,CAAQ,IAAC,CAAI,EAAC,KAAC,EAAM,QAAA,EAAU,KAAA,EAAO,IAAA,EAAK,CAAC,CAAC,EAAC;IAEvF,kBAAkB,CAAC,QAAU,EAA/B;;QAEI,IAAI,CAAC,cAAC,CAAc,QAAC,CAAQ,CAAC;QAC9B,IAAI,CAAC,UAAC,CAAU,IAAC,CAAI,QAAC,GAAU,QAAA,CAAS,CAAC;QAC1C,IAAI,CAAC,QAAC,CAAQ,IAAC,CAAI,EAAC,KAAC,EAAM,QAAA,EAAU,KAAA,EAAO,IAAA,EAAM,MAAA,EAAQ,YAAA,EAAa,CAAC,CAAC;KAC1E;IAED,kBAAkB,CAAC,GAAK,EAA1B;QACI,IAAI,GAAC,CAAG,MAAC,GAAQ,CAAA,IAAK,CAAA,GAAE,CAAG,UAAC,CAAU,GAAC,CAAG,EAAE;YAC1C,GAAG,GAAG,GAAA,GAAM,GAAA,CAAI;SACjB;QACD,OAAO,IAAA,CAAK,SAAC,GAAW,GAAA,CAAI;KAC7B;IAED,EAAE,CAAC,IAAM,EAAQ,KAAnB,GAAmC,EAAA,EAAnC;QACI,IAAI,GAAG,IAAA,CAAK,kBAAC,CAAkB,IAAC,CAAI,CAAC;QAErC,IAAI,IAAC,CAAI,aAAC,GAAe,CAAA,EAAG;YAC1B,IAAI,CAAC,QAAC,CAAQ,MAAC,CAAM,IAAC,CAAI,aAAC,GAAe,CAAA,CAAE,CAAC;SAC9C;QACD,IAAI,CAAC,QAAC,CAAQ,IAAC,CAAI,IAAI,aAAA,CAAc,IAAC,EAAK,KAAA,CAAM,CAAC,CAAC;QACnD,IAAI,CAAC,aAAC,GAAe,IAAA,CAAK,QAAC,CAAQ,MAAC,GAAQ,CAAA,CAAE;QAE9C,MAAM,aAAA,GAAgB,IAAA,CAAK,QAAC,CAAQ,IAAC,CAAI,aAAC,GAAe,CAAA,CAAE,CAAC;QAC5D,IAAI,aAAC,CAAa,IAAC,IAAO,IAAA,IAAQ,aAAA,CAAc,KAAC,IAAQ,KAAA,EAAO;YAC9D,OAAO;SACR;QAED,MAAM,GAAA,GAAM,IAAA,IAAO,KAAE,CAAK,MAAC,GAAQ,CAAA,IAAI,GAAE,GAAK,KAAA,IAAS,EAAA,CAAG,CAAC;QAC3D,IAAI,CAAC,UAAC,CAAU,IAAC,CAAI,GAAC,CAAG,CAAC;QAC1B,IAAI,CAAC,QAAC,CAAQ,IAAC,CAAI,EAAC,KAAC,EAAM,GAAA,EAAK,KAAA,EAAO,KAAA,EAAM,CAAC,CAAC;KAChD;IAED,YAAY,CAAC,IAAM,EAAQ,KAA7B,GAA6C,EAAA,EAA7C;QACI,IAAI,GAAG,IAAA,CAAK,kBAAC,CAAkB,IAAC,CAAI,CAAC;QAErC,MAAM,OAAA,GAAU,IAAA,CAAK,QAAC,CAAQ,IAAC,CAAI,aAAC,CAAa,CAAC;QAClD,IAAI,OAAC,CAAO,IAAC,IAAO,IAAA,IAAQ,OAAA,CAAQ,KAAC,IAAQ,KAAA,EAAO;YAClD,OAAO;SACR;QAED,OAAO,CAAC,IAAC,GAAM,IAAA,CAAK;QACpB,OAAO,CAAC,KAAC,GAAO,KAAA,CAAM;QAEtB,MAAM,GAAA,GAAM,IAAA,IAAO,KAAE,CAAK,MAAC,GAAQ,CAAA,IAAI,GAAE,GAAK,KAAA,IAAS,EAAA,CAAG,CAAC;QAC3D,IAAI,CAAC,UAAC,CAAU,IAAC,CAAI,WAAC,GAAa,GAAA,CAAI,CAAC;KACzC;IAED,OAAO,GAAT;QACI,IAAI,IAAC,CAAI,aAAC,IAAe,IAAE,CAAI,QAAC,CAAQ,MAAC,GAAQ,CAAA,CAAE,EAAE;YACnD,IAAI,CAAC,aAAC,EAAa,CAAE;YACrB,IAAI,CAAC,QAAC,CAAQ,IAAC,CAAI,EAAC,KAAC,EAAM,IAAA,CAAK,IAAC,EAAI,EAAG,KAAA,EAAO,IAAA,EAAK,CAAC,CAAC;SACvD;KACF;IAED,IAAI,GAAN;QACI,IAAI,IAAC,CAAI,aAAC,GAAe,CAAA,EAAG;YAC1B,IAAI,CAAC,aAAC,EAAa,CAAE;YACrB,IAAI,CAAC,QAAC,CAAQ,IAAC,CAAI,EAAC,KAAC,EAAM,IAAA,CAAK,IAAC,EAAI,EAAG,KAAA,EAAO,IAAA,EAAK,CAAC,CAAC;SACvD;KACF;IAED,SAAS,CACL,MAAwB,EAAM,OAAkC,EAChE,QAAyB,EAF/B;QAGI,OAAO,IAAA,CAAK,QAAC,CAAQ,SAAC,CAAS,EAAC,IAAC,EAAK,MAAA,EAAQ,KAAA,EAAO,OAAA,EAAS,QAAA,EAAU,QAAA,EAAS,CAAC,CAAC;KACpF;IAED,SAAS,CAAC,GAAK,EAAjB,EAAmC,OAAO,IAAK,CAAE,EAAC;;AAC3C,WAAP,CAAA,UAAiB,GAAqC;IACtD,EAAE,IAAI,EAAE,UAlGN,EAAA;CAmGD,CAAC;;AAEK,WAAP,CAAA,cAAqB,GAA8E,MAAM,EACxG,CAAC;AAGF,MAAA,aAAA,CAAA;IAGE,WAAF,CAAc,IANM,EAAQ,KAAO,EAMnC;QACI,IAAI,CANC,IAAC,GAAM,IAAA,CAAK;QAOjB,IAAI,CANC,KAAC,GAAO,KAAA,CAAM;KAOpB;CALF;;AD3HD;;;;;;;AAQA,AACA,AAIA;;;;;;AAOA,AAAA,MAAA,oBAAkC,SAAQ,gBAAA,CAA1C;IAOE,WAAF,GAAA;QAAkB,KAAA,EAAM,CAAE;QANxB,IAAF,CAAA,gBAAkB,GAAW,GAAA,CAAI;QAC/B,IAAF,CAAA,YAAc,GAAW,GAAA,CAAI;QAC3B,IAAF,CAAA,aAAe,GAAW,EAAA,CAAG;QAC3B,IAAF,CAAA,UAAY,GAAa,EAAA,CAAG;;QAE1B,IAAF,CAAA,QAAU,GAAsB,IAAI,YAAA,EAAa,CAAE;KACxB;IAEzB,gBAAgB,CAAC,GAAK,EAAxB;QACI,IAAI,CAAC,YAAC,GAAc,GAAA,CAAI;QACxB,IAAI,CAAC,QAAC,CAAQ,IAAC,CAAI,IAAI,kBAAA,CAAmB,IAAC,CAAI,IAAC,EAAI,CAAE,CAAC,CAAC;KACzD;IAED,IAAI,CAAC,WAAP,GAA8B,KAAA,EAA9B,EAA+C,OAAO,IAAA,CAAK,YAAC,CAAY,EAAC;IAEvE,kBAAkB,CAAC,QAAU,EAA/B;QACI,IAAI,QAAC,CAAQ,UAAC,CAAU,GAAC,CAAG,IAAI,IAAA,CAAK,gBAAC,CAAgB,QAAC,CAAQ,GAAC,CAAG,EAAE;YACnE,OAAO,IAAA,CAAK,gBAAC,GAAkB,QAAA,CAAS,SAAC,CAAS,CAAC,CAAC,CAAC;SACtD;QACD,OAAO,IAAA,CAAK,gBAAC,GAAkB,QAAA,CAAS;KACzC;IAED,SAAS,CAAC,GAAK,EAAK,KAAO,EAAQ,IAAM,EAAQ,KAAO,EAA1D;QACI,IAAI,CAAC,aAAC,GAAe,KAAA,CAAM;QAE3B,MAAM,GAAA,GAAM,IAAA,IAAO,KAAE,CAAK,MAAC,GAAQ,CAAA,IAAI,GAAE,GAAK,KAAA,IAAS,EAAA,CAAG,CAAC;QAC3D,IAAI,CAAC,YAAC,GAAc,GAAA,CAAI;QAExB,MAAM,WAAA,GAAc,IAAA,CAAK,kBAAC,CAAkB,GAAC,CAAG,CAAC;QACjD,IAAI,CAAC,UAAC,CAAU,IAAC,CAAI,WAAC,CAAW,CAAC;KACnC;IAED,YAAY,CAAC,GAAK,EAAK,KAAO,EAAQ,IAAM,EAAQ,KAAO,EAA7D;QACI,IAAI,CAAC,aAAC,GAAe,KAAA,CAAM;QAE3B,MAAM,GAAA,GAAM,IAAA,IAAO,KAAE,CAAK,MAAC,GAAQ,CAAA,IAAI,GAAE,GAAK,KAAA,IAAS,EAAA,CAAG,CAAC;QAC3D,IAAI,CAAC,YAAC,GAAc,GAAA,CAAI;QAExB,MAAM,WAAA,GAAc,IAAA,CAAK,kBAAC,CAAkB,GAAC,CAAG,CAAC;QACjD,IAAI,CAAC,UAAC,CAAU,IAAC,CAAI,WAAC,GAAa,WAAA,CAAY,CAAC;KACjD;IAED,UAAU,CAAC,EAAoB,EAAjC,EAA+C,IAAA,CAAK,QAAC,CAAQ,SAAC,CAAS,EAAC,IAAC,EAAK,EAAA,EAAG,CAAC,CAAC,EAAC;IAElF,WAAW,GAAb,EAA0B,OAAO,IAAA,CAAK,gBAAC,CAAgB,EAAC;IAEtD,IAAI,GAAN;QACI,IAAI,IAAC,CAAI,UAAC,CAAU,MAAC,GAAQ,CAAA,EAAG;YAC9B,IAAI,CAAC,UAAC,CAAU,GAAC,EAAG,CAAE;YACtB,MAAM,OAAA,GAAU,IAAA,CAAK,UAAC,CAAU,MAAC,GAAQ,CAAA,GAAI,IAAA,CAAK,UAAC,CAAU,IAAC,CAAI,UAAC,CAAU,MAAC,GAAQ,CAAA,CAAE,GAAG,EAAA,CAAG;YAC9F,IAAI,CAAC,gBAAC,CAAgB,OAAC,CAAO,CAAC;SAChC;KACF;IAED,OAAO,GAAT,EAAoB,MAAM,iBAAA,CAAkB,EAAC;;AACtC,oBAAP,CAAA,UAAiB,GAAqC;IACtD,EAAE,IAAI,EAAE,UA1DN,EAAA;CA2DD,CAAC;;AAEK,oBAAP,CAAA,cAAqB,GAA8E,MAAM,EACxG,CAAC;AAGF,MAAA,kBAAA,CAAA;IAGE,WAAF,CANqB,MAAQ,EAM7B;QANqB,IAArB,CAAA,MAAqB,GAAA,MAAA,CAAQ;QAI3B,IAAF,CAAA,GAAK,GANY,IAAA,CAAK;QAOpB,IAAF,CAAA,IAAM,GANW,UAAA,CAAW;KACS;CACpC;;ADlFD;;;;;;;;;;;GAYG,AACH,AACA,AAA8D;;ADd9D;;;;;;;;;;;GAYG,AAEH,AAA8B;;"}