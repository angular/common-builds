{"version":3,"file":"ng_plural.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/directives/ng_plural.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAU,WAAW,EAAE,gBAAgB,EAAC,MAAM,eAAe;OAE/F,EAAC,SAAS,EAAC,MAAM,gBAAgB;OACjC,EAAC,cAAc,EAAE,iBAAiB,EAAC,MAAM,iBAAiB;OAE1D,EAAC,UAAU,EAAC,MAAM,aAAa;AACtC;IAKE,YAAoB,aAA6B;QAA7B,kBAAa,GAAb,aAAa,CAAgB;QAFzC,eAAU,GAA8B,EAAE,CAAC;IAEC,CAAC;IACrD,IAAI,QAAQ,CAAC,KAAa;QACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,OAAO,CAAC,KAAa,EAAE,UAAsB,IAAU,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;IAE7F,gBAAgB;IAChB,WAAW;QACT,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,GAAG,GACH,iBAAiB,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC3F,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,gBAAgB;IAChB,WAAW;QACT,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC9D,CAAC;IAED,gBAAgB;IAChB,aAAa,CAAC,IAAgB;QAC5B,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;AAaH,CAAC;AAZD,kBAAkB;AACX,mBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,YAAY,EAAC,EAAG,EAAE;CACtD,CAAC;AACF,kBAAkB;AACX,uBAAc,GAA2D;IAChF,EAAC,IAAI,EAAE,cAAc,GAAG;CACvB,CAAC;AACF,kBAAkB;AACX,uBAAc,GAA2C;IAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC7B,CACA;AACD;IACE,YAAoB,KAAa,EAAE,QAA6B,EAC5D,aAA+B,EAAE,QAAkB;QADnC,UAAK,GAAL,KAAK,CAAQ;QAE/B,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,UAAU,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC;IACnE,CAAC;AAYH,CAAC;AAXD,kBAAkB;AACX,uBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,gBAAgB,EAAC,EAAG,EAAE;CAC1D,CAAC;AACF,kBAAkB;AACX,2BAAc,GAA2D;IAChF,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,cAAc,EAAG,EAAE,EAAG,EAAC;IAChF,EAAC,IAAI,EAAE,WAAW,GAAG;IACrB,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAG,EAAC;CAC/C,CACA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, Directive, Host, Input, OnInit, TemplateRef, ViewContainerRef} from '@angular/core';\n\nimport {isPresent} from '../facade/lang';\nimport {NgLocalization, getPluralCategory} from '../localization';\n\nimport {SwitchView} from './ng_switch';\nexport class NgPlural {\n  private _switchValue: number;\n  private _activeView: SwitchView;\n  private _caseViews: {[k: string]: SwitchView} = {};\n\n  constructor(private _localization: NgLocalization) {}\n  set ngPlural(value: number) {\n    this._switchValue = value;\n    this._updateView();\n  }\n\n  addCase(value: string, switchView: SwitchView): void { this._caseViews[value] = switchView; }\n\n  /** @internal */\n  _updateView(): void {\n    this._clearViews();\n\n    var key =\n        getPluralCategory(this._switchValue, Object.keys(this._caseViews), this._localization);\n    this._activateView(this._caseViews[key]);\n  }\n\n  /** @internal */\n  _clearViews() {\n    if (isPresent(this._activeView)) this._activeView.destroy();\n  }\n\n  /** @internal */\n  _activateView(view: SwitchView) {\n    if (!isPresent(view)) return;\n    this._activeView = view;\n    this._activeView.create();\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPlural]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: NgLocalization, },\n];\n/** @nocollapse */\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngPlural': [{ type: Input },],\n};\n}\nexport class NgPluralCase {\n  constructor( public value: string, template: TemplateRef<Object>,\n      viewContainer: ViewContainerRef, ngPlural: NgPlural) {\n    ngPlural.addCase(value, new SwitchView(viewContainer, template));\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPluralCase]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: undefined, decorators: [{ type: Attribute, args: ['ngPluralCase', ] }, ]},\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: NgPlural, decorators: [{ type: Host }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}