{"version":3,"file":"ng_if.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/directives/ng_if.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,gBAAgB,EAAC,MAAM,eAAe;OAEtE,EAAC,OAAO,EAAC,MAAM,gBAAgB;AACtC;IAGE,YAAoB,cAAgC,EAAU,YAAiC;QAA3E,mBAAc,GAAd,cAAc,CAAkB;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QAFvF,mBAAc,GAAY,IAAI,CAAC;IAGvC,CAAC;IACD,IAAI,IAAI,CAAC,YAAiB;QACxB,EAAE,CAAC,CAAC,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5D,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAClF,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC9B,CAAC;IACH,CAAC;AAcH,CAAC;AAbD,kBAAkB;AACX,eAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAC,EAAG,EAAE;CAClD,CAAC;AACF,kBAAkB;AACX,mBAAc,GAA2D;IAChF,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,WAAW,GAAG;CACpB,CAAC;AACF,kBAAkB;AACX,mBAAc,GAA2C;IAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CACzB,CACA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, TemplateRef, ViewContainerRef} from '@angular/core';\n\nimport {isBlank} from '../facade/lang';\nexport class NgIf {\n  private _prevCondition: boolean = null;\n\n  constructor(private _viewContainer: ViewContainerRef, private _templateRef: TemplateRef<Object>) {\n  }\n  set ngIf(newCondition: any) {\n    if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {\n      this._prevCondition = true;\n      this._viewContainer.createEmbeddedView(this._templateRef);\n    } else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {\n      this._prevCondition = false;\n      this._viewContainer.clear();\n    }\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngIf]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n];\n/** @nocollapse */\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngIf': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}