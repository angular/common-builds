{"version":3,"file":"invalid_pipe_argument_exception.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/pipes/invalid_pipe_argument_exception.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,aAAa,EAAO,MAAM,eAAe;OAC1C,EAAC,SAAS,EAAC,MAAM,gBAAgB;AAExC,kDAAkD,aAAa;IAC7D,YAAY,IAAe,EAAE,KAAa;QACxC,MAAM,qBAAqB,KAAK,eAAe,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrE,CAAC;AACH,CAAC;AAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BaseException, Type} from '@angular/core';\nimport {stringify} from '../facade/lang';\n\nexport class InvalidPipeArgumentException extends BaseException {\n  constructor(type: Type<any>, value: Object) {\n    super(`Invalid argument '${value}' for pipe '${stringify(type)}'`);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}